{
	"info": {
		"_postman_id": "1e050e67-fec0-4f62-be3b-01aa9522e94f",
		"name": "Business Partner Data",
		"description": "Busines Partner Data - OData Examples\n===================================== \n\nExamples to create and change Business Parnter related business objects using SAP Business ByDesign Custom OData Services and SOAP Services.\n\nBusiness Partner types:\n- Business Partners\n\t-\tBusiness Partner Person\n\t-\tBusiness Partner Organisation\n- Accounts\n\t-\tPrivate Account\n\t-\tCorporate Account\n- Suppliers\n\n\n&nbsp;\n\nBusiness Partners: Creates business partners, Accounts and Suppliers along with relevant information\n----------------------------------------------------------------------------------------------------\n\nRequired user authorizations (ByD Work Center Views):\n- *Business Parnter Data - Business Partners*\n- *Business Parnter Data - Accounts*\n- *Business Parnter Data - Suppliers*\n\nSetup:\nThis scenario requires to configure SOAP web service APIs:\n1. Work center view *Application and User Management - Communication Systems*: Create a communication system representing the remote system\n2. Work center view *Application and User Management - Communication Scenarios*: Create a communication scenario with the following web service APIs: \n\t- *Manage Business Partners*\n\t- *Query Business Partners*\t\n\t- *Manage Accounts*\n\t- *Query Accounts*\t\n\t- *Manage Suppliers*\n\t- *Query Suppliers*\n3. Work center view *Application and User Management - Communication Arrangements*: Create communication arrangement for your scenario of step 2, the communication system of step 1 and enter the credentials\n\n\nScenario: Business Partners - *Person*\n--------------------------------------\n1. Create business partners of type *Person* along with First Name and Last Name\n2. Update business partner created instance with Main Address ,Main Communication information information\n3. Creates Notes and updates the Notes information of business partner created instance\n4. Queries the business partner instance and gets the relevant informaiton\n4. Read the the business partner instance and gets the relevant information\n5. Activates the busienss partner instance\n6. Blocks the busienss partner instance\n7. Unblocks the busienss partner instance\n8. Obsoletes the busienss partner instance\n9. Revoke Obsolescene of the busienss partner instance\n10. Unblocks the busienss partner instance, which intern activates the business partner\n\n&nbsp;\n\nScenario: Business Partners - *Organisation*\n-------------------------------------------\n1. Create business partners of type *Organisation* along with Business Partner Name and Additional Name\n2. Update business partner created instance with Main Address ,Main Communication information information\n3. Creates Notes and updates the Notes information of business partner created instance\n4. Queries the business partner instance and gets the relevant informaiton\n4. Read the the business partner instance and gets the relevant information\n5. Activates the busienss partner instance\n6. Blocks the busienss partner instance\n7. Unblocks the busienss partner instance\n8. Obsoletes the busienss partner instance\n9. Revoke Obsolescene of the busienss partner instance\n10. Unblocks the busienss partner instance, which intern activates the business partner\n\nScenario: Accounts - *Private*\n------------------------------\n1. Create business partners of type *Person* along with relevant informaiton like FirstName, LastName and Person information, Address information relationship data and contact information, Notes information ...\n2. Queries the Account instance and gets the relevant informaiton\n3. Read the the Account instance and gets the relevant information\n4. Activates the Account instance\n5. Blocks the Account instance\n6. Unblocks the Account instance\n7. Obsoletes the Account instance\n8. Revoke Obsolescene of the Account instance\n9. Unblocks the Account instance, which intern activates the business partner\n\n&nbsp;\n\nScenario: Account - *Corporate*\n-------------------------------\n1. Create business partners of type *Corporate* along with relevant informaiton like Account Name, Account Additional Name and Account informaiton, ABC Classification, Industrial Sector, Address informaiton, relationship data and Contact Person informaiton, Direct Responsibility, Sales Arrangement, Tax Number,O perating Hours,  Note and Attachment information ...\n2. Queries the Account instance and gets the relevant informaiton\n3. Read the the Account instance and gets the relevant information\n4. Activates the Account instance\n5. Blocks the Account instance\n6. Unblocks the Account instance\n7. Obsoletes the Account instance\n8. Revoke Obsolescene of the Account instance\n9. Unblocks the Account instance, which intern activates the business partner\n\n&nbsp;\n\nScenario: Suppliers\n--------------------\n1. Create business partners of type *Supplier* along with relevant informaiton like Supplier Name, Supplier Additiona lName, Minimum Order Value, Purchasing Data, General Product Tax Exemption, Deviant Tax Classification, Withholding Tax Classification, General ProductTax Exemption, Contact Person informaiton, Note and Attachment information ...\n2. Queries the Suppliers instance and gets the relevant informaiton\n3. Read the the Suppliers and gets the relevant information\n4. Activates the Suppliers instance\n5. Blocks the Suppliers instance\n6. Unblocks the Suppliers instance\n7. Obsoletes the Suppliers instance\n8. Revoke Obsolescene of the Suppliers instance\n9. Unblocks the Suppliers instance, which intern activates the business partner\n&nbsp;",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Business Partners",
			"item": [
				{
					"name": "Business Partner Person",
					"item": [
						{
							"name": "Metadata business parnter",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d9051870-fcf4-4a84-9d2e-487464c33deb",
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"200 - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Business Partner forgery token:  received\", function () {",
											"    pm.response.to.have.header(\"x-csrf-token\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "711eb5e6-1b1e-46ba-b6ce-955c00dfb54f",
										"exec": [
											"//pm.environment.set(\"TenantHostname\", \"qch-cust120.dev.sapbydesign.com\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "",
											"type": "string"
										},
										{
											"key": "username",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmubusinesspartner/$metadata",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmubusinesspartner",
										"$metadata"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create business partner",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "012fb3c5-a7b6-47f5-99ba-8bdbf080ad2a",
										"exec": [
											"// Set Material ID of pattern VMU-<UTC datetime>",
											"var generatedBusinessPartnerName = \"VMU-\" + (new Date()).toISOString();",
											"pm.environment.set(\"BusinessPartnerName\", generatedBusinessPartnerName);",
											"",
											"// Use internal numbering for material IDs => initialize environment variable MaterialID",
											"//pm.environment.set(\"MaterialID\", \"\");",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "08083360-5ae0-4960-8702-5fb24133a521",
										"exec": [
											"",
											"var jsonResponse = pm.response.json();",
											"//console.log(jsonResponse.d.results[0].ID);",
											"pm.environment.set(\"BusinessPartnerID\", jsonResponse.d.results.InternalID);",
											"pm.environment.set(\"BusinessPartnerPersonID\", jsonResponse.d.results.InternalID);",
											"pm.environment.set(\"BusinessPartnerObjectID\", jsonResponse.d.results.ObjectID);",
											"// Validations",
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"});",
											"pm.test(\"201 - Business Partner created\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{Password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{User}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"value": "{{x-csrf-token}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\t\n\t\"CategoryCode\": \"1\",\n    \"FirstName\": \"{{BusinessPartnerName}}\",\n    \"LastName\": \"{{LastName}}\"\n    \n   }"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmubusinesspartner/BusinessPartnerCollection",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmubusinesspartner",
										"BusinessPartnerCollection"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update business partner role and address data (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "691edeb4-7bfd-4e5f-8c75-c140cf9f04a2",
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"",
											"pm.environment.set(\"BusinessPartnerInternalID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:BusinessPartnerBundleMaintainConfirmation_sync'].BusinessPartner.InternalID);",
											"pm.environment.set(\"BusinessPartnerPersonInternalID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:BusinessPartnerBundleMaintainConfirmation_sync'].BusinessPartner.InternalID);",
											"",
											"",
											"// Validations",
											"pm.test(\"Buseinss Partner Person \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:BusinessPartnerBundleMaintainConfirmation_sync'].BusinessPartner.InternalID + \" created\", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3e65b165-9326-4ac2-9a90-37c0ed7a5612",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n     <glob:BusinessPartnerBundleMaintainRequest_sync>\r\n       <BusinessPartner actionCode=\"04\" addressInformationListCompleteTransmissionIndicator=\"true\">\r\n            <InternalID>{{BusinessPartnerID}}</InternalID>\r\n           <!-- <CategoryCode>1</CategoryCode> -->\r\n            <ContactPersonIndicator>true</ContactPersonIndicator>\r\n            <CompetitorIndicator>false</CompetitorIndicator>\r\n            <CarrierIndicator>false</CarrierIndicator>\r\n            <SalesAndServicePartnerIndicator>false</SalesAndServicePartnerIndicator>\r\n            <EmployeeFamilyMemberIndicator>true</EmployeeFamilyMemberIndicator>\r\n            <SocialInsuranceFundHeadOfficeIndicator>false</SocialInsuranceFundHeadOfficeIndicator>\r\n            <SocialInsuranceFundLocalOfficeIndicator>false</SocialInsuranceFundLocalOfficeIndicator>\r\n            <PrivateInsuranceProviderIndicator>false</PrivateInsuranceProviderIndicator> \r\n            <!--<Person>\r\n               <GivenName>{{FirstName}}</GivenName>\r\n               <FamilyName>{{LastName}}</FamilyName>\r\n            </Person>-->\r\n            <AddressInformation>              \r\n               <AddressUsage>                 \r\n                  <AddressUsageCode>XXDEFAULT</AddressUsageCode>\r\n               </AddressUsage>\r\n               <Address telephoneListCompleteTransmissionIndicator=\"true\">\r\n\t\t\t\t<PreferredCommunicationMediumTypeCode>INT</PreferredCommunicationMediumTypeCode>\r\n    \t\t\t\t<EmailURI>{{EMial}}</EmailURI>\r\n                    <WebURI>{{WebSite}}</WebURI>\r\n    \t\t\t\t<FacsimileFormattedNumberDescription>{{Fax}}</FacsimileFormattedNumberDescription>\r\n                \t<Telephone>\r\n     \t\t\t\t\t<FormattedNumberDescription>{{Mobile}}</FormattedNumberDescription>\r\n     \t\t\t\t\t<MobilePhoneNumberIndicator>true</MobilePhoneNumberIndicator>\r\n    \t\t\t\t</Telephone>  \r\n            \t\t<Telephone>\r\n    \t\t\t\t\t<FormattedNumberDescription>{{Phone}}</FormattedNumberDescription>\r\n    \t\t\t\t\t<MobilePhoneNumberIndicator>false</MobilePhoneNumberIndicator>\r\n    \t\t\t\t</Telephone>  \r\n\t             <PostalAddress>\r\n                     <CountryCode>{{Country}}</CountryCode>\r\n                     <RegionCode>{{State}}</RegionCode>\r\n                     <CityName>Heidelberg</CityName>\r\n                     <StreetPostalCode>{{PostalCode}}</StreetPostalCode>\r\n                     <StreetName>{{Street}}</StreetName>\r\n                     <HouseID>{{HouseNumber}}</HouseID>\r\n                  </PostalAddress>\r\n\r\n               </Address>\r\n            </AddressInformation>\r\n         </BusinessPartner>\r\n      </glob:BusinessPartnerBundleMaintainRequest_sync>\r\n\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managebusinesspartnerin3",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managebusinesspartnerin3"
									]
								}
							},
							"response": [
								{
									"name": "Create production proposal (Soap 1.1)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:CreateProductionProposal>\r\n         <CreateProductionPlanningOrder>\r\n            <SequenceNumber>1</SequenceNumber>\r\n            <SupplyPlanningAreaID>P1100</SupplyPlanningAreaID>\r\n            <MaterialID>P100101</MaterialID>\r\n            <!-- <ProductRequirementSpecificationID>?</ProductRequirementSpecificationID> -->\r\n            <MaterialAvailabilityDateTime timeZoneCode=\"CET\">2019-02-05T12:00:00.0000000Z</MaterialAvailabilityDateTime>\r\n            <Quantity unitCode=\"EA\">1</Quantity>\r\n            <QuantityTypeCode>EA</QuantityTypeCode>\r\n         </CreateProductionPlanningOrder>\r\n      </glob:CreateProductionProposal>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
										},
										"url": {
											"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/manageproductionproposalin",
											"protocol": "https",
											"host": [
												"{{TenantHostname}}"
											],
											"path": [
												"sap",
												"bc",
												"srt",
												"scs",
												"sap",
												"manageproductionproposalin"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "html",
									"header": [
										{
											"key": "content-type",
											"value": "text/html; charset=utf-8"
										},
										{
											"key": "content-encoding",
											"value": "gzip"
										},
										{
											"key": "content-length",
											"value": "505"
										},
										{
											"key": "sap-system",
											"value": "KHL"
										},
										{
											"key": "www-authenticate",
											"value": "Basic realm=\"SAP NetWeaver Application Server [KHL/171][alias]\""
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=31536000; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "<html>\n    <head>\n        <title>Logon Error Message</title>\n        <META http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\">\n        <style type=\"text/css\">body { font-family:tahoma,helvetica,sans-serif;color:#333333;background-color:#FFFFFF; }td { font-family:tahoma,helvetica,sans-serif;font-size:70%;color:#333333; }h1 { font-family:tahoma,helvetica,sans-serif;font-size:160%;font-weight:bold;margin-top:15px;margin-bottom:3px;color:#003366; }h2 { font-family:verdana,helvetica,sans-serif;font-size:120%;font-style:italic;font-weight:bold;margin-top:6px;margin-bottom:6px;color:#999900; }p { font-family:tahoma,helvetica,sans-serif;color:#333333;margin-top:4px;margin-bottom:4px; }ul { font-family:tahoma,helvetica,sans-serif;color:#333333;list-style-type:square;margin-top:8px;margin-bottom:8px; }li { font-family:tahoma,helvetica,sans-serif;color:#33333;margin-top:4px; }.emphasize { color:#333333;background-color:#C8E3FF;padding:5px;}.note { color:#CC6600; }a { font-family:tahoma,helvetica,sans-serif;text-decoration:underline;color:#336699; }a:visited { color:#001166; }a:hover { text-decoration:none; }</style>\n    </head>\n    <body>\n        <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\">\n            <tr>\n                <td>\n                    <h1>Logon failed</h1>\n                </td>\n            </tr>\n        </table>\n    </body>\n</html>"
								}
							]
						},
						{
							"name": "Create busniess partner notes",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6368d179-1c64-4252-bbe9-a9a87e65566f",
										"exec": [
											"// Validations",
											"pm.test(\"201 - Created Business Partner Notes\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"// Set environment valiables",
											"var jsonResponse = pm.response.json();",
											"pm.environment.set(\"BusinessPartnerNotesObjectID\", jsonResponse.d.results.ObjectID);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-http-method",
										"value": "MERGE",
										"disabled": true
									},
									{
										"key": "x-csrf-token",
										"value": "{{x-csrf-token}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\t\n\t\"ParentObjectID\": \"{{BusinessPartnerObjectID}}\",\n    \"TypeCode\": \"10030\",\n    \"Text\": \"Notes for Business Partner Created\"\n    \n}"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmubusinesspartner/NotesCollection",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmubusinesspartner",
										"NotesCollection"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update busniess partner notes",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6368d179-1c64-4252-bbe9-a9a87e65566f",
										"exec": [
											"// Validations",
											"// Validations",
											"pm.test(\"204 - updated Business Partner Notes\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-http-method",
										"value": "MERGE",
										"disabled": true
									},
									{
										"key": "x-csrf-token",
										"value": "{{x-csrf-token}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\t\n\t\"ObjectID\": \"{{BusinessPartnerNotesObjectID}}\",\n\t\"ParentObjectID\": \"{{BusinessPartnerObjectID}}\",\n    \"Text\": \"Notes for Business Partner Updated\"\n    \n}"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmubusinesspartner/NotesCollection('{{BusinessPartnerNotesObjectID}}')",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmubusinesspartner",
										"NotesCollection('{{BusinessPartnerNotesObjectID}}')"
									]
								}
							},
							"response": []
						},
						{
							"name": "Query business partner (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "691edeb4-7bfd-4e5f-8c75-c140cf9f04a2",
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"",
											"//pm.environment.set(\"BusinessPartnerInternalID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:BusinessPartnerByIdentificationResponse_sync'].BusinessPartner.InternalID);",
											"",
											"// Validations",
											"pm.test(\"Business Partner Person: \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:BusinessPartnerByIdentificationResponse_sync'].BusinessPartner.InternalID + \" Queried Successfully \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3e65b165-9326-4ac2-9a90-37c0ed7a5612",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:BusinessPartnerByIdentificationQuery_sync>\r\n         <BusinessPartnerSelectionByIdentification>\r\n            <SelectionByInternalID>\r\n               <InclusionExclusionCode>I</InclusionExclusionCode>\r\n               <IntervalBoundaryTypeCode>1</IntervalBoundaryTypeCode>\r\n               <LowerBoundaryIdentifier>{{BusinessPartnerPersonInternalID}}</LowerBoundaryIdentifier>\r\n            </SelectionByInternalID>\r\n          </BusinessPartnerSelectionByIdentification>\r\n      </glob:BusinessPartnerByIdentificationQuery_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/querybusinesspartnerin1",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"querybusinesspartnerin1"
									]
								}
							},
							"response": [
								{
									"name": "Create production proposal (Soap 1.1)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:CreateProductionProposal>\r\n         <CreateProductionPlanningOrder>\r\n            <SequenceNumber>1</SequenceNumber>\r\n            <SupplyPlanningAreaID>P1100</SupplyPlanningAreaID>\r\n            <MaterialID>P100101</MaterialID>\r\n            <!-- <ProductRequirementSpecificationID>?</ProductRequirementSpecificationID> -->\r\n            <MaterialAvailabilityDateTime timeZoneCode=\"CET\">2019-02-05T12:00:00.0000000Z</MaterialAvailabilityDateTime>\r\n            <Quantity unitCode=\"EA\">1</Quantity>\r\n            <QuantityTypeCode>EA</QuantityTypeCode>\r\n         </CreateProductionPlanningOrder>\r\n      </glob:CreateProductionProposal>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
										},
										"url": {
											"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/manageproductionproposalin",
											"protocol": "https",
											"host": [
												"{{TenantHostname}}"
											],
											"path": [
												"sap",
												"bc",
												"srt",
												"scs",
												"sap",
												"manageproductionproposalin"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "html",
									"header": [
										{
											"key": "content-type",
											"value": "text/html; charset=utf-8"
										},
										{
											"key": "content-encoding",
											"value": "gzip"
										},
										{
											"key": "content-length",
											"value": "505"
										},
										{
											"key": "sap-system",
											"value": "KHL"
										},
										{
											"key": "www-authenticate",
											"value": "Basic realm=\"SAP NetWeaver Application Server [KHL/171][alias]\""
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=31536000; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "<html>\n    <head>\n        <title>Logon Error Message</title>\n        <META http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\">\n        <style type=\"text/css\">body { font-family:tahoma,helvetica,sans-serif;color:#333333;background-color:#FFFFFF; }td { font-family:tahoma,helvetica,sans-serif;font-size:70%;color:#333333; }h1 { font-family:tahoma,helvetica,sans-serif;font-size:160%;font-weight:bold;margin-top:15px;margin-bottom:3px;color:#003366; }h2 { font-family:verdana,helvetica,sans-serif;font-size:120%;font-style:italic;font-weight:bold;margin-top:6px;margin-bottom:6px;color:#999900; }p { font-family:tahoma,helvetica,sans-serif;color:#333333;margin-top:4px;margin-bottom:4px; }ul { font-family:tahoma,helvetica,sans-serif;color:#333333;list-style-type:square;margin-top:8px;margin-bottom:8px; }li { font-family:tahoma,helvetica,sans-serif;color:#33333;margin-top:4px; }.emphasize { color:#333333;background-color:#C8E3FF;padding:5px;}.note { color:#CC6600; }a { font-family:tahoma,helvetica,sans-serif;text-decoration:underline;color:#336699; }a:visited { color:#001166; }a:hover { text-decoration:none; }</style>\n    </head>\n    <body>\n        <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\">\n            <tr>\n                <td>\n                    <h1>Logon failed</h1>\n                </td>\n            </tr>\n        </table>\n    </body>\n</html>"
								}
							]
						},
						{
							"name": "Get business partner",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "13783b8f-a601-492f-8b16-481c2a8417ff",
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"200 - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Cross site request forgery token:  received\", function () {",
											"    pm.response.to.have.header(\"x-csrf-token\");",
											"});",
											"",
											"// Get workplace address object ID and parten object ID",
											"var jsonResponse = pm.response.json();",
											"pm.environment.set(\"ObjectID\", jsonResponse.d.results[0].ObjectID);",
											"pm.environment.set(\"BusinessPartnerObjectID\", jsonResponse.d.results[0].ObjectID);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmubusinesspartner/BusinessPartnerCollection?$filter=InternalID eq '{{BusinessPartnerInternalID}}'&$expand=AddressSnapshotAddressSnapshot,AddressSnapshotAddressSnapshot/AddressSnapshotPostalAddress,AddressSnapshotAddressSnapshot/AddressSnapshotTelephone&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmubusinesspartner",
										"BusinessPartnerCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "InternalID eq '{{BusinessPartnerInternalID}}'"
										},
										{
											"key": "$expand",
											"value": "AddressSnapshotAddressSnapshot,AddressSnapshotAddressSnapshot/AddressSnapshotPostalAddress,AddressSnapshotAddressSnapshot/AddressSnapshotTelephone"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Activate business partner",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
										"exec": [
											"var jsonResponse = pm.response.json();",
											"",
											"// Validations",
											"pm.test(\"Busienss Partner Person: \" + jsonResponse.d.results.InternalID + \" Activated \", function () { pm.response.to.have.status(200) });",
											"pm.test(\"Busienss Partner Person LifeCycleStatusCode status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"2\") });",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-csrf-token",
										"value": "{{x-csrf-token}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmubusinesspartner/BusinessPartnerActivate?ObjectID='{{BusinessPartnerObjectID}}'",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmubusinesspartner",
										"BusinessPartnerActivate"
									],
									"query": [
										{
											"key": "ObjectID",
											"value": "'{{BusinessPartnerObjectID}}'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Block business partner",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
										"exec": [
											"var jsonResponse = pm.response.json();",
											"",
											"// Validations",
											"pm.test(\"Busienss Partner Person: \" + jsonResponse.d.results.InternalID + \" Blocked \", function () { pm.response.to.have.status(200) });",
											"pm.test(\"Busienss Partner Person LifeCycleStatusCode status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"3\") });",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-csrf-token",
										"value": "{{x-csrf-token}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmubusinesspartner/BusinessPartnerBlock?ObjectID='{{BusinessPartnerObjectID}}'",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmubusinesspartner",
										"BusinessPartnerBlock"
									],
									"query": [
										{
											"key": "ObjectID",
											"value": "'{{BusinessPartnerObjectID}}'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Unblock business partner",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
										"exec": [
											"var jsonResponse = pm.response.json();",
											"",
											"// Validations",
											"pm.test(\"Busienss Partner Person: \" + jsonResponse.d.results.InternalID + \" UnBlocked \", function () { pm.response.to.have.status(200) });",
											"pm.test(\"Busienss Partner Person LifeCycleStatusCode status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"2\") });",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-csrf-token",
										"value": "{{x-csrf-token}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmubusinesspartner/BusinessPartnerUnblock?ObjectID='{{BusinessPartnerObjectID}}'",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmubusinesspartner",
										"BusinessPartnerUnblock"
									],
									"query": [
										{
											"key": "ObjectID",
											"value": "'{{BusinessPartnerObjectID}}'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Obsolete business partner",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
										"exec": [
											"var jsonResponse = pm.response.json();",
											"",
											"// Validations",
											"pm.test(\"Busienss Partner Person: \" + jsonResponse.d.results.InternalID + \" Flaged As Obsolete \", function () { pm.response.to.have.status(200) });",
											"pm.test(\"Busienss Partner Person LifeCycleStatusCode status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"4\") });",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-csrf-token",
										"value": "{{x-csrf-token}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmubusinesspartner/BusinessPartnerFlagAsObsolete?ObjectID='{{BusinessPartnerObjectID}}'",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmubusinesspartner",
										"BusinessPartnerFlagAsObsolete"
									],
									"query": [
										{
											"key": "ObjectID",
											"value": "'{{BusinessPartnerObjectID}}'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "RevokeObsolescence business partner",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
										"exec": [
											"var jsonResponse = pm.response.json();",
											"",
											"// Validations",
											"pm.test(\"Busienss Partner Person: \" + jsonResponse.d.results.InternalID + \" Revoke Obsolescence \", function () { pm.response.to.have.status(200) });",
											"pm.test(\"Busienss Partner Person LifeCycleStatusCode status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"3\") });",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-csrf-token",
										"value": "{{x-csrf-token}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmubusinesspartner/BusinessPartnerRevokeObsolescence?ObjectID='{{BusinessPartnerObjectID}}'",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmubusinesspartner",
										"BusinessPartnerRevokeObsolescence"
									],
									"query": [
										{
											"key": "ObjectID",
											"value": "'{{BusinessPartnerObjectID}}'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Unblock business partner",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
										"exec": [
											"var jsonResponse = pm.response.json();",
											"",
											"// Validations",
											"pm.test(\"Busienss Partner Person: \" + jsonResponse.d.results.InternalID + \" UnBlocked \", function () { pm.response.to.have.status(200) });",
											"pm.test(\"Busienss Partner Person LifeCycleStatusCode status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"2\") });",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-csrf-token",
										"value": "{{x-csrf-token}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmubusinesspartner/BusinessPartnerUnblock?ObjectID='{{BusinessPartnerObjectID}}'",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmubusinesspartner",
										"BusinessPartnerUnblock"
									],
									"query": [
										{
											"key": "ObjectID",
											"value": "'{{BusinessPartnerObjectID}}'"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Business Partner Organisation",
					"item": [
						{
							"name": "Metadata business partner",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d9051870-fcf4-4a84-9d2e-487464c33deb",
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"200 - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Business Partner forgery token:  received\", function () {",
											"    pm.response.to.have.header(\"x-csrf-token\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "711eb5e6-1b1e-46ba-b6ce-955c00dfb54f",
										"exec": [
											"//pm.environment.set(\"TenantHostname\", \"qch-cust120.dev.sapbydesign.com\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{Password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{User}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmubusinesspartner/$metadata",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmubusinesspartner",
										"$metadata"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create business parnter",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "012fb3c5-a7b6-47f5-99ba-8bdbf080ad2a",
										"exec": [
											"// Set Material ID of pattern VMU-<UTC datetime>",
											"var generatedBusinessPartnerName = \"VMU-\" + (new Date()).toISOString();",
											"pm.environment.set(\"BusinessPartnerName\", generatedBusinessPartnerName);",
											"",
											"// Use internal numbering for material IDs => initialize environment variable MaterialID",
											"//pm.environment.set(\"MaterialID\", \"\");",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "08083360-5ae0-4960-8702-5fb24133a521",
										"exec": [
											"",
											"var jsonResponse = pm.response.json();",
											"//console.log(jsonResponse.d.results[0].ID);",
											"pm.environment.set(\"BusinessPartnerID\", jsonResponse.d.results.InternalID);",
											"pm.environment.set(\"BusinessPartnerObjectID\", jsonResponse.d.results.ObjectID);",
											"// Validations",
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"});",
											"pm.test(\"201 - Business Partner created\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{Password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{User}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"value": "{{x-csrf-token}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\t\n\t\"CategoryCode\": \"2\",\n    \"BusinessPartnerName\": \"{{BusinessPartnerName}}\",\n    \"AdditionalName\": \"{{AdditionalName}}\"\n   \n   }"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmubusinesspartner/BusinessPartnerCollection",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmubusinesspartner",
										"BusinessPartnerCollection"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update business partner role and address and contact person (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "691edeb4-7bfd-4e5f-8c75-c140cf9f04a2",
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"",
											"pm.environment.set(\"BusinessPartnerInternalID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:BusinessPartnerBundleMaintainConfirmation_sync'].BusinessPartner.InternalID);",
											"",
											"pm.environment.set(\"BusinessPartnerOrganisationInternalID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:BusinessPartnerBundleMaintainConfirmation_sync'].BusinessPartner.InternalID);",
											"",
											"",
											"// Validations",
											"pm.test(\"Buseinss Partner Person \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:BusinessPartnerBundleMaintainConfirmation_sync'].BusinessPartner.InternalID + \" created\", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3e65b165-9326-4ac2-9a90-37c0ed7a5612",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n     <glob:BusinessPartnerBundleMaintainRequest_sync>\r\n       <BusinessPartner actionCode=\"04\" addressInformationListCompleteTransmissionIndicator=\"true\" relationshipListCompleteTransmissionIndicator=\"true\" contactPersonListCompleteTransmissionIndicator=\"true\" textListCompleteTransmissionIndicator=\"true\">\r\n            <InternalID>{{BusinessPartnerID}}</InternalID>\r\n            <CategoryCode>2</CategoryCode>\r\n            <SalesAndServicePartnerIndicator>true</SalesAndServicePartnerIndicator>\r\n            <ContactPersonIndicator>false</ContactPersonIndicator>\r\n            <CompetitorIndicator>false</CompetitorIndicator>\r\n            <CarrierIndicator>false</CarrierIndicator>\r\n            <EmployeeFamilyMemberIndicator>false</EmployeeFamilyMemberIndicator>\r\n            <SocialInsuranceFundHeadOfficeIndicator>false</SocialInsuranceFundHeadOfficeIndicator>\r\n            <SocialInsuranceFundLocalOfficeIndicator>false</SocialInsuranceFundLocalOfficeIndicator>\r\n            <PrivateInsuranceProviderIndicator>false</PrivateInsuranceProviderIndicator>\r\n           <!-- <Organisation>\r\n               <FirstLineName>{{BusinessPartnerName}}</FirstLineName>\r\n               <SecondLineName>{{AdditionalName}}</SecondLineName>\r\n            </Organisation>-->\r\n\r\n            <AddressInformation actionCode=\"01\" addressUsageListCompleteTransmissionIndicator=\"true\">              \r\n               <AddressUsage actionCode=\"01\">                 \r\n                  <AddressUsageCode>XXDEFAULT</AddressUsageCode>\r\n               </AddressUsage>\r\n               <Address actionCode=\"01\" telephoneListCompleteTransmissionIndicator=\"true\">\r\n\t\t\t\t<PreferredCommunicationMediumTypeCode>INT</PreferredCommunicationMediumTypeCode>\r\n    \t\t\t\t<EmailURI>{{EMial}}</EmailURI>\r\n                    <WebURI>{{WebSite}}</WebURI>\r\n    \t\t\t\t<FacsimileFormattedNumberDescription>{{Fax}}</FacsimileFormattedNumberDescription>\r\n                \t<Telephone>\r\n     \t\t\t\t\t<FormattedNumberDescription>{{Mobile}}</FormattedNumberDescription>\r\n     \t\t\t\t\t<MobilePhoneNumberIndicator>true</MobilePhoneNumberIndicator>\r\n    \t\t\t\t</Telephone>  \r\n               \t\t<Telephone>\r\n    \t\t\t\t\t <FormattedNumberDescription>{{Phone}}</FormattedNumberDescription>\r\n    \t\t\t\t\t <MobilePhoneNumberIndicator>false</MobilePhoneNumberIndicator>\r\n    \t\t\t\t</Telephone>  \r\n\t             <PostalAddress>\r\n                     <CountryCode>{{Country}}</CountryCode>\r\n                     <RegionCode>{{State}}</RegionCode>\r\n                     <CityName>{{City}}</CityName>\r\n                     <StreetPostalCode>{{PostalCode}}</StreetPostalCode>\r\n                     <StreetName>{{Street}}</StreetName>\r\n                     <HouseID>{{HouseNumber}}</HouseID>\r\n                  </PostalAddress>\r\n\r\n               </Address>\r\n            </AddressInformation>\r\n    \r\n            <ContactPerson>\r\n                <GivenName>Frank</GivenName>\r\n               <FamilyName>Sent</FamilyName>\r\n              </ContactPerson>\r\n\r\n         </BusinessPartner>\r\n      </glob:BusinessPartnerBundleMaintainRequest_sync>\r\n\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managebusinesspartnerin3",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managebusinesspartnerin3"
									]
								}
							},
							"response": [
								{
									"name": "Create production proposal (Soap 1.1)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:CreateProductionProposal>\r\n         <CreateProductionPlanningOrder>\r\n            <SequenceNumber>1</SequenceNumber>\r\n            <SupplyPlanningAreaID>P1100</SupplyPlanningAreaID>\r\n            <MaterialID>P100101</MaterialID>\r\n            <!-- <ProductRequirementSpecificationID>?</ProductRequirementSpecificationID> -->\r\n            <MaterialAvailabilityDateTime timeZoneCode=\"CET\">2019-02-05T12:00:00.0000000Z</MaterialAvailabilityDateTime>\r\n            <Quantity unitCode=\"EA\">1</Quantity>\r\n            <QuantityTypeCode>EA</QuantityTypeCode>\r\n         </CreateProductionPlanningOrder>\r\n      </glob:CreateProductionProposal>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
										},
										"url": {
											"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/manageproductionproposalin",
											"protocol": "https",
											"host": [
												"{{TenantHostname}}"
											],
											"path": [
												"sap",
												"bc",
												"srt",
												"scs",
												"sap",
												"manageproductionproposalin"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "html",
									"header": [
										{
											"key": "content-type",
											"value": "text/html; charset=utf-8"
										},
										{
											"key": "content-encoding",
											"value": "gzip"
										},
										{
											"key": "content-length",
											"value": "505"
										},
										{
											"key": "sap-system",
											"value": "KHL"
										},
										{
											"key": "www-authenticate",
											"value": "Basic realm=\"SAP NetWeaver Application Server [KHL/171][alias]\""
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=31536000; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "<html>\n    <head>\n        <title>Logon Error Message</title>\n        <META http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\">\n        <style type=\"text/css\">body { font-family:tahoma,helvetica,sans-serif;color:#333333;background-color:#FFFFFF; }td { font-family:tahoma,helvetica,sans-serif;font-size:70%;color:#333333; }h1 { font-family:tahoma,helvetica,sans-serif;font-size:160%;font-weight:bold;margin-top:15px;margin-bottom:3px;color:#003366; }h2 { font-family:verdana,helvetica,sans-serif;font-size:120%;font-style:italic;font-weight:bold;margin-top:6px;margin-bottom:6px;color:#999900; }p { font-family:tahoma,helvetica,sans-serif;color:#333333;margin-top:4px;margin-bottom:4px; }ul { font-family:tahoma,helvetica,sans-serif;color:#333333;list-style-type:square;margin-top:8px;margin-bottom:8px; }li { font-family:tahoma,helvetica,sans-serif;color:#33333;margin-top:4px; }.emphasize { color:#333333;background-color:#C8E3FF;padding:5px;}.note { color:#CC6600; }a { font-family:tahoma,helvetica,sans-serif;text-decoration:underline;color:#336699; }a:visited { color:#001166; }a:hover { text-decoration:none; }</style>\n    </head>\n    <body>\n        <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\">\n            <tr>\n                <td>\n                    <h1>Logon failed</h1>\n                </td>\n            </tr>\n        </table>\n    </body>\n</html>"
								}
							]
						},
						{
							"name": "Create busniess partner notes",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6368d179-1c64-4252-bbe9-a9a87e65566f",
										"exec": [
											"// Validations",
											"pm.test(\"201 - Created Business Partner Notes\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"// Set environment valiables",
											"var jsonResponse = pm.response.json();",
											"pm.environment.set(\"BusinessPartnerNotesObjectID\", jsonResponse.d.results.ObjectID);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-http-method",
										"value": "MERGE",
										"disabled": true
									},
									{
										"key": "x-csrf-token",
										"value": "{{x-csrf-token}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\t\n\t\"ParentObjectID\": \"{{BusinessPartnerObjectID}}\",\n    \"TypeCode\": \"10030\",\n    \"Text\": \"Notes for Business Partner Created\"\n    \n}"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmubusinesspartner/NotesCollection",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmubusinesspartner",
										"NotesCollection"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update busniess partner notes",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6368d179-1c64-4252-bbe9-a9a87e65566f",
										"exec": [
											"// Validations",
											"// Validations",
											"pm.test(\"204 - updated Business Partner Notes\", function () {  ",
											"    pm.response.to.have.status(204);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-http-method",
										"value": "MERGE",
										"disabled": true
									},
									{
										"key": "x-csrf-token",
										"value": "{{x-csrf-token}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\t\n\t\"ObjectID\": \"{{BusinessPartnerNotesObjectID}}\",\n\t\"ParentObjectID\": \"{{BusinessPartnerObjectID}}\",\n    \"Text\": \"Notes for Business Partner Updated\"\n    \n}"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmubusinesspartner/NotesCollection('{{BusinessPartnerNotesObjectID}}')",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmubusinesspartner",
										"NotesCollection('{{BusinessPartnerNotesObjectID}}')"
									]
								}
							},
							"response": []
						},
						{
							"name": "Query business partner (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "691edeb4-7bfd-4e5f-8c75-c140cf9f04a2",
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"",
											"//pm.environment.set(\"BusinessPartnerInternalID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:BusinessPartnerByIdentificationResponse_sync'].BusinessPartner.InternalID);",
											"",
											"// Validations",
											"pm.test(\"Buseinss Partner Organisation: \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:BusinessPartnerByIdentificationResponse_sync'].BusinessPartner.InternalID + \" Queried Successfully \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3e65b165-9326-4ac2-9a90-37c0ed7a5612",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:BusinessPartnerByIdentificationQuery_sync>\r\n           <BusinessPartnerSelectionByIdentification>\r\n            <SelectionByInternalID>\r\n               <InclusionExclusionCode>I</InclusionExclusionCode>\r\n               <IntervalBoundaryTypeCode>1</IntervalBoundaryTypeCode>\r\n               <LowerBoundaryIdentifier>{{BusinessPartnerOrganisationInternalID}}</LowerBoundaryIdentifier>\r\n            </SelectionByInternalID>           \r\n         </BusinessPartnerSelectionByIdentification>        \r\n      </glob:BusinessPartnerByIdentificationQuery_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/querybusinesspartnerin1",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"querybusinesspartnerin1"
									]
								}
							},
							"response": [
								{
									"name": "Create production proposal (Soap 1.1)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:CreateProductionProposal>\r\n         <CreateProductionPlanningOrder>\r\n            <SequenceNumber>1</SequenceNumber>\r\n            <SupplyPlanningAreaID>P1100</SupplyPlanningAreaID>\r\n            <MaterialID>P100101</MaterialID>\r\n            <!-- <ProductRequirementSpecificationID>?</ProductRequirementSpecificationID> -->\r\n            <MaterialAvailabilityDateTime timeZoneCode=\"CET\">2019-02-05T12:00:00.0000000Z</MaterialAvailabilityDateTime>\r\n            <Quantity unitCode=\"EA\">1</Quantity>\r\n            <QuantityTypeCode>EA</QuantityTypeCode>\r\n         </CreateProductionPlanningOrder>\r\n      </glob:CreateProductionProposal>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
										},
										"url": {
											"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/manageproductionproposalin",
											"protocol": "https",
											"host": [
												"{{TenantHostname}}"
											],
											"path": [
												"sap",
												"bc",
												"srt",
												"scs",
												"sap",
												"manageproductionproposalin"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "html",
									"header": [
										{
											"key": "content-type",
											"value": "text/html; charset=utf-8"
										},
										{
											"key": "content-encoding",
											"value": "gzip"
										},
										{
											"key": "content-length",
											"value": "505"
										},
										{
											"key": "sap-system",
											"value": "KHL"
										},
										{
											"key": "www-authenticate",
											"value": "Basic realm=\"SAP NetWeaver Application Server [KHL/171][alias]\""
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=31536000; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "<html>\n    <head>\n        <title>Logon Error Message</title>\n        <META http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\">\n        <style type=\"text/css\">body { font-family:tahoma,helvetica,sans-serif;color:#333333;background-color:#FFFFFF; }td { font-family:tahoma,helvetica,sans-serif;font-size:70%;color:#333333; }h1 { font-family:tahoma,helvetica,sans-serif;font-size:160%;font-weight:bold;margin-top:15px;margin-bottom:3px;color:#003366; }h2 { font-family:verdana,helvetica,sans-serif;font-size:120%;font-style:italic;font-weight:bold;margin-top:6px;margin-bottom:6px;color:#999900; }p { font-family:tahoma,helvetica,sans-serif;color:#333333;margin-top:4px;margin-bottom:4px; }ul { font-family:tahoma,helvetica,sans-serif;color:#333333;list-style-type:square;margin-top:8px;margin-bottom:8px; }li { font-family:tahoma,helvetica,sans-serif;color:#33333;margin-top:4px; }.emphasize { color:#333333;background-color:#C8E3FF;padding:5px;}.note { color:#CC6600; }a { font-family:tahoma,helvetica,sans-serif;text-decoration:underline;color:#336699; }a:visited { color:#001166; }a:hover { text-decoration:none; }</style>\n    </head>\n    <body>\n        <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\">\n            <tr>\n                <td>\n                    <h1>Logon failed</h1>\n                </td>\n            </tr>\n        </table>\n    </body>\n</html>"
								}
							]
						},
						{
							"name": "Get business partner",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "13783b8f-a601-492f-8b16-481c2a8417ff",
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"200 - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Cross site request forgery token:  received\", function () {",
											"    pm.response.to.have.header(\"x-csrf-token\");",
											"});",
											"",
											"// Get workplace address object ID and parten object ID",
											"var jsonResponse = pm.response.json();",
											"pm.environment.set(\"ObjectID\", jsonResponse.d.results[0].ObjectID);",
											"pm.environment.set(\"BusinessPartnerObjectID\", jsonResponse.d.results[0].ObjectID);",
											"pm.environment.set(\"BusinessPartnerOrganisationInternalID\", jsonResponse.d.results[0].InternalID);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmubusinesspartner/BusinessPartnerCollection?$filter=InternalID eq '{{BusinessPartnerInternalID}}'&$expand=AddressSnapshotAddressSnapshot,AddressSnapshotAddressSnapshot/AddressSnapshotPostalAddress,AddressSnapshotAddressSnapshot/AddressSnapshotTelephone&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmubusinesspartner",
										"BusinessPartnerCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "InternalID eq '{{BusinessPartnerInternalID}}'"
										},
										{
											"key": "$expand",
											"value": "AddressSnapshotAddressSnapshot,AddressSnapshotAddressSnapshot/AddressSnapshotPostalAddress,AddressSnapshotAddressSnapshot/AddressSnapshotTelephone"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Activate business partner organisation",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
										"exec": [
											"var jsonResponse = pm.response.json();",
											"",
											"// Validations",
											"pm.test(\"Busienss Partner Person: \" + jsonResponse.d.results.InternalID + \" Activated \", function () { pm.response.to.have.status(200) });",
											"pm.test(\"Busienss Partner Person LifeCycleStatusCode status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"2\") });",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-csrf-token",
										"value": "{{x-csrf-token}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmubusinesspartner/BusinessPartnerActivate?ObjectID='{{BusinessPartnerObjectID}}'",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmubusinesspartner",
										"BusinessPartnerActivate"
									],
									"query": [
										{
											"key": "ObjectID",
											"value": "'{{BusinessPartnerObjectID}}'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Block business partner organisation",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
										"exec": [
											"var jsonResponse = pm.response.json();",
											"",
											"// Validations",
											"pm.test(\"Busienss Partner Person: \" + jsonResponse.d.results.InternalID + \" Blocked \", function () { pm.response.to.have.status(200) });",
											"pm.test(\"Busienss Partner Person LifeCycleStatusCode status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"3\") });",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-csrf-token",
										"value": "{{x-csrf-token}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmubusinesspartner/BusinessPartnerBlock?ObjectID='{{BusinessPartnerObjectID}}'",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmubusinesspartner",
										"BusinessPartnerBlock"
									],
									"query": [
										{
											"key": "ObjectID",
											"value": "'{{BusinessPartnerObjectID}}'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Unblock business partner organisation",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
										"exec": [
											"var jsonResponse = pm.response.json();",
											"",
											"// Validations",
											"pm.test(\"Busienss Partner Person: \" + jsonResponse.d.results.InternalID + \" UnBlocked \", function () { pm.response.to.have.status(200) });",
											"pm.test(\"Busienss Partner Person LifeCycleStatusCode status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"2\") });",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-csrf-token",
										"value": "{{x-csrf-token}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmubusinesspartner/BusinessPartnerUnblock?ObjectID='{{BusinessPartnerObjectID}}'",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmubusinesspartner",
										"BusinessPartnerUnblock"
									],
									"query": [
										{
											"key": "ObjectID",
											"value": "'{{BusinessPartnerObjectID}}'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Obsolete business partner organisation",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
										"exec": [
											"var jsonResponse = pm.response.json();",
											"",
											"// Validations",
											"pm.test(\"Busienss Partner Person: \" + jsonResponse.d.results.InternalID + \" UnBlocked \", function () { pm.response.to.have.status(200) });",
											"pm.test(\"Busienss Partner Person LifeCycleStatusCode status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"4\") });",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-csrf-token",
										"value": "{{x-csrf-token}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmubusinesspartner/BusinessPartnerFlagAsObsolete?ObjectID='{{BusinessPartnerObjectID}}'",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmubusinesspartner",
										"BusinessPartnerFlagAsObsolete"
									],
									"query": [
										{
											"key": "ObjectID",
											"value": "'{{BusinessPartnerObjectID}}'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "RevokeObsolescence business partner organisation",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
										"exec": [
											"var jsonResponse = pm.response.json();",
											"",
											"// Validations",
											"pm.test(\"Busienss Partner Person: \" + jsonResponse.d.results.InternalID + \" Revoke Obsolescence \", function () { pm.response.to.have.status(200) });",
											"pm.test(\"Busienss Partner Person LifeCycleStatusCode status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"3\") });",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-csrf-token",
										"value": "{{x-csrf-token}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmubusinesspartner/BusinessPartnerRevokeObsolescence?ObjectID='{{BusinessPartnerObjectID}}'",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmubusinesspartner",
										"BusinessPartnerRevokeObsolescence"
									],
									"query": [
										{
											"key": "ObjectID",
											"value": "'{{BusinessPartnerObjectID}}'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Unblock business partner organisation",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
										"exec": [
											"var jsonResponse = pm.response.json();",
											"",
											"// Validations",
											"pm.test(\"Busienss Partner Person: \" + jsonResponse.d.results.InternalID + \" UnBlocked \", function () { pm.response.to.have.status(200) });",
											"pm.test(\"Busienss Partner Person LifeCycleStatusCode status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"2\") });",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-csrf-token",
										"value": "{{x-csrf-token}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmubusinesspartner/BusinessPartnerUnblock?ObjectID='{{BusinessPartnerObjectID}}'",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmubusinesspartner",
										"BusinessPartnerUnblock"
									],
									"query": [
										{
											"key": "ObjectID",
											"value": "'{{BusinessPartnerObjectID}}'"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "eac541ef-d6c0-4a0f-8cb4-275b9acc9f45",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "9c2bce22-da6d-4dea-843c-f0b83cb27a3c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Accounts",
			"item": [
				{
					"name": "Private Account",
					"item": [
						{
							"name": "Create private account (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "691edeb4-7bfd-4e5f-8c75-c140cf9f04a2",
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"",
											"pm.environment.set(\"PrivateAccountInternalID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:CustomerBundleMaintainConfirmation_sync_V1'].Customer.InternalID);",
											"",
											"// Validations",
											"pm.test(\"Private Account \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:CustomerBundleMaintainConfirmation_sync_V1'].Customer.InternalID + \" created\", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3e65b165-9326-4ac2-9a90-37c0ed7a5612",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n     <glob:CustomerBundleMaintainRequest_sync_V1>\r\n       <Customer actionCode=\"01\" textListCompleteTransmissionIndicator=\"true\">\r\n        <!--<InternalID>{{PrivateAccountInternalID}}</InternalID-->\r\n        <CategoryCode>1</CategoryCode>\r\n        <ProspectIndicator>false</ProspectIndicator>\r\n        <CustomerIndicator>true</CustomerIndicator>\r\n        <!--<LifeCycleStatusCode>2</LifeCycleStatusCode>--> <!-- set the status during Create -->\r\n        \r\n        <!-- General data -->\r\n        <Person>\r\n            <FormOfAddressCode>0002</FormOfAddressCode>\r\n            <AcademicTitleCode>0003</AcademicTitleCode>\r\n            <GivenName>{{FirstName}}</GivenName>\r\n            <MiddleName>{{MiddleName}}</MiddleName>\r\n            <FamilyName>{{LastName}}</FamilyName>\r\n            <BirthName>{{NameAtBirth}}</BirthName>\r\n            <NickName>{{Nickname}}</NickName>\r\n            <NameFormatCountryCode>{{NameFormatCountryCode}}</NameFormatCountryCode>\r\n            <GenderCode>1</GenderCode>\r\n            <BirthDate>{{BirthDate}}</BirthDate>\r\n            <NonVerbalCommunicationLanguageCode>EN</NonVerbalCommunicationLanguageCode>\r\n            <OccupationCode>0017</OccupationCode>\r\n        </Person>\r\n        <VerbalCommunicationLanguageCode>EN</VerbalCommunicationLanguageCode>\r\n        <ContactAllowedCode>3</ContactAllowedCode>\r\n        <LegalCompetenceIndicator>true</LegalCompetenceIndicator>\r\n        <ABCClassificationCode>A</ABCClassificationCode>\r\n        <NielsenRegionCode>01</NielsenRegionCode>\r\n        <IndustrialSectorCode>11</IndustrialSectorCode>\r\n       \r\n       <!-- Maintain adress -->\r\n        <AddressInformation actionCode=\"01\" addressUsageListCompleteTransmissionIndicator=\"true\">\r\n            <ObjectNodeSenderTechnicalID>002</ObjectNodeSenderTechnicalID>\r\n            <AddressUsage actionCode=\"01\">\r\n                <ObjectNodeSenderTechnicalID>003</ObjectNodeSenderTechnicalID>\r\n                <AddressUsageCode>XXDEFAULT</AddressUsageCode>\r\n                <DefaultIndicator>false</DefaultIndicator>\r\n            </AddressUsage>\r\n            <Address actionCode=\"01\" telephoneListCompleteTransmissionIndicator=\"true\">\r\n                <PreferredCommunicationMediumTypeCode>LET</PreferredCommunicationMediumTypeCode>\r\n                <EmailURI>{{EMial}}</EmailURI>\r\n                <FacsimileFormattedNumberDescription>+1 7164824867</FacsimileFormattedNumberDescription>\r\n                <PostalAddress>\r\n                     <CountryCode>US</CountryCode>\r\n                     <RegionCode listID=\"US\">NY</RegionCode>\r\n                     <CityName>Buffalo</CityName>\r\n                     <StreetPostalCode>14204</StreetPostalCode>\r\n                     <StreetName>Seneca Street</StreetName>\r\n                     <HouseID>145</HouseID>\r\n                     <TaxJurisdictionCode listID=\"US\">NY</TaxJurisdictionCode>\r\n                     <TimeZoneCode>EST</TimeZoneCode>\r\n                </PostalAddress>\r\n                <Telephone>\r\n                \t<FormattedNumberDescription>+12 34567890</FormattedNumberDescription>\r\n                    <MobilePhoneNumberIndicator>true</MobilePhoneNumberIndicator>\r\n                </Telephone>\r\n                <Telephone>\r\n                    <FormattedNumberDescription>+1 7164824863</FormattedNumberDescription>\r\n                    <MobilePhoneNumberIndicator>false</MobilePhoneNumberIndicator>\r\n                </Telephone>\r\n                <WebURI>http://www.customer.com/</WebURI>\r\n            </Address>\r\n        </AddressInformation>\r\n\t\t\r\n\t\t<!-- Create relations to existing business partners -->\r\n        <Relationship actionCode=\"01\">\r\n            <RelationshipBusinessPartnerInternalID>CP100110</RelationshipBusinessPartnerInternalID>\r\n            <RoleCode>BURC01-1</RoleCode> <!-- \"is Shareholder of\" -->\r\n        </Relationship>\r\n        <Relationship actionCode=\"01\">\r\n            <RelationshipBusinessPartnerInternalID>CP100110</RelationshipBusinessPartnerInternalID>\r\n            <RoleCode>CRMH20-2</RoleCode> <!-- \"Is Contract Release Authorized Party For of\" -->\r\n        </Relationship>\r\n\r\n\t\t<!-- Add account notes, financial data notes or internal/external sales notes -->\r\n        <Text actionCode=\"01\">\r\n            <ObjectNodeSenderTechnicalID>019</ObjectNodeSenderTechnicalID>\r\n            <TypeCode>10034</TypeCode>\r\n            <ContentText>English Text</ContentText>\r\n        </Text>\r\n        \r\n\t\t<!-- Maintain customer attachmens like documents, images, links... -->\r\n        <AttachmentFolder DocumentListCompleteTransmissionIndicator=\"true\" ActionCode=\"01\">\r\n\t\t<!-- Link attachment-->\r\n            <Document ActionCode=\"01\">\r\n                  <VisibleIndicator>true</VisibleIndicator>\r\n                  <CategoryCode>3</CategoryCode>\r\n                  <TypeCode>10016</TypeCode>\r\n                  <Name>www.sap.com</Name>\r\n                  <AlternativeName>http://www.sap.com</AlternativeName>\r\n                  <Description>http://www.sap.com</Description>\r\n                  <ExternalLinkWebURI>http://www.sap.com</ExternalLinkWebURI>\r\n                  <FileContentURI>http://www.sap.com</FileContentURI>\r\n            </Document>\r\n        </AttachmentFolder>\r\n        <DuplicateCheckApplyIndicator>false</DuplicateCheckApplyIndicator>\r\n\t  </Customer>\r\n    </glob:CustomerBundleMaintainRequest_sync_V1>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managecustomerin1",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managecustomerin1"
									]
								}
							},
							"response": [
								{
									"name": "Create production proposal (Soap 1.1)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:CreateProductionProposal>\r\n         <CreateProductionPlanningOrder>\r\n            <SequenceNumber>1</SequenceNumber>\r\n            <SupplyPlanningAreaID>P1100</SupplyPlanningAreaID>\r\n            <MaterialID>P100101</MaterialID>\r\n            <!-- <ProductRequirementSpecificationID>?</ProductRequirementSpecificationID> -->\r\n            <MaterialAvailabilityDateTime timeZoneCode=\"CET\">2019-02-05T12:00:00.0000000Z</MaterialAvailabilityDateTime>\r\n            <Quantity unitCode=\"EA\">1</Quantity>\r\n            <QuantityTypeCode>EA</QuantityTypeCode>\r\n         </CreateProductionPlanningOrder>\r\n      </glob:CreateProductionProposal>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
										},
										"url": {
											"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/manageproductionproposalin",
											"protocol": "https",
											"host": [
												"{{TenantHostname}}"
											],
											"path": [
												"sap",
												"bc",
												"srt",
												"scs",
												"sap",
												"manageproductionproposalin"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "html",
									"header": [
										{
											"key": "content-type",
											"value": "text/html; charset=utf-8"
										},
										{
											"key": "content-encoding",
											"value": "gzip"
										},
										{
											"key": "content-length",
											"value": "505"
										},
										{
											"key": "sap-system",
											"value": "KHL"
										},
										{
											"key": "www-authenticate",
											"value": "Basic realm=\"SAP NetWeaver Application Server [KHL/171][alias]\""
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=31536000; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "<html>\n    <head>\n        <title>Logon Error Message</title>\n        <META http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\">\n        <style type=\"text/css\">body { font-family:tahoma,helvetica,sans-serif;color:#333333;background-color:#FFFFFF; }td { font-family:tahoma,helvetica,sans-serif;font-size:70%;color:#333333; }h1 { font-family:tahoma,helvetica,sans-serif;font-size:160%;font-weight:bold;margin-top:15px;margin-bottom:3px;color:#003366; }h2 { font-family:verdana,helvetica,sans-serif;font-size:120%;font-style:italic;font-weight:bold;margin-top:6px;margin-bottom:6px;color:#999900; }p { font-family:tahoma,helvetica,sans-serif;color:#333333;margin-top:4px;margin-bottom:4px; }ul { font-family:tahoma,helvetica,sans-serif;color:#333333;list-style-type:square;margin-top:8px;margin-bottom:8px; }li { font-family:tahoma,helvetica,sans-serif;color:#33333;margin-top:4px; }.emphasize { color:#333333;background-color:#C8E3FF;padding:5px;}.note { color:#CC6600; }a { font-family:tahoma,helvetica,sans-serif;text-decoration:underline;color:#336699; }a:visited { color:#001166; }a:hover { text-decoration:none; }</style>\n    </head>\n    <body>\n        <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\">\n            <tr>\n                <td>\n                    <h1>Logon failed</h1>\n                </td>\n            </tr>\n        </table>\n    </body>\n</html>"
								}
							]
						},
						{
							"name": "Query private account (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8cf17a7f-31ba-49bb-af89-3429e9dab4ae",
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"",
											"//pm.environment.set(\"PrivateAccountInternalID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:CustomerByElementsResponse_sync'].Customer.InternalID);",
											"",
											"// Validations",
											"pm.test(\"Private Account: \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:CustomerByElementsResponse_sync'].Customer.InternalID + \" Queried Successfully \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:CustomerByElementsQuery_sync>\r\n         <CustomerSelectionByElements>\r\n            <SelectionByInternalID>\r\n               <InclusionExclusionCode>I</InclusionExclusionCode>\r\n               <IntervalBoundaryTypeCode>1</IntervalBoundaryTypeCode>\r\n               <LowerBoundaryInternalID>{{PrivateAccountInternalID}}</LowerBoundaryInternalID>\r\n            </SelectionByInternalID>\r\n \r\n         </CustomerSelectionByElements>\r\n        \r\n      </glob:CustomerByElementsQuery_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/querycustomerin1",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"querycustomerin1"
									]
								},
								"description": "Query Account ( Soap )"
							},
							"response": []
						},
						{
							"name": "Get private account",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "13783b8f-a601-492f-8b16-481c2a8417ff",
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"200 - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Cross site request forgery token:  received\", function () {",
											"    pm.response.to.have.header(\"x-csrf-token\");",
											"});",
											"",
											"// Get workplace address object ID and parten object ID",
											"var jsonResponse = pm.response.json();",
											"pm.environment.set(\"ObjectID\", jsonResponse.d.results[0].ObjectID);",
											"pm.environment.set(\"AccountObjectID\", jsonResponse.d.results[0].ObjectID);",
											"pm.environment.set(\"PrivateAccountInternalID\", jsonResponse.d.results[0].InternalID);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmucustomer/CustomerCollection?$filter=InternalID eq '{{PrivateAccountInternalID}}'&$expand=BusinessPartnerRelationshipBusinessPartnerRelationship,CustomerCurrentEmployeeResponsible,CustomerGeneralProductTaxExemption,SalesArrangementSalesArrangement,AddressSnapshotAddressSnapshot,AddressSnapshotAddressSnapshot/AddressSnapshotFormattedAddress,AddressSnapshotAddressSnapshot/AddressSnapshotPostalAddress,CustomerAttachmentFolder&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmucustomer",
										"CustomerCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "InternalID eq '{{PrivateAccountInternalID}}'"
										},
										{
											"key": "$expand",
											"value": "BusinessPartnerRelationshipBusinessPartnerRelationship,CustomerCurrentEmployeeResponsible,CustomerGeneralProductTaxExemption,SalesArrangementSalesArrangement,AddressSnapshotAddressSnapshot,AddressSnapshotAddressSnapshot/AddressSnapshotFormattedAddress,AddressSnapshotAddressSnapshot/AddressSnapshotPostalAddress,CustomerAttachmentFolder"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Activate private account",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
										"exec": [
											"var jsonResponse = pm.response.json();",
											"",
											"// Validations",
											"pm.test(\"Private Account: \" + jsonResponse.d.results.InternalID + \" Activated \", function () { pm.response.to.have.status(200) });",
											"pm.test(\"Private Account LifeCycleStatusCode status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"2\") });",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-csrf-token",
										"value": "{{x-csrf-token}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmucustomer/CustomerActivate?ObjectID='{{AccountObjectID}}'",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmucustomer",
										"CustomerActivate"
									],
									"query": [
										{
											"key": "ObjectID",
											"value": "'{{AccountObjectID}}'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Block private account",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
										"exec": [
											"var jsonResponse = pm.response.json();",
											"",
											"// Validations",
											"pm.test(\"Busienss Partner Person: \" + jsonResponse.d.results.InternalID + \" Blocked \", function () { pm.response.to.have.status(200) });",
											"pm.test(\"Busienss Partner Person LifeCycleStatusCode status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"3\") });",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-csrf-token",
										"value": "{{x-csrf-token}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmucustomer/CustomerBlock?ObjectID='{{AccountObjectID}}'",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmucustomer",
										"CustomerBlock"
									],
									"query": [
										{
											"key": "ObjectID",
											"value": "'{{AccountObjectID}}'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Unblock private account",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
										"exec": [
											"var jsonResponse = pm.response.json();",
											"",
											"// Validations",
											"pm.test(\"Private Account: \" + jsonResponse.d.results.InternalID + \" UnBlocked \", function () { pm.response.to.have.status(200) });",
											"pm.test(\"Private Account LifeCycleStatusCode status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"2\") });",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-csrf-token",
										"value": "{{x-csrf-token}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmucustomer/CustomerUnblock?ObjectID='{{AccountObjectID}}'",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmucustomer",
										"CustomerUnblock"
									],
									"query": [
										{
											"key": "ObjectID",
											"value": "'{{AccountObjectID}}'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Obsolete private account",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
										"exec": [
											"var jsonResponse = pm.response.json();",
											"",
											"// Validations",
											"pm.test(\"Private Account: \" + jsonResponse.d.results.InternalID + \" Flaged As Obsolete \", function () { pm.response.to.have.status(200) });",
											"pm.test(\"Private Account LifeCycleStatusCode status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"4\") });",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-csrf-token",
										"value": "{{x-csrf-token}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmucustomer/CustomerFlagAsObsolete?ObjectID='{{AccountObjectID}}'",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmucustomer",
										"CustomerFlagAsObsolete"
									],
									"query": [
										{
											"key": "ObjectID",
											"value": "'{{AccountObjectID}}'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "RevokeObsolescence private account",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
										"exec": [
											"var jsonResponse = pm.response.json();",
											"",
											"// Validations",
											"pm.test(\"Private Account: \" + jsonResponse.d.results.InternalID + \" Revoke Obsolescence \", function () { pm.response.to.have.status(200) });",
											"pm.test(\"Private Account LifeCycleStatusCode status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"3\") });",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-csrf-token",
										"value": "{{x-csrf-token}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmucustomer/CustomerRevokeObsolescence?ObjectID='{{AccountObjectID}}'",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmucustomer",
										"CustomerRevokeObsolescence"
									],
									"query": [
										{
											"key": "ObjectID",
											"value": "'{{AccountObjectID}}'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Unblock private account",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
										"exec": [
											"var jsonResponse = pm.response.json();",
											"",
											"// Validations",
											"pm.test(\"Private Account: \" + jsonResponse.d.results.InternalID + \" UnBlocked \", function () { pm.response.to.have.status(200) });",
											"pm.test(\"Private Account LifeCycleStatusCode status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"2\") });",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-csrf-token",
										"value": "{{x-csrf-token}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmucustomer/CustomerUnblock?ObjectID='{{AccountObjectID}}'",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmucustomer",
										"CustomerUnblock"
									],
									"query": [
										{
											"key": "ObjectID",
											"value": "'{{AccountObjectID}}'"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Corporate Account",
					"item": [
						{
							"name": "Create Corporate Account (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "691edeb4-7bfd-4e5f-8c75-c140cf9f04a2",
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"",
											"pm.environment.set(\"CorporateAccountInternalID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:CustomerBundleMaintainConfirmation_sync_V1'].Customer.InternalID);",
											"",
											"// Validations",
											"pm.test(\"Corporate Account \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:CustomerBundleMaintainConfirmation_sync_V1'].Customer.InternalID + \" created\", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3e65b165-9326-4ac2-9a90-37c0ed7a5612",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:CustomerBundleMaintainRequest_sync_V1>\r\n        <Customer actionCode=\"01\" textListCompleteTransmissionIndicator=\"true\">\r\n        \t\r\n    \t<!-- <InternalID>{{CorporateAccountInternalID}}</InternalID> --> <!-- Enter a Unique ID -->\r\n        <CategoryCode>2</CategoryCode>\r\n\t\t<!-- Code 2 marks as coorperate account -->\r\n        <ProspectIndicator>false</ProspectIndicator>\r\n        <CustomerIndicator>true</CustomerIndicator>\r\n         <!--<LifeCycleStatusCode>2</LifeCycleStatusCode>--> <!-- set the status during Create -->\r\n\t\t\r\n\t\t<!-- General information -->\r\n        <Organisation>\r\n            <CompanyLegalFormCode>14</CompanyLegalFormCode>\r\n            <FirstLineName>{{AccountName}}</FirstLineName>\r\n            <SecondLineName>{{AccountAdditionalName}}</SecondLineName>\r\n        </Organisation>\r\n        <ContactAllowedCode>1</ContactAllowedCode>\r\n        <LegalCompetenceIndicator>true</LegalCompetenceIndicator>\r\n\t\t\r\n\t\t <!--  Enter a Unique DunAndBradstreetNumberID & GlobalLocationNumberID -->\r\n   \t    <!--  <DunAndBradstreetNumberID>111164758</DunAndBradstreetNumberID>\r\n        <GlobalLocationNumberID>111164758</GlobalLocationNumberID> -->\r\n        <ABCClassificationCode>A</ABCClassificationCode>\r\n        <NielsenRegionCode>01</NielsenRegionCode>\r\n        <IndustrialSectorCode>11</IndustrialSectorCode>\r\n\t\t\r\n\t\t<!-- Maintain company adress information-->\r\n        <AddressInformation actionCode=\"01\" addressUsageListCompleteTransmissionIndicator=\"true\">\r\n            <ObjectNodeSenderTechnicalID>02</ObjectNodeSenderTechnicalID>\r\n            <AddressUsage actionCode=\"01\">\r\n                <ObjectNodeSenderTechnicalID>03</ObjectNodeSenderTechnicalID>\r\n                <AddressUsageCode>XXDEFAULT</AddressUsageCode>\r\n                <DefaultIndicator>false</DefaultIndicator>\r\n            </AddressUsage>\r\n            <Address actionCode=\"01\" telephoneListCompleteTransmissionIndicator=\"true\">\r\n                <CorrespondenceLanguageCode>EN</CorrespondenceLanguageCode>\r\n                <PreferredCommunicationMediumTypeCode>LET</PreferredCommunicationMediumTypeCode>\r\n                <EmailURI>customer01@bydmail.com</EmailURI>\r\n                <FacsimileFormattedNumberDescription>+1 7164824867</FacsimileFormattedNumberDescription>\r\n                <PostalAddress>\r\n                     <CountryCode>US</CountryCode>\r\n                     <RegionCode listID=\"US\">NY</RegionCode>\r\n                     <CityName>Buffalo</CityName>\r\n                     <StreetPostalCode>14204</StreetPostalCode>\r\n                     <StreetName>Seneca Street</StreetName>\r\n                     <HouseID>145</HouseID>\r\n                     <TaxJurisdictionCode listID=\"US\">NY</TaxJurisdictionCode>\r\n                     <TimeZoneCode>EST</TimeZoneCode>\r\n                  </PostalAddress>\r\n\r\n                <Telephone>\r\n                    <ObjectNodeSenderTechnicalID>04</ObjectNodeSenderTechnicalID>\r\n                    <FormattedNumberDescription>+12 34567890</FormattedNumberDescription>\r\n                    <MobilePhoneNumberIndicator>true</MobilePhoneNumberIndicator>\r\n                </Telephone>\r\n                <Telephone>\r\n                    <ObjectNodeSenderTechnicalID>05</ObjectNodeSenderTechnicalID>\r\n                    <FormattedNumberDescription>+1 7164824863</FormattedNumberDescription>\r\n                    <MobilePhoneNumberIndicator>false</MobilePhoneNumberIndicator>\r\n                </Telephone>\r\n                <WebURI>http://www.company.com/</WebURI>\r\n            </Address>\r\n        </AddressInformation>\r\n\t\t\r\n\t\t<!-- Maintain relations to existing business partners -->\r\n        <Relationship actionCode=\"01\">\r\n               <RelationshipBusinessPartnerInternalID>CPSENT_1</RelationshipBusinessPartnerInternalID>\r\n               <RoleCode>BURC01-2</RoleCode>\r\n        </Relationship>\r\n              \r\n\t\t<!-- Manage account contact person relations -->\r\n        <ContactPerson actionCode=\"01\" workplaceTelephoneListCompleteTransmissionIndicator=\"true\">\r\n            <ObjectNodeSenderTechnicalID>07</ObjectNodeSenderTechnicalID>\r\n            <DefaultContactPersonIndicator>true</DefaultContactPersonIndicator>\r\n            <FormOfAddressCode>0002</FormOfAddressCode>\r\n            <AcademicTitleCode>0002</AcademicTitleCode>\r\n            <GivenName>Frank</GivenName>\r\n            <MiddleName>MiddleName</MiddleName>\r\n            <FamilyName>Sent</FamilyName>\r\n            <BirthName>BirthName</BirthName>\r\n            <NickName>NickName</NickName>\r\n            <GenderCode>1</GenderCode>\r\n            <BirthDate>1999-01-24</BirthDate>\r\n            <NonVerbalCommunicationLanguageCode>DE</NonVerbalCommunicationLanguageCode>\r\n            <OccupationCode>0004</OccupationCode>\r\n            <BusinessPartnerFunctionTypeCode>0028</BusinessPartnerFunctionTypeCode>\r\n            <BusinessPartnerFunctionalAreaCode>0003</BusinessPartnerFunctionalAreaCode>\r\n            <VIPReasonCode>A</VIPReasonCode>\r\n            <MaritalStatusCode>1</MaritalStatusCode>\r\n            <WorkplacePreferredCommunicationMediumTypeCode>INT</WorkplacePreferredCommunicationMediumTypeCode>\r\n            <WorkplaceEmailURI>mr.test@test.com</WorkplaceEmailURI>\r\n            <WorkplaceFacsimileFormattedNumberDescription>+1 7164824867</WorkplaceFacsimileFormattedNumberDescription>\r\n            <WorkplaceTelephone>\r\n                <ObjectNodeSenderTechnicalID>08</ObjectNodeSenderTechnicalID>\r\n                <FormattedNumberDescription>+1 7164824863</FormattedNumberDescription>\r\n                <MobilePhoneNumberIndicator>false</MobilePhoneNumberIndicator>\r\n            </WorkplaceTelephone>\r\n            <WorkplaceWebURI>http://www.contact.com/</WorkplaceWebURI>\r\n            <WorkplaceFunctionalTitleName>Manager</WorkplaceFunctionalTitleName>\r\n            <WorkplaceDepartmentName>ContactDepartment</WorkplaceDepartmentName>\r\n            <WorkplaceBuildingID>Buff01</WorkplaceBuildingID>\r\n            <WorkplaceFloorID>100</WorkplaceFloorID>\r\n            <WorkplaceRoomID>R101</WorkplaceRoomID>\r\n\t\t\t\r\n\t\t\t<!--Private Address-->\r\n            <AddressInformation actionCode=\"01\">\r\n                <Address actionCode=\"01\" telephoneListCompleteTransmissionIndicator=\"true\">\r\n                    <ObjectNodeSenderTechnicalID>09</ObjectNodeSenderTechnicalID>\r\n                    <EmailURI>private@contact.com</EmailURI>\r\n                    <FacsimileFormattedNumberDescription>+98 76543210</FacsimileFormattedNumberDescription>\r\n                    <PostalAddress>\r\n                     <CountryCode>US</CountryCode>\r\n                     <RegionCode listID=\"US\">NY</RegionCode>\r\n                     <CityName>Buffalo</CityName>\r\n                     <StreetPostalCode>14204</StreetPostalCode>\r\n                     <StreetName>Seneca Street</StreetName>\r\n                     <HouseID>145</HouseID>\r\n                     <TaxJurisdictionCode listID=\"US\">NY</TaxJurisdictionCode>\r\n                     <TimeZoneCode>EST</TimeZoneCode>\r\n                  </PostalAddress>\r\n                    <Telephone>\r\n                     <FormattedNumberDescription>+1 7164824863</FormattedNumberDescription>\r\n                        <MobilePhoneNumberIndicator>false</MobilePhoneNumberIndicator>\r\n                    </Telephone>\r\n                </Address>\r\n                <AddressUsage actionCode=\"01\">\r\n                    <ObjectNodeSenderTechnicalID>11</ObjectNodeSenderTechnicalID>\r\n                    <AddressUsageCode>XXDEFAULT</AddressUsageCode>\r\n                    <DefaultIndicator>false</DefaultIndicator>\r\n                </AddressUsage>\r\n            </AddressInformation>\r\n        </ContactPerson>\r\n\r\n\t\t<!-- Assign employees as directly responsible for the account-->\r\n        <DirectResponsibility actionCode=\"01\">\r\n            <ObjectNodeSenderTechnicalID>15</ObjectNodeSenderTechnicalID>\r\n            <PartyRoleCode>145</PartyRoleCode>\r\n            <EmployeeID>E0001</EmployeeID>\r\n        </DirectResponsibility>\r\n\t\t\r\n\t\t<!-- Maintain account sales data -->\r\n        <SalesArrangement>\r\n            <ObjectNodeSenderTechnicalID>16</ObjectNodeSenderTechnicalID>\r\n            <SalesOrganisationID>P1110</SalesOrganisationID>\r\n            <DistributionChannelCode>02</DistributionChannelCode>\r\n            <Incoterms>\r\n                <ClassificationCode>CFR</ClassificationCode>\r\n                <TransferLocationName>FRA</TransferLocationName>\r\n            </Incoterms>\r\n            <DeliveryPriorityCode>1</DeliveryPriorityCode>\r\n            <CompleteDeliveryRequestedIndicator>true</CompleteDeliveryRequestedIndicator>\r\n            <CurrencyCode>USD</CurrencyCode>\r\n            <CustomerGroupCode>01</CustomerGroupCode>\r\n            <CashDiscountTermsCode>1001</CashDiscountTermsCode>\r\n        </SalesArrangement>\r\n        <InvoicingBlockingReasonCode>03</InvoicingBlockingReasonCode> <!-- 03: Pricing incomplete -->\r\n        <CustomerTransactionDocumentFulfilmentBlockingReasonCode>91</CustomerTransactionDocumentFulfilmentBlockingReasonCode> <!-- 91: Customer request -->\r\n        <CustomerBlockingReasonCode>05</CustomerBlockingReasonCode> <!-- 05: Always Prospect -->\r\n\r\n\t\t<!-- Maintain account tax numbers -->\r\n        <TaxNumber actionCode=\"01\">\r\n            <ObjectNodeSenderTechnicalID>21</ObjectNodeSenderTechnicalID>\r\n            <CountryCode>US</CountryCode>\r\n            <TaxIdentificationNumberTypeCode>1</TaxIdentificationNumberTypeCode>\r\n            <PartyTaxID>12124444</PartyTaxID>\r\n        </TaxNumber>\r\n\r\n\t\t<!-- Maintain account contact hours -->\r\n        <OperatingHoursInformation actionCode=\"01\" recurringDayProgrammeListCompleteTransmissionIndicator=\"true\">\r\n            <ObjectNodeSenderTechnicalID>23</ObjectNodeSenderTechnicalID>\r\n            <RoleCode>A</RoleCode>\r\n            <RecurringDayProgramme operatingHoursListCompleteTransmissionIndicator=\"true\">\r\n                <ObjectNodeSenderTechnicalID>22</ObjectNodeSenderTechnicalID>\r\n                <WeekdaySelection>\r\n                    <MondayIndicator>true</MondayIndicator>\r\n                    <TuesdayIndicator>true</TuesdayIndicator>\r\n                    <WednesdayIndicator>true</WednesdayIndicator>\r\n                    <ThursdayIndicator>true</ThursdayIndicator>\r\n                    <FridayIndicator>true</FridayIndicator>\r\n                    <SaturdayIndicator>false</SaturdayIndicator>\r\n                    <SundayIndicator>false</SundayIndicator>\r\n                </WeekdaySelection>\r\n                <OperatingHours>\r\n                    <ObjectNodeSenderTechnicalID>23</ObjectNodeSenderTechnicalID>\r\n                    <TimePeriod>\r\n                        <StartTime>09:00:00</StartTime>\r\n                        <EndTime>18:00:00</EndTime>\r\n                    </TimePeriod>\r\n                </OperatingHours>\r\n            </RecurringDayProgramme>\r\n        </OperatingHoursInformation>\r\n\r\n\t\t<!-- Maintain customer attachmens like documents, images, links... -->\r\n        <AttachmentFolder DocumentListCompleteTransmissionIndicator=\"true\" ActionCode=\"01\">\r\n\t\t<!-- Link attachment-->\r\n            <Document ActionCode=\"01\">\r\n                                <VisibleIndicator>true</VisibleIndicator>\r\n                  <CategoryCode>3</CategoryCode>\r\n                  <TypeCode>10016</TypeCode>\r\n                 \r\n                  <Name>www.sap.com</Name>\r\n                  <AlternativeName>http://www.sap.com</AlternativeName>\r\n                  <Description>http://www.sap.com</Description>\r\n                  <ExternalLinkWebURI>http://www.sap.com</ExternalLinkWebURI>\r\n                  <FileContentURI>http://www.sap.com</FileContentURI>\r\n            </Document>\r\n        </AttachmentFolder>\r\n\t\t\r\n\t\t<!-- Add account notes, financial data notes or internal/external sales notes -->\r\n        <Text actionCode=\"01\">\r\n            <ObjectNodeSenderTechnicalID>24</ObjectNodeSenderTechnicalID>\r\n            <TypeCode>10034</TypeCode>\r\n            <ContentText>English Text</ContentText>\r\n        </Text>\r\n        <DuplicateCheckApplyIndicator>false</DuplicateCheckApplyIndicator>\r\n\t  </Customer>\r\n      </glob:CustomerBundleMaintainRequest_sync_V1>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managecustomerin1",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managecustomerin1"
									]
								}
							},
							"response": [
								{
									"name": "Create production proposal (Soap 1.1)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:CreateProductionProposal>\r\n         <CreateProductionPlanningOrder>\r\n            <SequenceNumber>1</SequenceNumber>\r\n            <SupplyPlanningAreaID>P1100</SupplyPlanningAreaID>\r\n            <MaterialID>P100101</MaterialID>\r\n            <!-- <ProductRequirementSpecificationID>?</ProductRequirementSpecificationID> -->\r\n            <MaterialAvailabilityDateTime timeZoneCode=\"CET\">2019-02-05T12:00:00.0000000Z</MaterialAvailabilityDateTime>\r\n            <Quantity unitCode=\"EA\">1</Quantity>\r\n            <QuantityTypeCode>EA</QuantityTypeCode>\r\n         </CreateProductionPlanningOrder>\r\n      </glob:CreateProductionProposal>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
										},
										"url": {
											"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/manageproductionproposalin",
											"protocol": "https",
											"host": [
												"{{TenantHostname}}"
											],
											"path": [
												"sap",
												"bc",
												"srt",
												"scs",
												"sap",
												"manageproductionproposalin"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "html",
									"header": [
										{
											"key": "content-type",
											"value": "text/html; charset=utf-8"
										},
										{
											"key": "content-encoding",
											"value": "gzip"
										},
										{
											"key": "content-length",
											"value": "505"
										},
										{
											"key": "sap-system",
											"value": "KHL"
										},
										{
											"key": "www-authenticate",
											"value": "Basic realm=\"SAP NetWeaver Application Server [KHL/171][alias]\""
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=31536000; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "<html>\n    <head>\n        <title>Logon Error Message</title>\n        <META http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\">\n        <style type=\"text/css\">body { font-family:tahoma,helvetica,sans-serif;color:#333333;background-color:#FFFFFF; }td { font-family:tahoma,helvetica,sans-serif;font-size:70%;color:#333333; }h1 { font-family:tahoma,helvetica,sans-serif;font-size:160%;font-weight:bold;margin-top:15px;margin-bottom:3px;color:#003366; }h2 { font-family:verdana,helvetica,sans-serif;font-size:120%;font-style:italic;font-weight:bold;margin-top:6px;margin-bottom:6px;color:#999900; }p { font-family:tahoma,helvetica,sans-serif;color:#333333;margin-top:4px;margin-bottom:4px; }ul { font-family:tahoma,helvetica,sans-serif;color:#333333;list-style-type:square;margin-top:8px;margin-bottom:8px; }li { font-family:tahoma,helvetica,sans-serif;color:#33333;margin-top:4px; }.emphasize { color:#333333;background-color:#C8E3FF;padding:5px;}.note { color:#CC6600; }a { font-family:tahoma,helvetica,sans-serif;text-decoration:underline;color:#336699; }a:visited { color:#001166; }a:hover { text-decoration:none; }</style>\n    </head>\n    <body>\n        <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\">\n            <tr>\n                <td>\n                    <h1>Logon failed</h1>\n                </td>\n            </tr>\n        </table>\n    </body>\n</html>"
								}
							]
						},
						{
							"name": "Query corporate account (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8cf17a7f-31ba-49bb-af89-3429e9dab4ae",
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"",
											"//pm.environment.set(\"PrivateAccountInternalID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:CustomerByElementsResponse_sync'].Customer.InternalID);",
											"",
											"// Validations",
											"pm.test(\"Coporate Account: \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:CustomerByElementsResponse_sync'].Customer.InternalID + \" Queried Successfully \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:CustomerByElementsQuery_sync>\r\n         <CustomerSelectionByElements>\r\n            <SelectionByInternalID>\r\n               <InclusionExclusionCode>I</InclusionExclusionCode>\r\n               <IntervalBoundaryTypeCode>1</IntervalBoundaryTypeCode>\r\n               <LowerBoundaryInternalID>{{CorporateAccountInternalID}}</LowerBoundaryInternalID>\r\n            </SelectionByInternalID>\r\n \r\n         </CustomerSelectionByElements>\r\n        \r\n      </glob:CustomerByElementsQuery_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/querycustomerin1",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"querycustomerin1"
									]
								},
								"description": "Query Account ( Soap )"
							},
							"response": []
						},
						{
							"name": "Get Corporate Account",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "13783b8f-a601-492f-8b16-481c2a8417ff",
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"200 - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Corporate Account request forgery token:  received\", function () {",
											"    pm.response.to.have.header(\"x-csrf-token\");",
											"});",
											"",
											"// Get workplace address object ID and parten object ID",
											"var jsonResponse = pm.response.json();",
											"pm.environment.set(\"ObjectID\", jsonResponse.d.results[0].ObjectID);",
											"pm.environment.set(\"AccountObjectID\", jsonResponse.d.results[0].ObjectID);",
											"pm.environment.set(\"CorporateAccountInternalID\", jsonResponse.d.results[0].InternalID);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmucustomer/CustomerCollection?$filter=InternalID eq '{{CorporateAccountInternalID}}'&$expand=BusinessPartnerRelationshipBusinessPartnerRelationship,CustomerCurrentEmployeeResponsible,CustomerGeneralProductTaxExemption,SalesArrangementSalesArrangement,AddressSnapshotAddressSnapshot,AddressSnapshotAddressSnapshot/AddressSnapshotFormattedAddress,AddressSnapshotAddressSnapshot/AddressSnapshotPostalAddress,CustomerAttachmentFolder&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmucustomer",
										"CustomerCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "InternalID eq '{{CorporateAccountInternalID}}'"
										},
										{
											"key": "$expand",
											"value": "BusinessPartnerRelationshipBusinessPartnerRelationship,CustomerCurrentEmployeeResponsible,CustomerGeneralProductTaxExemption,SalesArrangementSalesArrangement,AddressSnapshotAddressSnapshot,AddressSnapshotAddressSnapshot/AddressSnapshotFormattedAddress,AddressSnapshotAddressSnapshot/AddressSnapshotPostalAddress,CustomerAttachmentFolder"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Activate corporate account",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
										"exec": [
											"var jsonResponse = pm.response.json();",
											"",
											"// Validations",
											"pm.test(\"Corporate Account: \" + jsonResponse.d.results.InternalID + \" Activated \", function () { pm.response.to.have.status(200) });",
											"pm.test(\"Corporate Account LifeCycleStatusCode status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"2\") });",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-csrf-token",
										"value": "{{x-csrf-token}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmucustomer/CustomerActivate?ObjectID='{{AccountObjectID}}'",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmucustomer",
										"CustomerActivate"
									],
									"query": [
										{
											"key": "ObjectID",
											"value": "'{{AccountObjectID}}'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Block corporate account",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
										"exec": [
											"var jsonResponse = pm.response.json();",
											"",
											"// Validations",
											"pm.test(\"Corporate Account: \" + jsonResponse.d.results.InternalID + \" Blocked \", function () { pm.response.to.have.status(200) });",
											"pm.test(\"Corporate Account LifeCycleStatusCode status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"3\") });",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-csrf-token",
										"value": "{{x-csrf-token}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmucustomer/CustomerBlock?ObjectID='{{AccountObjectID}}'",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmucustomer",
										"CustomerBlock"
									],
									"query": [
										{
											"key": "ObjectID",
											"value": "'{{AccountObjectID}}'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Unblock corporate account",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
										"exec": [
											"var jsonResponse = pm.response.json();",
											"",
											"// Validations",
											"pm.test(\"Corporate Account: \" + jsonResponse.d.results.InternalID + \" UnBlocked \", function () { pm.response.to.have.status(200) });",
											"pm.test(\"Corporate Account LifeCycleStatusCode status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"2\") });",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-csrf-token",
										"value": "{{x-csrf-token}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmucustomer/CustomerUnblock?ObjectID='{{AccountObjectID}}'",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmucustomer",
										"CustomerUnblock"
									],
									"query": [
										{
											"key": "ObjectID",
											"value": "'{{AccountObjectID}}'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Obsolete corporate account",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
										"exec": [
											"var jsonResponse = pm.response.json();",
											"",
											"// Validations",
											"pm.test(\"Corporate Account: \" + jsonResponse.d.results.InternalID + \" Flaged As Obsolete \", function () { pm.response.to.have.status(200) });",
											"pm.test(\"Corporate Account LifeCycleStatusCode status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"4\") });",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-csrf-token",
										"value": "{{x-csrf-token}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmucustomer/CustomerFlagAsObsolete?ObjectID='{{AccountObjectID}}'",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmucustomer",
										"CustomerFlagAsObsolete"
									],
									"query": [
										{
											"key": "ObjectID",
											"value": "'{{AccountObjectID}}'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "RevokeObsolescence corporate account",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
										"exec": [
											"var jsonResponse = pm.response.json();",
											"",
											"// Validations",
											"pm.test(\"Corporate Account: \" + jsonResponse.d.results.InternalID + \" Flaged As Obsolete \", function () { pm.response.to.have.status(200) });",
											"pm.test(\"Coporate Account LifeCycleStatusCode status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"3\") });",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-csrf-token",
										"value": "{{x-csrf-token}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmucustomer/CustomerRevokeObsolescence?ObjectID='{{AccountObjectID}}'",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmucustomer",
										"CustomerRevokeObsolescence"
									],
									"query": [
										{
											"key": "ObjectID",
											"value": "'{{AccountObjectID}}'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Unblock corporate account",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
										"exec": [
											"var jsonResponse = pm.response.json();",
											"",
											"// Validations",
											"pm.test(\"Coporate Account: \" + jsonResponse.d.results.InternalID + \" UnBlocked \", function () { pm.response.to.have.status(200) });",
											"pm.test(\"Corporate Account LifeCycleStatusCode status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"2\") });",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-csrf-token",
										"value": "{{x-csrf-token}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmucustomer/CustomerUnblock?ObjectID='{{AccountObjectID}}'",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmucustomer",
										"CustomerUnblock"
									],
									"query": [
										{
											"key": "ObjectID",
											"value": "'{{AccountObjectID}}'"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			],
			"description": "Maintain Customer Account"
		},
		{
			"name": "Suppliers",
			"item": [
				{
					"name": "Create supplier (Soap 1.1)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "691edeb4-7bfd-4e5f-8c75-c140cf9f04a2",
								"exec": [
									"let jsonResponse = xml2Json(responseBody);",
									"",
									"pm.environment.set(\"SupplierInternalID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SupplierBundleMaintainConfirmation_sync_V1'].Supplier.InternalID);",
									"",
									"// Validations",
									"pm.test(\"Supplier \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SupplierBundleMaintainConfirmation_sync_V1'].Supplier.InternalID + \" created\", function () { pm.response.to.have.status(200) });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "3e65b165-9326-4ac2-9a90-37c0ed7a5612",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{CommunicationUserPW}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{CommunicationUser}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:SupplierBundleMaintainRequest_sync_V1>\r\n        <Supplier actionCode=\"01\" textListCompleteTransmissionIndicator=\"true\">\r\n       \r\n <!-- General information -->\r\n       \r\n       <!-- <InternalID>{{SupplierInternalID}}</InternalID>-->\r\n\r\n        <FirstLineName>{{SupplierName}}</FirstLineName>\r\n        <SecondLineName>{{SupplierAdditionalName}}</SecondLineName>\r\n        <SupplierIndicator>true</SupplierIndicator>\r\n        <ABCClassificationCode>A</ABCClassificationCode>\r\n        <IndustrialSectorCode>11</IndustrialSectorCode>\r\n        <MinimumOrderValue currencyCode=\"EUR\">3</MinimumOrderValue>\r\n        <!--  <QualityManagementISOStandardCode>Z01</QualityManagementISOStandardCode>\r\n        <QualityManagementValidToDate>2999-01-24</QualityManagementValidToDate> -->\r\n        \r\n  <!-- Maintain company adress information-->\r\n        <AddressInformation actionCode=\"01\" addressUsageListCompleteTransmissionIndicator=\"true\">\r\n            <ObjectNodeSenderTechnicalID>02</ObjectNodeSenderTechnicalID>\r\n            <AddressUsage actionCode=\"01\">\r\n                <ObjectNodeSenderTechnicalID>03</ObjectNodeSenderTechnicalID>\r\n                <AddressUsageCode>XXDEFAULT</AddressUsageCode>\r\n                <DefaultIndicator>false</DefaultIndicator>\r\n            </AddressUsage>\r\n            <Address actionCode=\"01\">\r\n                <PostalAddress>\r\n                     <CountryCode>US</CountryCode>\r\n                     <RegionCode listID=\"US\">NY</RegionCode>\r\n                     <CityName>Buffalo</CityName>\r\n                     <StreetPostalCode>14204</StreetPostalCode>\r\n                     <StreetName>Seneca Street</StreetName>\r\n                     <HouseID>145</HouseID>\r\n                     <TaxJurisdictionCode listID=\"US\">NY</TaxJurisdictionCode>\r\n                     <TimeZoneCode>EST</TimeZoneCode>\r\n                </PostalAddress>\r\n                <PhoneFormattedNumberDescription>+1 23456789</PhoneFormattedNumberDescription>\r\n                <FacsimileFormattedNumberDescription>+1 98765432</FacsimileFormattedNumberDescription>\r\n                <EMailURI>mail@sap.com</EMailURI>\r\n                <WebURI>http://sap.com/</WebURI>\r\n                <CorrespondenceLanguageCode>EN</CorrespondenceLanguageCode>\r\n            </Address>\r\n        </AddressInformation>\r\n\r\n <!-- Manage account contact person relations -->\r\n         <ContactPerson actionCode=\"01\" workplaceTelephoneListCompleteTransmissionIndicator=\"true\">\r\n            <ObjectNodeSenderTechnicalID>04</ObjectNodeSenderTechnicalID>\r\n            <DefaultContactPersonIndicator>true</DefaultContactPersonIndicator>\r\n            <FormOfAddressCode>0002</FormOfAddressCode>\r\n            <AcademicTitleCode>0002</AcademicTitleCode>\r\n            <GivenName>Contact</GivenName>\r\n            <MiddleName>Middle</MiddleName>\r\n            <FamilyName>Test</FamilyName>\r\n            <BirthName>Birth</BirthName>\r\n            <NickName>Nick</NickName>\r\n            <GenderCode>1</GenderCode>\r\n            <BirthDate>1999-01-24</BirthDate>\r\n            <NonVerbalCommunicationLanguageCode>DE</NonVerbalCommunicationLanguageCode>\r\n            <OccupationCode>0004</OccupationCode>\r\n            <BusinessPartnerFunctionTypeCode>0028</BusinessPartnerFunctionTypeCode>\r\n            <BusinessPartnerFunctionalAreaCode>0003</BusinessPartnerFunctionalAreaCode>\r\n            <VIPReasonCode>A</VIPReasonCode>\r\n            <MaritalStatusCode>1</MaritalStatusCode>\r\n            <LifeCycleStatusCode>2</LifeCycleStatusCode>\r\n            <WorkplacePreferredCommunicationMediumTypeCode>LET</WorkplacePreferredCommunicationMediumTypeCode>\r\n            <WorkplaceEmailURI>mr.test@test.com</WorkplaceEmailURI>\r\n            <WorkplaceFacsimileFormattedNumberDescription>+49 129398182</WorkplaceFacsimileFormattedNumberDescription>\r\n            <WorkplaceTelephone>\r\n                <ObjectNodeSenderTechnicalID>05</ObjectNodeSenderTechnicalID>\r\n                <FormattedNumberDescription>+1 23324324</FormattedNumberDescription>\r\n                <MobilePhoneNumberIndicator>true</MobilePhoneNumberIndicator>\r\n            </WorkplaceTelephone>\r\n            <WorkplaceTelephone>\r\n                <ObjectNodeSenderTechnicalID>06</ObjectNodeSenderTechnicalID>\r\n                <FormattedNumberDescription>+1 123456777</FormattedNumberDescription>\r\n                <MobilePhoneNumberIndicator>false</MobilePhoneNumberIndicator>\r\n            </WorkplaceTelephone>\r\n            <WorkplaceWebURI>http://www.sap.com</WorkplaceWebURI>\r\n            <WorkplaceFunctionalTitleName>Manager</WorkplaceFunctionalTitleName>\r\n            <WorkplaceDepartmentName>TestDepartment</WorkplaceDepartmentName>\r\n            <WorkplaceBuildingID>WDF</WorkplaceBuildingID>\r\n            <WorkplaceFloorID>250</WorkplaceFloorID>\r\n            <WorkplaceRoomID>R341</WorkplaceRoomID>\r\n            <AddressInformation actionCode=\"01\">\r\n                <Address actionCode=\"01\" telephoneListCompleteTransmissionIndicator=\"true\">\r\n                    <ObjectNodeSenderTechnicalID>10</ObjectNodeSenderTechnicalID>\r\n                    <EmailURI>private@firstline.com</EmailURI>\r\n                    <FacsimileFormattedNumberDescription>987</FacsimileFormattedNumberDescription>\r\n                    <PostalAddress>\r\n                        <CountryCode>US</CountryCode>\r\n                        <RegionCode>AL</RegionCode>\r\n                        <CountyName>County2</CountyName>\r\n                        <CityName>City2</CityName>\r\n                        <AdditionalCityName>AddCity2</AdditionalCityName>\r\n                        <DistrictName>Distr2</DistrictName>\r\n                        <StreetPostalCode>12346</StreetPostalCode>\r\n                        <POBoxPostalCode>23457</POBoxPostalCode>\r\n                        <CompanyPostalCode/>\r\n                        <StreetPrefixName>StrPrefix2</StreetPrefixName>\r\n                        <AdditionalStreetPrefixName>AddPrefix2</AdditionalStreetPrefixName>\r\n                        <StreetName>Street2</StreetName>\r\n                        <StreetSuffixName>Street Sufix2</StreetSuffixName>\r\n                        <AdditionalStreetSuffixName>AddStrSuffix2</AdditionalStreetSuffixName>\r\n                        <HouseID>98</HouseID>\r\n                        <CareOfName>CareOf2</CareOfName>\r\n                        <POBoxDeviatingCountryCode>DE</POBoxDeviatingCountryCode>\r\n                        <POBoxDeviatingRegionCode>02</POBoxDeviatingRegionCode>\r\n                        <POBoxDeviatingCityName>DevCity2</POBoxDeviatingCityName>\r\n                        <POBoxID>box2</POBoxID>\r\n                        <POBoxIndicator>true</POBoxIndicator>\r\n                        <TaxJurisdictionCode>AL</TaxJurisdictionCode>\r\n                        <TimeZoneCode>EST</TimeZoneCode>\r\n                    </PostalAddress>\r\n                    <Telephone>\r\n                        <ObjectNodeSenderTechnicalID>11</ObjectNodeSenderTechnicalID>\r\n                        <FormattedNumberDescription>7</FormattedNumberDescription>\r\n                        <MobilePhoneNumberIndicator>true</MobilePhoneNumberIndicator>\r\n                    </Telephone>\r\n                    <Telephone>\r\n                        <ObjectNodeSenderTechnicalID>12</ObjectNodeSenderTechnicalID>\r\n                        <FormattedNumberDescription>13</FormattedNumberDescription>\r\n                        <MobilePhoneNumberIndicator>false</MobilePhoneNumberIndicator>\r\n                    </Telephone>\r\n                </Address>\r\n                <AddressUsage actionCode=\"01\">\r\n                    <ObjectNodeSenderTechnicalID>13</ObjectNodeSenderTechnicalID>\r\n                    <AddressUsageCode>XXDEFAULT</AddressUsageCode>\r\n                    <DefaultIndicator>false</DefaultIndicator>\r\n                </AddressUsage>\r\n            </AddressInformation>\r\n            <AddressInformation actionCode=\"01\">\r\n                <Address actionCode=\"01\" telephoneListCompleteTransmissionIndicator=\"true\">\r\n                    <ObjectNodeSenderTechnicalID>14</ObjectNodeSenderTechnicalID>\r\n                    <EmailURI>private2@firstline.com</EmailURI>\r\n                </Address>\r\n            </AddressInformation>\r\n        </ContactPerson>\r\n        \r\n<!-- Add purchasing data -->\r\n        <PurchasingData actionCode=\"01\">\r\n            <ObjectNodeSenderTechnicalID>16</ObjectNodeSenderTechnicalID>\r\n            <CashDiscountTermsCode>0004</CashDiscountTermsCode>\r\n            <IncotermsCode>FCA</IncotermsCode>\r\n            <IncotermsLocationName>IncotermsLocation</IncotermsLocationName>\r\n            <PurchaseOrderCurrencyCode>EUR</PurchaseOrderCurrencyCode>\r\n            <PurchasingBlockIndicator>true</PurchasingBlockIndicator>\r\n            <CustomerIDAtSupplier>SUPPLIER01</CustomerIDAtSupplier>\r\n            <PurchaseOrderConfirmationRequiredCode>02</PurchaseOrderConfirmationRequiredCode>\r\n            <EvaluatedReceiptSettlementIndicator>true</EvaluatedReceiptSettlementIndicator>\r\n        </PurchasingData>\r\n\r\n        <DeviantTaxClassification actionCode=\"01\">\r\n            <ObjectNodeSenderTechnicalID>02</ObjectNodeSenderTechnicalID>\r\n            <CountryCode>AT</CountryCode>\r\n            <TaxIdentificationNumberTypeCode>2</TaxIdentificationNumberTypeCode>\r\n            <PartyTaxID schemeID=\"\">1234567</PartyTaxID>\r\n        </DeviantTaxClassification>\r\n\r\n        <WithholdingTaxClassification actionCode=\"01\">\r\n            <ObjectNodeSenderTechnicalID>03</ObjectNodeSenderTechnicalID>\r\n            <CountryCode>CN</CountryCode>\r\n            <TaxTypeCode listID=\"\">2</TaxTypeCode>\r\n            <TaxRateTypeCode listID=\"\">1</TaxRateTypeCode>\r\n        </WithholdingTaxClassification>\r\n\r\n <!-- Maintain tax exemption details -->\r\n        <GeneralProductTaxExemption actionCode=\"01\">\r\n            <ObjectNodeSenderTechnicalID>04</ObjectNodeSenderTechnicalID>\r\n            <CountryCode>CH</CountryCode>\r\n            <RegionCode>AG</RegionCode>\r\n            <TaxTypeCode listID=\"\">1</TaxTypeCode>\r\n            <ReasonCode listID=\"\">1</ReasonCode>\r\n        </GeneralProductTaxExemption>\r\n\r\n<!--  Add supplier notes or financial data notes -->\r\n        <Text actionCode=\"01\">\r\n            <ObjectNodeSenderTechnicalID>24</ObjectNodeSenderTechnicalID>\r\n            <TypeCode>10035</TypeCode>\r\n            <ContentText>English Text</ContentText>\r\n        </Text>\r\n\r\n<!-- Maintain customer attachmens like documents, images, links... -->\r\n        <AttachmentFolder>\r\n<!-- Link attachment-->\r\n            <Document ActionCode=\"01\">\r\n                                <VisibleIndicator>true</VisibleIndicator>\r\n                  <CategoryCode>3</CategoryCode>\r\n                  <TypeCode>10016</TypeCode>\r\n                 \r\n                  <Name>www.sap.com</Name>\r\n                  <AlternativeName>http://www.sap.com</AlternativeName>\r\n                  <Description>http://www.sap.com</Description>\r\n                  <ExternalLinkWebURI>http://www.sap.com</ExternalLinkWebURI>\r\n                  <FileContentURI>http://www.sap.com</FileContentURI>\r\n            </Document>\r\n        </AttachmentFolder>\r\n       </Supplier>\r\n      </glob:SupplierBundleMaintainRequest_sync_V1>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managesupplierin1",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"bc",
								"srt",
								"scs",
								"sap",
								"managesupplierin1"
							]
						}
					},
					"response": [
						{
							"name": "Create production proposal (Soap 1.1)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:CreateProductionProposal>\r\n         <CreateProductionPlanningOrder>\r\n            <SequenceNumber>1</SequenceNumber>\r\n            <SupplyPlanningAreaID>P1100</SupplyPlanningAreaID>\r\n            <MaterialID>P100101</MaterialID>\r\n            <!-- <ProductRequirementSpecificationID>?</ProductRequirementSpecificationID> -->\r\n            <MaterialAvailabilityDateTime timeZoneCode=\"CET\">2019-02-05T12:00:00.0000000Z</MaterialAvailabilityDateTime>\r\n            <Quantity unitCode=\"EA\">1</Quantity>\r\n            <QuantityTypeCode>EA</QuantityTypeCode>\r\n         </CreateProductionPlanningOrder>\r\n      </glob:CreateProductionProposal>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/manageproductionproposalin",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"manageproductionproposalin"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "html",
							"header": [
								{
									"key": "content-type",
									"value": "text/html; charset=utf-8"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "505"
								},
								{
									"key": "sap-system",
									"value": "KHL"
								},
								{
									"key": "www-authenticate",
									"value": "Basic realm=\"SAP NetWeaver Application Server [KHL/171][alias]\""
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=31536000; includeSubDomains"
								}
							],
							"cookie": [],
							"body": "<html>\n    <head>\n        <title>Logon Error Message</title>\n        <META http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\">\n        <style type=\"text/css\">body { font-family:tahoma,helvetica,sans-serif;color:#333333;background-color:#FFFFFF; }td { font-family:tahoma,helvetica,sans-serif;font-size:70%;color:#333333; }h1 { font-family:tahoma,helvetica,sans-serif;font-size:160%;font-weight:bold;margin-top:15px;margin-bottom:3px;color:#003366; }h2 { font-family:verdana,helvetica,sans-serif;font-size:120%;font-style:italic;font-weight:bold;margin-top:6px;margin-bottom:6px;color:#999900; }p { font-family:tahoma,helvetica,sans-serif;color:#333333;margin-top:4px;margin-bottom:4px; }ul { font-family:tahoma,helvetica,sans-serif;color:#333333;list-style-type:square;margin-top:8px;margin-bottom:8px; }li { font-family:tahoma,helvetica,sans-serif;color:#33333;margin-top:4px; }.emphasize { color:#333333;background-color:#C8E3FF;padding:5px;}.note { color:#CC6600; }a { font-family:tahoma,helvetica,sans-serif;text-decoration:underline;color:#336699; }a:visited { color:#001166; }a:hover { text-decoration:none; }</style>\n    </head>\n    <body>\n        <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\">\n            <tr>\n                <td>\n                    <h1>Logon failed</h1>\n                </td>\n            </tr>\n        </table>\n    </body>\n</html>"
						}
					]
				},
				{
					"name": "Query supplier (Soap 1.1)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8cf17a7f-31ba-49bb-af89-3429e9dab4ae",
								"exec": [
									"let jsonResponse = xml2Json(responseBody);",
									"",
									"//pm.environment.set(\"SupplierInternalID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SupplierByElementsResponse_sync'].Supplier.InternalID);",
									"",
									"// Validations",
									"pm.test(\"Supplier: \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SupplierByElementsResponse_sync'].Supplier.InternalID + \" Queried Successfully \", function () { pm.response.to.have.status(200) });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{CommunicationUserPW}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{CommunicationUser}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "text/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:SupplierByElementsQuery_sync>\r\n         <SupplierSelectionByElements>\r\n            <SelectionByInternalID>\r\n               <InclusionExclusionCode>I</InclusionExclusionCode>\r\n               <IntervalBoundaryTypeCode>1</IntervalBoundaryTypeCode>\r\n               <LowerBoundaryIdentifier>{{SupplierInternalID}}</LowerBoundaryIdentifier>\r\n            </SelectionByInternalID>\r\n         </SupplierSelectionByElements>\r\n      </glob:SupplierByElementsQuery_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/querysupplierin1",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"bc",
								"srt",
								"scs",
								"sap",
								"querysupplierin1"
							]
						},
						"description": "Query Account ( Soap )"
					},
					"response": []
				},
				{
					"name": "Get supplier",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "13783b8f-a601-492f-8b16-481c2a8417ff",
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"pm.test(\"200 - Response OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"supplier request forgery token:  received\", function () {",
									"    pm.response.to.have.header(\"x-csrf-token\");",
									"});",
									"",
									"// Get workplace address object ID and parten object ID",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"ObjectID\", jsonResponse.d.results[0].ObjectID);",
									"pm.environment.set(\"SupplierObjectID\", jsonResponse.d.results[0].ObjectID);",
									"pm.environment.set(\"SupplierInternalID\", jsonResponse.d.results[0].InternalID);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
							},
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmusupplier/SupplierCollection?$filter=InternalID eq '{{SupplierInternalID}}'&$expand=AddressSnapshotAddressSnapshot,AddressSnapshotAddressSnapshot/AddressSnapshotDisplayName,AddressSnapshotAddressSnapshot/AddressSnapshotName,AddressSnapshotAddressSnapshot/AddressSnapshotName,AddressSnapshotAddressSnapshot/AddressSnapshotPostalAddress,AddressSnapshotAddressSnapshot/AddressSnapshotTelephone,SupplierBankDetails,SupplierAttachmentFolder,BusinessPartnerRelationshipBusinessPartnerRelationship,ProcurementArrangementProcurementArrangement,SupplierSupplierWithholdingTaxClassification,SupplierGeneralProductTaxExemption,SupplierText&$format=json",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"vmusupplier",
								"SupplierCollection"
							],
							"query": [
								{
									"key": "$filter",
									"value": "InternalID eq '{{SupplierInternalID}}'"
								},
								{
									"key": "$expand",
									"value": "AddressSnapshotAddressSnapshot,AddressSnapshotAddressSnapshot/AddressSnapshotDisplayName,AddressSnapshotAddressSnapshot/AddressSnapshotName,AddressSnapshotAddressSnapshot/AddressSnapshotName,AddressSnapshotAddressSnapshot/AddressSnapshotPostalAddress,AddressSnapshotAddressSnapshot/AddressSnapshotTelephone,SupplierBankDetails,SupplierAttachmentFolder,BusinessPartnerRelationshipBusinessPartnerRelationship,ProcurementArrangementProcurementArrangement,SupplierSupplierWithholdingTaxClassification,SupplierGeneralProductTaxExemption,SupplierText"
								},
								{
									"key": "$format",
									"value": "json"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Activate supplier",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Supplier: \" + jsonResponse.d.results.InternalID + \" Activated \", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Supplier LifeCycleStatusCode status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"2\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmusupplier/SupplierActivate?ObjectID='{{SupplierObjectID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"vmusupplier",
								"SupplierActivate"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{SupplierObjectID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Block supplier",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Supplier: \" + jsonResponse.d.results.InternalID + \" Blocked \", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Supplier LifeCycleStatusCode status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"3\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmusupplier/SupplierBlock?ObjectID='{{SupplierObjectID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"vmusupplier",
								"SupplierBlock"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{SupplierObjectID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Unblock supplier",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Supplier: \" + jsonResponse.d.results.InternalID + \" UnBlocked \", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Supplier LifeCycleStatusCode status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"2\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmusupplier/SupplierUnblock?ObjectID='{{SupplierObjectID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"vmusupplier",
								"SupplierUnblock"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{SupplierObjectID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Obsolete supplier",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Supplier: \" + jsonResponse.d.results.InternalID + \" Flaged As Obsolete \", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Supplier LifeCycleStatusCode status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"4\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmusupplier/SupplierFlagAsObsolete?ObjectID='{{SupplierObjectID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"vmusupplier",
								"SupplierFlagAsObsolete"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{SupplierObjectID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "RevokeObsolescence supplier",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Supplier: \" + jsonResponse.d.results.InternalID + \" Flaged As Obsolete \", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Supplier LifeCycleStatusCode status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"3\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmusupplier/SupplierRevokeObsolescence?ObjectID='{{SupplierObjectID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"vmusupplier",
								"SupplierRevokeObsolescence"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{SupplierObjectID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Unblock supplier",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Supplier: \" + jsonResponse.d.results.InternalID + \" UnBlocked \", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Supplier LifeCycleStatusCode status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"2\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmusupplier/SupplierUnblock?ObjectID='{{SupplierObjectID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"vmusupplier",
								"SupplierUnblock"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{SupplierObjectID}}'"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "Maintain Customer Account"
		}
	]
}