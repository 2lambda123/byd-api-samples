{
	"info": {
		"_postman_id": "92fbce5e-a33e-42fb-937e-e62658622965",
		"name": "Master Data",
		"description": "SAP Business ByDesign API Samples - Master Data\n===============================================\n\nThis Postman collection contains examples to query, read and manage master data using *SAP Business ByDesign Custom OData Services*.  \nAll sample data is aligned to and ready to run on *SAP Business ByDesign Partner Demo Tenants (Full scope US)* with preconfigured and loaded sample data provided by SAP.  \n&nbsp;  \n\n**Web services and User:**\n\nByD OData services require a SAP ByDesign business user for authorization. The OData requests in this collection use the following SAP Bydesign *Custom OData Services* assigned to the work center views in column *User authorization*. Assign the listed SAP ByDesign Work Center Views to your business user:\n\n| Custom OData Service | User authorization (ByD Work Center View) |  \n|----------------------|-------------------------------------------|  \n| *khfunctionalunit* | *Organizational Management - Org Structures* |\n| *khcostcentre* | *Organizational Management - Org Structures* |\n| *khprofitcentre* | *Organizational Management - Org Structures* |\n| *khcompany* | *Organizational Management - Org Structures* |\n| *khbusinessresidence* | *Organizational Management - Org Structures* |\n| *khbusinesspartner* | *Business Partner Data - Business Partners* |\n| *khbusinesspartnerrelationship* | *Business Partner Data - Business Partners* |\n| *khcustomer* | *Business Partner Data - Accounts* |\n| *khsalesarrangement* | *Business Partner Data - Accounts* |\n| *khsupplier* | *Business Partner Data - Suppliers* |\n| *khemployee* | *Personnel Administration - Employees* |\n| *vmumaterial* | *Product Data - Materials* |\n| *vmumaterialvaluationdata* | *Product Data - Materials* |\n| *khserviceproduct* | *Product Data - Services* |\n| *khserviceproductvaluationdata* | *Product Data - Services* |\n| *vmupricelist* | *Product and Service Portfolio - Price Lists* |\n\n&nbsp;  \n\nAdditionally this collection uses the SOAP Web Service APIs:  \n- *Manage Price Lists* \n- *Query Price Lists* \n- *Manage Accounts*\n- *Query Accounts*\n- *Manage Suppliers*\n- *Query Suppliers*\n\nSteps to configure SOAP the Web Service APIs:\n1. Work center view *Application and User Management - Communication Systems*: Create a communication system\n2. Work center view *Application and User Management - Communication Scenarios*: Create a communication scenario with web service APIs listed above\n3. Work center view *Application and User Management - Communication Arrangements*: Create communication arrangement for your scenario of step 2, the communication system of step 1 and enter the credentials  \n&nbsp; \n\n\n\nOrganizational Structures\n-------------------------\n\nOrganizational structure samples:\n1. Get organizational units by role and function\n2. Get functional units\n3. Get companies\n4. Get business residents (business object *PermanentEstablishment*)\n5. Get cost centers\n6. Get profit centers  \n&nbsp; \n\n**Functions and functional roles of functional units**:\n\nIn general you can assign functions such as sales, personnel administration and cost management to organizational units. Functions reflect the involvement of an department in business processes. Functional roles are sub-types of some function codes. \n\nExample:  \n- Function \"*4 - Sales*\" + functional role \"*1 - Organization*\" => The department acts as *Sales Organization*.  \n- Function \"*4 - Sales*\" + functional role \"*2 - Office*\" => The department acts as *Sales Unit*.  \n- Function \"*6 - Marketing*\" => The department is involved in *Marketing* processes.\n\nIn work center *Organizational Management - Org Structures*  you see these examples as functions \"*Sales Organisation*\", \"*Sales*\" and \"*Marketing*\".  \n&nbsp; \n\n**Definitions**:  \n\nDefinitions describe the role of an organizational unit in the organizational structure. Possible definitions are *Cost Centre*, *Segment*, *Profit Centre*, *Reporting Line Unit*, *Functional Unit*, *Permanent Establishment* (= *Business Residence*).  \n&nbsp; \n\n**Organizational unit assignments**:  \n\nThe sample OData services return organizational unit assignments for different definitions. The system determines each assignment based on the organizational structure. Hereby the leading question is always: \"Which is the responsible organizational unit with the corresponding role\". This means the organizational unit assignment can be the organizational unit itself (if it has the corresponding role respectively definition) or any other organizational unit depending on the relationships between organizational units.  \n  \nExample:  \nThe organizational unit P1110 has the definitions \"Functional Unit\" and \"Cost Centre\". Furthermore it belongs to the business residence P1100. Then the sample OData service *khfunctionalunit* returns the *CurrentCostCentreAssignment* P1110  and the *CurrentBusinessResidenceAssignment* P1100.  \n&nbsp;\n\nYou find more information about the organizational structure, functions and definitions in the ByD Help Center searching for \"Organizational Management\".\n&nbsp;\n\n\nMaterials (read)\n----------------\n\nMaterial samples:\n1. Get material general data\n2. Get material purchasing data\n3. Get material logistics data\n4. Get material planning data\n5. Get material availablity confirmation data\n6. Get material sales data\n7. Get material valuation data (business object *Material/FinancialProcessInformation*)\n8. Query and get material financial valuation data (business object *MaterialValuationData*)\n9. Get material tax data  \n&nbsp;\n\n\nMaterials (write)\n-----------------\n\nScenario:\n1. Create material with general data\n2. Add quantity conversion\n3. Add supplier information and supplier part number\n4. Add purchasing data\n5. Add purchasing note and purchasing internal comment\n6. Add logistics data\n7. Update/add planning data\n8. Add availablitity confirmation data\n9. Add customer information and customer part number\n10. Add sales data\n11. Update/add valuation data\n12. Add tax data  \n&nbsp;\n\nService Product (read)\n----------------------\n\nMaterial samples:\n1. Get service general data\n2. Get service purchasing data\n3. Get service sales data\n4. Get service valuation data (business object *ServiceProduct/FinancialProcessInformation*)\n5. Query and get service financial valuation data (business object *ServiceProductValuationData*)\n6. Get service tax data  \n&nbsp;\n\n\nService Product (write)\n-----------------------\n\nScenario:\n1. Create service with general data\n2. Add quantity conversion\n3. Add supplier information and supplier service number\n4. Add purchasing data\n5. Add purchasing note and purchasing internal comment\n6. Add customer information and customer service number\n7. Add sales data\n8. Update/add valuation data (business object *ServiceProduct/FinancialProcessInformation*)\n9. Add cost rate (business object *ServiceProductValuationData*)\n&nbsp;\n\n\nSales Prices\n------------\n\nExamples to create and change Price Lists and Discount Lists business objects using SAP Business ByDesign Custom OData Services and SOAP Services.  \n\nPrice Lists:\n1. Create price list  of type *Net* pricing which are used in CRM documents like Sales Order, Service Order, Invoice documents...\n2. Creates price lists with general information like Name, Valid From/To, Description, Currency along with Item information like Product ID, Amount and Price Unit data\n3. Release the price list\n4. Read the created price list , which gives general , item and scales data\n5. Note : different types of price lists are created based on header and item keys passed during creation , example types of price list include base price list, base price list product category, distribution chain price list,distribution chain price list by product category, customer group price list, customer specific price list, campaign specific price list, company specific price list ...\n6. Note : user can create custom price lists based in extension fields ( Key user / Partner extension fields ), in that case user has to pass the extension field as the key\n\nDiscount Lists:\n1. Create discount list of type *Net* pricing which are used in CRM documents like Sales Order, Service Order, Invoice documents...\n2. Creates discount lists with general information like Name, Valid From/To, Description along with Item information like Product ID, disoucnt Percentage data\n3. Release the discount list\n4. Read the created discoutn list , which gives general , item data\n5. Note : different types of price lists are created based on header and item keys passed during creation , example types of discount list include overall customer discount, customer hierarchy specific discount, customer specific discount, customer specific discount product category ...\n6. Note : user can create custom price lists based in extension fields ( Key user / Partner extension fields ), in that case user has to pass the extension field as the key\n\nPrice Lists (Gross):\n1. Create price list  of type *Gross* pricing which are used in CRM documents like Sales Order, Service Order, Invoice documents...\n2. Creates price lists with general information like Name, Valid From/To, Description, Currency along with Item information like Product ID, Amount and Price Unit data\n3. Release the price list\n4. Read the created price list , which gives general , item and scales data\n5. Note : different types of price lists are created based on header and item keys passed during creation , example types of price list include base price list, base price list product category, distribution chain price list,distribution chain price list by product category, customer group price list, customer specific price list, campaign specific price list, company specific price list ...\n6. Note : user can create custom price lists based in extension fields ( Key user / Partner extension fields ), in that case user has to pass the extension field as the key\n\nDiscount Lists (Gross):\n1. Create discount list of type *Gross* pricing which are used in CRM documents like Sales Order, Service Order, Invoice documents...\n2. Creates discount lists with general information like Name, Valid From/To, Description along with Item information like Product ID, disoucnt Percentage data\n3. Release the discount list\n4. Read the created discoutn list , which gives general , item data\n5. Note : different types of price lists are created based on header and item keys passed during creation , example types of discount list includeoverall customer discount, customer hierarchy specific discount, customer specific discount, customer specific discount product category ...\n6. Note : user can create custom price lists based in extension fields ( Key user / Partner extension fields ), in that case user has to pass the extension field as the key\n&nbsp;  \n\n\nBusiness Partner (read)\n-----------------------\n\nMaterial samples:\n1. Query business partner by role\n2. Get business partner with role \"customer\"\n3. Get business partner with role \"employee\"\n4. Get business partner with role \"contact person\"\n5. Get business partner relationship of type \"contact person\" (business object *BusinessPartnerRelationship*)\n&nbsp;\n\n\nBusiness Partner (write)\n-----------------------\n\nScenario:\n1. Create business partner with category \"organization\"\n2. Create business partner with category \"person\"\n&nbsp;\n\n\nCustomer (read)\n---------------\n\nCustomer examples:\n1. Get customer general data\n2. Get address information\n3. Get tax data\n4. Get bank details\n5. Get customer responsible employees\n6. Get sales data (business object *SalesArrangement*)\n7. Get cross-account sales data (business object *SalesArrangement*)\n8. Get contact person relationships (business object *BusinessPartnerRelationship*)\n&nbsp;\n\n\nCustomer from Business Partner (write)\n--------------------------------------\n\nScenario:\n1. Create business partner with category \"organization\" and the main address\n2. Create customer from the existing business partner created in step 1 (as result the business partner gets the role \"Customer\")\n3. Update customer general data and maintain customer-specific data\n4. Create an addtional address\n5. Add account note (text)\n6. Create and activate a business partner with role \"contact person\"\n7. Create a business partner relationship: The business partner of step 6 becomes a contact person of the customer created in step 1/2\n8. Add customer responsible person\n9. Add tax data\n10. Add bank data\n11. Activate the customer\n12. Create customer sales data (business object *SalesArrangement*)\n&nbsp;\n\n\nCustomer (SOAP Web Service APIs) \n--------------------------------\n\nIn most system integration and replication scenarios it is more efficient to use SOAP Web Service APIs to query/read and create/update business partners, customers, suppliers, contact persons and service agents.  \nThis folder contains two customer examples.  \n&nbsp;\n\n\nSupplier (read)\n---------------\n\nSupplier examples:\n1. Get supplier general data\n2. Get address information\n3. Get bank details\n4. Get tax data\n5. Get purchasing data\n6. 3 variants to query, search and get supplier by tax number\n&nbsp;\n\n\nSupplier (SOAP Web Service APIs) \n--------------------------------\n\nIn most system integration and replication scenarios it is more efficient to use SOAP Web Service APIs to query/read and create/update business partners, customers, suppliers, contact persons and service agents.  \nThis folder contains two supplier examples.  \n&nbsp;\n\n\nEmployee and Position\n---------------------\n\nExamples:\n1. Get employee with user and workplace address information\n2. Get employee assignment and position in the organizational structure\n&nbsp;",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Organizational Structures",
			"item": [
				{
					"name": "Get entity sets",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"pm.test(\"Cross site request forgery token: received\", function () { pm.response.to.have.status(200); pm.response.to.have.header(\"x-csrf-token\") });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Initialize dynamic environment variables",
									"pm.environment.set(\"x-csrf-token\", \"\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khfunctionalunit/",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khfunctionalunit",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get metadata",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"pm.test(\"Cross site request forgery token: received\", function () { pm.response.to.have.status(200); pm.response.to.have.header(\"x-csrf-token\") });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Initialize dynamic environment variables",
									"pm.environment.set(\"x-csrf-token\", \"\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khfunctionalunit/$metadata?sap-label=true&sap-language=de",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khfunctionalunit",
								"$metadata"
							],
							"query": [
								{
									"key": "sap-label",
									"value": "true"
								},
								{
									"key": "sap-language",
									"value": "de"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Query organizational unit by role and function",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khfunctionalunit/FunctionalUnitQuery?NumberOfRows='20'&FunctionalUnitRoleCode='1'&OrganisationalFunctionCode='4'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khfunctionalunit",
								"FunctionalUnitQuery"
							],
							"query": [
								{
									"key": "NumberOfRows",
									"value": "'20'"
								},
								{
									"key": "StartRow",
									"value": "'5'",
									"disabled": true
								},
								{
									"key": "FunctionalUnitRoleCode",
									"value": "'1'",
									"description": "1 - Organization, 2 - Office, ..."
								},
								{
									"key": "ID",
									"value": "'{{SalesUnitID}}'",
									"disabled": true
								},
								{
									"key": "Name",
									"value": null,
									"disabled": true
								},
								{
									"key": "OrganisationalFunctionCode",
									"value": "'4'",
									"description": "1 - Strategic Purchasing, 2 - Operational Purchasing, 3 - Supplier Invoicing, 4 - Sales, 5 - Customer Service, 6 - Marketing, 7 - Customer Invoicing, 8 - Sales Price Maintenance, 9 - Production Control, ..."
								},
								{
									"key": "SearchText",
									"value": null,
									"disabled": true
								},
								{
									"key": "ValidityPeriodStartDate",
									"value": null,
									"disabled": true
								},
								{
									"key": "ValidityPeriodEndDate",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get functional unit",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(jsonResponse.d.__count + \" records returned\", function () { pm.response.to.have.status(200) });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khfunctionalunit/FunctionalUnitCollection?$format=json&$expand=Name,Function/FunctionalRole,Definition,AddressInformation/AddressInformationFormattedAddress,CurrentSuperordinateFunctionalUnit/SuperordinateFunctionalUnitName,CurrentCompanyAssignment/CompanyName,CurrentCostCentreAssignment/CostCentreName,CurrentBusinessResidenceAssignment/BusinessResidenceName,CurrentProfitCentreAssignment/ProfitCentreName&$filter=ID eq '{{SalesUnitID}}'&$inlinecount=allpages&$top=10",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khfunctionalunit",
								"FunctionalUnitCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "Name,Function/FunctionalRole,Definition,AddressInformation/AddressInformationFormattedAddress,CurrentSuperordinateFunctionalUnit/SuperordinateFunctionalUnitName,CurrentCompanyAssignment/CompanyName,CurrentCostCentreAssignment/CostCentreName,CurrentBusinessResidenceAssignment/BusinessResidenceName,CurrentProfitCentreAssignment/ProfitCentreName"
								},
								{
									"key": "$filter",
									"value": "ID eq '{{SalesUnitID}}'"
								},
								{
									"key": "$inlinecount",
									"value": "allpages"
								},
								{
									"key": "$top",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get functional unit by name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(jsonResponse.d.__count + \" records returned\", function () { pm.response.to.have.status(200) });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khfunctionalunit/NameCollection?$format=json&$expand=FunctionalUnit/AddressInformation/AddressInformationFormattedAddress&$filter=Name eq 'Almika Solar'&$inlinecount=allpages&$top=10",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khfunctionalunit",
								"NameCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "FunctionalUnit/AddressInformation/AddressInformationFormattedAddress"
								},
								{
									"key": "$filter",
									"value": "Name eq 'Almika Solar'"
								},
								{
									"key": "$inlinecount",
									"value": "allpages"
								},
								{
									"key": "$top",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(jsonResponse.d.__count + \" records returned\", function () { pm.response.to.have.status(200) });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcompany/CompanyCollection?$format=json&$expand=Name,Attributes,DefaultCurrency,Definition,AddressSnapshot/AddressSnapshotFormattedAddress,AddressSnapshot/AddressSnapshotPostalAddress,AddressSnapshot/AddressSnapshotTelephone,AddressSnapshot/AddressSnapshotWebSite,AddressSnapshot/AddressSnapshotEmail&$filter=ID eq '{{CompanyID}}'&$inlinecount=allpages&$top=10",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcompany",
								"CompanyCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "Name,Attributes,DefaultCurrency,Definition,AddressSnapshot/AddressSnapshotFormattedAddress,AddressSnapshot/AddressSnapshotPostalAddress,AddressSnapshot/AddressSnapshotTelephone,AddressSnapshot/AddressSnapshotWebSite,AddressSnapshot/AddressSnapshotEmail"
								},
								{
									"key": "$filter",
									"value": "ID eq '{{CompanyID}}'"
								},
								{
									"key": "$inlinecount",
									"value": "allpages"
								},
								{
									"key": "$top",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get business residence",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(jsonResponse.d.__count + \" records returned\", function () { pm.response.to.have.status(200) });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khbusinessresidence/BusinessResidenceCollection?$format=json&$expand=Name,StandardIdentification,Definition,CurrentCompanyAssignment/CompanyName,CurrentProfitCentreAssignment/ProfitCentreName,AssociatedSite/SiteStandardIdentification&$filter=ID eq '{{BusinessResidenceID}}'&$inlinecount=allpages&$top=10",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khbusinessresidence",
								"BusinessResidenceCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "Name,StandardIdentification,Definition,CurrentCompanyAssignment/CompanyName,CurrentProfitCentreAssignment/ProfitCentreName,AssociatedSite/SiteStandardIdentification"
								},
								{
									"key": "$filter",
									"value": "ID eq '{{BusinessResidenceID}}'"
								},
								{
									"key": "$inlinecount",
									"value": "allpages"
								},
								{
									"key": "$top",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get cost center",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(jsonResponse.d.__count + \" records returned\", function () { pm.response.to.have.status(200) });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcostcentre/CostCentreCollection?$format=json&$expand=Name,Attributes,Definition,CurrentSuperordinateCostCentre/SuperordinateCostCentreName,CurrentProfitCentreAssignment/ProfitCentreName,CurrentCompanyAssignment/CompanyName,CurrentBusinessResidenceAssignment/BusinessResidenceName,CurrentReportingLineUnitAssignment/ReportingLineUnitName&$filter=ID eq '{{CostCenterID}}'&$inlinecount=allpages&$top=10",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcostcentre",
								"CostCentreCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "Name,Attributes,Definition,CurrentSuperordinateCostCentre/SuperordinateCostCentreName,CurrentProfitCentreAssignment/ProfitCentreName,CurrentCompanyAssignment/CompanyName,CurrentBusinessResidenceAssignment/BusinessResidenceName,CurrentReportingLineUnitAssignment/ReportingLineUnitName"
								},
								{
									"key": "$filter",
									"value": "ID eq '{{CostCenterID}}'"
								},
								{
									"key": "$inlinecount",
									"value": "allpages"
								},
								{
									"key": "$top",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get profit center",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(jsonResponse.d.__count + \" records returned\", function () { pm.response.to.have.status(200) });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khprofitcentre/ProfitCentreCollection?$format=json&$expand=Name,Definition,CurrentSuperordinateProfitCentre/SuperordinateProfitCentreName,CurrentSegmentAssignment/SegmentName&$filter=ID eq '{{ProfitCenterID}}'&$inlinecount=allpages&$top=10",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khprofitcentre",
								"ProfitCentreCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "Name,Definition,CurrentSuperordinateProfitCentre/SuperordinateProfitCentreName,CurrentSegmentAssignment/SegmentName"
								},
								{
									"key": "$filter",
									"value": "ID eq '{{ProfitCenterID}}'"
								},
								{
									"key": "$inlinecount",
									"value": "allpages"
								},
								{
									"key": "$top",
									"value": "10"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Material (read)",
			"item": [
				{
					"name": "Get material entity sets",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"pm.test(\"Material entity sets retrieved\", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Request forgery token received\", function () { pm.response.to.have.header(\"x-csrf-token\") });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmumaterial/",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"vmumaterial",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get material metadata",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"pm.test(\"Material metadata retrieved\", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Request forgery token received\", function () { pm.response.to.have.header(\"x-csrf-token\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmumaterial/$metadata",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"vmumaterial",
								"$metadata"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get material general data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Material \" + jsonResponse.d.results[0].InternalID + \" retrieved\", function () { pm.response.to.have.status(200) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmumaterial/MaterialCollection?$filter=InternalID eq '{{P-MaterialID2}}'&$expand=QuantityConversion,ProductCategory,QuantityCharacteristic,Identification,GlobalTradeItemNumber,Text,AttachmentFolder&$format=json&sap-language=DE",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"vmumaterial",
								"MaterialCollection"
							],
							"query": [
								{
									"key": "$filter",
									"value": "InternalID eq '{{P-MaterialID2}}'"
								},
								{
									"key": "$expand",
									"value": "QuantityConversion,ProductCategory,QuantityCharacteristic,Identification,GlobalTradeItemNumber,Text,AttachmentFolder"
								},
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "sap-language",
									"value": "DE"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get material purchasing data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Material \" + jsonResponse.d.results[0].InternalID + \" retrieved\", function () { pm.response.to.have.status(200) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmumaterial/MaterialCollection?$filter=InternalID eq '{{P-MaterialID2}}'&$expand=QuantityConversion,GlobalTradeItemNumber,SupplierInformation,Purchasing/PurchasingText&$format=json&$select=ObjectID,UUID,InternalID,Description,QuantityConversion,QuantityCharacteristic,GlobalTradeItemNumber,SupplierInformation,Purchasing",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"vmumaterial",
								"MaterialCollection"
							],
							"query": [
								{
									"key": "$filter",
									"value": "InternalID eq '{{P-MaterialID2}}'"
								},
								{
									"key": "$expand",
									"value": "QuantityConversion,GlobalTradeItemNumber,SupplierInformation,Purchasing/PurchasingText"
								},
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$select",
									"value": "ObjectID,UUID,InternalID,Description,QuantityConversion,QuantityCharacteristic,GlobalTradeItemNumber,SupplierInformation,Purchasing"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get material logistics data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Material \" + jsonResponse.d.results[0].InternalID + \" retrieved\", function () { pm.response.to.have.status(200) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmumaterial/MaterialCollection?$filter=InternalID eq '{{P-MaterialID2}}'&$expand=QuantityConversion,Logistics/LogisticsProductionGroup,Logistics/LogisticsStorageGroup&$format=json&$select=ObjectID,UUID,InternalID,Description,QuantityConversion,Logistics",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"vmumaterial",
								"MaterialCollection"
							],
							"query": [
								{
									"key": "$filter",
									"value": "InternalID eq '{{P-MaterialID2}}'"
								},
								{
									"key": "$expand",
									"value": "QuantityConversion,Logistics/LogisticsProductionGroup,Logistics/LogisticsStorageGroup"
								},
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$select",
									"value": "ObjectID,UUID,InternalID,Description,QuantityConversion,Logistics"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get material planning data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Material \" + jsonResponse.d.results[0].InternalID + \" retrieved\", function () { pm.response.to.have.status(200) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmumaterial/MaterialCollection?$filter=InternalID eq '{{P-MaterialID2}}'&$expand=QuantityConversion,PlanningForecastGroup,Planning&$format=json&$select=ObjectID,UUID,InternalID,Description,PlanningMeasureUnitCode,PlanningMeasureUnitCodeText,QuantityConversion,PlanningForecastGroup,Planning",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"vmumaterial",
								"MaterialCollection"
							],
							"query": [
								{
									"key": "$filter",
									"value": "InternalID eq '{{P-MaterialID2}}'"
								},
								{
									"key": "$expand",
									"value": "QuantityConversion,PlanningForecastGroup,Planning"
								},
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$select",
									"value": "ObjectID,UUID,InternalID,Description,PlanningMeasureUnitCode,PlanningMeasureUnitCodeText,QuantityConversion,PlanningForecastGroup,Planning"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get material availability confirmation data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Material \" + jsonResponse.d.results[0].InternalID + \" retrieved\", function () { pm.response.to.have.status(200) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmumaterial/MaterialCollection?$filter=InternalID eq '{{P-MaterialID2}}'&$expand=QuantityConversion,AvailabilityConfirmation&$format=json&$select=ObjectID,UUID,InternalID,Description,PlanningMeasureUnitCode,PlanningMeasureUnitCodeText,QuantityConversion,AvailabilityConfirmation",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"vmumaterial",
								"MaterialCollection"
							],
							"query": [
								{
									"key": "$filter",
									"value": "InternalID eq '{{P-MaterialID2}}'"
								},
								{
									"key": "$expand",
									"value": "QuantityConversion,AvailabilityConfirmation"
								},
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$select",
									"value": "ObjectID,UUID,InternalID,Description,PlanningMeasureUnitCode,PlanningMeasureUnitCodeText,QuantityConversion,AvailabilityConfirmation"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get material sales data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Material \" + jsonResponse.d.results[0].InternalID + \" retrieved\", function () { pm.response.to.have.status(200) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmumaterial/MaterialCollection?$filter=InternalID eq '{{P-MaterialID2}}'&$expand=QuantityConversion,CustomerInformation,Sales/SalesOrganisationNameByValidity,Sales/SalesWarranty,Sales/SalesText&$format=json&$select=ObjectID,UUID,InternalID,Description,QuantityConversion,CustomerInformation,Sales",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"vmumaterial",
								"MaterialCollection"
							],
							"query": [
								{
									"key": "$filter",
									"value": "InternalID eq '{{P-MaterialID2}}'"
								},
								{
									"key": "$expand",
									"value": "QuantityConversion,CustomerInformation,Sales/SalesOrganisationNameByValidity,Sales/SalesWarranty,Sales/SalesText"
								},
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$select",
									"value": "ObjectID,UUID,InternalID,Description,QuantityConversion,CustomerInformation,Sales"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get material valuation data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Material \" + jsonResponse.d.results[0].InternalID + \" retrieved\", function () { pm.response.to.have.status(200) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmumaterial/MaterialCollection?$filter=InternalID eq '{{P-MaterialID2}}'&$expand=QuantityConversion,Valuation/CompanyCurrentName,Valuation/BusinessResidenceCurrentName&$format=json&$select=ObjectID,UUID,InternalID,Description,ValuationLevelTypeCode,ValuationLevelTypeCodeText,QuantityConversion,Valuation",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"vmumaterial",
								"MaterialCollection"
							],
							"query": [
								{
									"key": "$filter",
									"value": "InternalID eq '{{P-MaterialID2}}'"
								},
								{
									"key": "$expand",
									"value": "QuantityConversion,Valuation/CompanyCurrentName,Valuation/BusinessResidenceCurrentName"
								},
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$select",
									"value": "ObjectID,UUID,InternalID,Description,ValuationLevelTypeCode,ValuationLevelTypeCodeText,QuantityConversion,Valuation"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Query material financial valuation data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Validations",
									"pm.test(\"Financial material valuation data retrieved\", function () { pm.response.to.have.status(200) });",
									"",
									"// Set environment valiables",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"P-MVDObjectID2\", jsonResponse.d.results[0].ObjectID);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmumaterialvaluationdata/MaterialValuationDataQueryByMaterialID?MaterialID='{{P-MaterialID2}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"vmumaterialvaluationdata",
								"MaterialValuationDataQueryByMaterialID"
							],
							"query": [
								{
									"key": "MaterialID",
									"value": "'{{P-MaterialID2}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get material financial valuation data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Validations",
									"pm.test(\"Financial material valuation data retrieved\", function () { pm.response.to.have.status(200) });",
									"",
									"// Set environment valiables",
									"var jsonResponse = pm.response.json();",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmumaterialvaluationdata/MaterialValuationDataCollection('{{P-MVDObjectID2}}')?$expand=ValuationLevel/AccountDeterminationSpecification,ValuationPrice&$format=json",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"vmumaterialvaluationdata",
								"MaterialValuationDataCollection('{{P-MVDObjectID2}}')"
							],
							"query": [
								{
									"key": "$expand",
									"value": "ValuationLevel/AccountDeterminationSpecification,ValuationPrice"
								},
								{
									"key": "$format",
									"value": "json"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get material tax data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Material \" + jsonResponse.d.results[0].InternalID + \" retrieved\", function () { pm.response.to.have.status(200) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmumaterial/MaterialCollection?$filter=InternalID eq '{{P-MaterialID2}}'&$expand=DeviantTaxClassification,WithholdingTaxClassification&$format=json&$select=ObjectID,UUID,InternalID,Description,DeviantTaxClassification,WithholdingTaxClassification",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"vmumaterial",
								"MaterialCollection"
							],
							"query": [
								{
									"key": "$filter",
									"value": "InternalID eq '{{P-MaterialID2}}'"
								},
								{
									"key": "$expand",
									"value": "DeviantTaxClassification,WithholdingTaxClassification"
								},
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$select",
									"value": "ObjectID,UUID,InternalID,Description,DeviantTaxClassification,WithholdingTaxClassification"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "Product Data SAP Business ByDesin Collection\r\npostman collection is to create and update Products (Material and Service Products) data of SAP Business ByDesign in sales demo system\r\n\r\nSupported environment:\r\nE2E Scenarios - PM 338338\r\n\r\n \r\nMaterials Folder : Creates Materail General, Purchasing, Logistics, Planning , Availability Confirmation, Sales, Valuation data\r\nRequired user authorizations (ByD Work Center Views):\r\nProduct Data - Materials\r\n\r\n\r\nScenario:\r\nCreates General Information\r\nCreates Quantity Conversion\r\nCreates and updates and activates Purchasing information\r\nCreates and updates and activates Logistics information\r\nCreates and updates and activates Planning information\r\nCreates and updates and activates Availability information\r\nCreates and updates and activates Sales information\r\nCreates and updates and activates Valuation information\r\n\r\n\r\n \r\nServices Folder : Creates Service Product General, Purchasing, Sales, Valuation data\r\nRequired user authorizations (ByD Work Center Views):\r\nProduct Data - Services\r\n\r\n\r\nScenario:\r\nCreates General Information\r\nCreates Quantity Conversion\r\nCreates and updates and activates Purchasing information\r\nCreates and updates and activates Sales information\r\nCreates and updates and activates Valuation information"
		},
		{
			"name": "Material (write)",
			"item": [
				{
					"name": "Get xsrf-token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"pm.test(\"Cross-site request forgery token received\", function () { pm.response.to.have.header(\"x-csrf-token\") });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmumaterial/",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"vmumaterial",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create material",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Set Material ID of pattern <Prefix>-<UTC datetime>",
									"let todayDateTime = (new Date()).toISOString().substr(0,19);",
									"todayDateTime = todayDateTime.replace(\"-\",\"\").replace(\"-\",\"\").replace(\"T\",\"\").replace(\":\",\"\").replace(\":\",\"\");",
									"var generatedMaterialID = pm.environment.get(\"P-Prefix\") + todayDateTime;",
									"pm.environment.set(\"P-MaterialID\", generatedMaterialID);",
									"",
									"// Use internal numbering for material IDs => initialize environment variable MaterialID",
									"pm.environment.set(\"MaterialID\", \"\");",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"P-MaterialID\", jsonResponse.d.results.InternalID);",
									"pm.environment.set(\"P-MaterialUUID\", jsonResponse.d.results.UUID);",
									"pm.environment.set(\"P-MaterialOjectID\", jsonResponse.d.results.ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Material \" + jsonResponse.d.results.InternalID + \" created\", function () { pm.response.to.have.status(201) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"InternalID\": \"{{P-MaterialID}}\",\n    \"Description\": \"Material created by OData\",\n    \"DescriptionLanguageCode\": \"EN\",\n    \"BaseMeasureUnitCode\": \"EA\",\n    \"IdentifiedStockTypeCode\": \"03\",\n    \"SerialNumberProfileCode\": \"1000\",\n\t\"ProductCategory\": \n\t\t{\n\t\t\t\"ProductCategoryInternalID\": \"{{P-ProductCategoryID}}\"\n\t\t},\n\t\"QuantityCharacteristic\": \n\t\t[\n        \t{\n\t\t\t\t\"Quantity\": \"1\",\n                \"QuantityUnitCode\": \"EA\",\n\t\t\t\t\"CharacteristicQuantityTypeCode\": \"NET_WT\",\n\t\t\t\t\"CharacteristicQuantity\": \"9\",\n\t\t\t\t\"CharacteristicQuantityUnitCode\": \"KGM\"\n        \t},\n        \t{\n\t\t\t\t\"Quantity\": \"1\",\n                \"QuantityUnitCode\": \"EA\",\n\t\t\t\t\"CharacteristicQuantityTypeCode\": \"GROSS_WT\",\n\t\t\t\t\"CharacteristicQuantity\": \"10\",\n\t\t\t\t\"CharacteristicQuantityUnitCode\": \"KGM\"\n        \t},\n        \t{\n\t\t\t\t\"Quantity\": \"1\",\n                \"QuantityUnitCode\": \"EA\",\n\t\t\t\t\"CharacteristicQuantityTypeCode\": \"NET_VOL\",\n\t\t\t\t\"CharacteristicQuantity\": \"0.9\",\n\t\t\t\t\"CharacteristicQuantityUnitCode\": \"MTQ\"\n        \t},\n        \t{\n\t\t\t\t\"Quantity\": \"1\",\n                \"QuantityUnitCode\": \"EA\",\n\t\t\t\t\"CharacteristicQuantityTypeCode\": \"GROSS_VOL\",\n\t\t\t\t\"CharacteristicQuantity\": \"1\",\n\t\t\t\t\"CharacteristicQuantityUnitCode\": \"MTQ\"\n        \t},\n        \t{\n\t\t\t\t\"Quantity\": \"1\",\n                \"QuantityUnitCode\": \"EA\",\n\t\t\t\t\"CharacteristicQuantityTypeCode\": \"DIM_LENGTH\",\n\t\t\t\t\"CharacteristicQuantity\": \"1\",\n\t\t\t\t\"CharacteristicQuantityUnitCode\": \"MTR\"\n        \t},\n        \t{\n\t\t\t\t\"Quantity\": \"1\",\n                \"QuantityUnitCode\": \"EA\",\n\t\t\t\t\"CharacteristicQuantityTypeCode\": \"BREADTH\",\n\t\t\t\t\"CharacteristicQuantity\": \"1\",\n\t\t\t\t\"CharacteristicQuantityUnitCode\": \"MTR\"\n        \t},\n        \t{\n\t\t\t\t\"Quantity\": \"1\",\n                \"QuantityUnitCode\": \"EA\",\n\t\t\t\t\"CharacteristicQuantityTypeCode\": \"HEIGHT\",\n\t\t\t\t\"CharacteristicQuantity\": \"1\",\n\t\t\t\t\"CharacteristicQuantityUnitCode\": \"MTR\"\n        \t}\n        ],\n\t\"Text\": \n\t\t[\n        \t{\n\t\t\t\t\"Text\": \"Detailed description of the material created using Custom OData Services\",\n\t\t\t\t\"LanguageCode\": \"EN\",\n\t\t\t\t\"TypeCode\": \"10006\"\n\t\t\t}\n\t]        \n}"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmumaterial/MaterialCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"vmumaterial",
								"MaterialCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create quantity conversion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Validations",
									"var jsonResponse = pm.response.json();",
									"pm.test(\"Material quantity conversion \" + jsonResponse.d.results.CorrespondingQuantityUnitCodeText + \" to \" + jsonResponse.d.results.QuantityUnitCodeText + \" created\", function () { pm.response.to.have.status(201) });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-http-method",
								"value": "MERGE",
								"disabled": true
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"ParentObjectID\": \"{{P-MaterialOjectID}}\",\n\t\"CorrespondingQuantity\": \"2\",\n\t\"CorrespondingQuantityUnitCode\": \"EA\",\n\t\"Quantity\": \"1\",\n\t\"QuantityUnitCode\": \"XBX\",\n\t\"BatchDependentIndicator\": false\n}    \t"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmumaterial/QuantityConversionCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"vmumaterial",
								"QuantityConversionCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get material general data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"P-MaterialID\", jsonResponse.d.results.InternalID);",
									"pm.environment.set(\"P-MaterialUUID\", jsonResponse.d.results.UUID);",
									"pm.environment.set(\"P-MaterialOjectID\", jsonResponse.d.results.ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Material \" + jsonResponse.d.results.InternalID + \" retrieved\", function () { pm.response.to.have.status(200) });",
									"",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmumaterial/MaterialCollection('{{P-MaterialOjectID}}')?$expand=ProductCategory,QuantityConversion,QuantityCharacteristic,Identification,GlobalTradeItemNumber,Text&$format=json",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"vmumaterial",
								"MaterialCollection('{{P-MaterialOjectID}}')"
							],
							"query": [
								{
									"key": "$filter",
									"value": "InternalID eq '{{P-MaterialID}}'",
									"disabled": true
								},
								{
									"key": "$expand",
									"value": "ProductCategory,QuantityConversion,QuantityCharacteristic,Identification,GlobalTradeItemNumber,Text"
								},
								{
									"key": "$format",
									"value": "json"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create supplier information",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Validations",
									"var jsonResponse = pm.response.json();",
									"pm.test(\"Material supplier information for supplier \" + jsonResponse.d.results.SupplierID + \" created\", function () { pm.response.to.have.status(201) });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Set SupplierPartNumber",
									"var generatedSupplierPartNumber = pm.environment.get(\"P-SupplierID\") + \"-\" + pm.environment.get(\"P-MaterialID\");",
									"pm.environment.set(\"P-SupplierPartNumber\", generatedSupplierPartNumber);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-http-method",
								"value": "MERGE",
								"disabled": true
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"ParentObjectID\": \"{{P-MaterialOjectID}}\",\n\t\"SupplierID\": \"{{P-SupplierID}}\",\n\t\"SupplierPartNumber\": \"{{P-SupplierPartNumber}}\",\n\t\"SupplierLeadTimeDuration\": \"P2D\"\n}    \t"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmumaterial/SupplierInformationCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"vmumaterial",
								"SupplierInformationCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create and activate purchasing data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"P-MaterialPurchasingOjectID\", jsonResponse.d.results.ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Material purchasing data created\", function () { pm.response.to.have.status(201) });",
									"pm.test(\"Lifecycle status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.be.oneOf([\"2\"]) });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-http-method",
								"value": "MERGE",
								"disabled": true
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"ParentObjectID\": \"{{P-MaterialOjectID}}\",\n\t\"PurchasingMeasureUnitCode\": \"XBX\",\n\t\"LifeCycleStatusCode\": \"2\"\n}    \t"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmumaterial/PurchasingCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"vmumaterial",
								"PurchasingCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create purchasing note",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Validations",
									"var jsonResponse = pm.response.json();",
									"pm.test(\"Material purchasing note created\", function () { pm.response.to.have.status(201) });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-http-method",
								"value": "MERGE",
								"disabled": true
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"ParentObjectID\": \"{{P-MaterialPurchasingOjectID}}\",\n\t\"Text\": \"Some purchasing note...\",\n\t\"LanguageCode\": \"EN\",\n\t\"TypeCode\": \"10026\"\n}    \t"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmumaterial/PurchasingTextCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"vmumaterial",
								"PurchasingTextCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create purchasing internal comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Validations",
									"var jsonResponse = pm.response.json();",
									"pm.test(\"Material internal purchasing comment created\", function () { pm.response.to.have.status(201) });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-http-method",
								"value": "MERGE",
								"disabled": true
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"ParentObjectID\": \"{{P-MaterialPurchasingOjectID}}\",\n\t\"Text\": \"Some internal purchasing comment...\",\n\t\"LanguageCode\": \"EN\",\n\t\"TypeCode\": \"10011\"\n}    \t"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmumaterial/PurchasingTextCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"vmumaterial",
								"PurchasingTextCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get material purchasing data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"P-MaterialID\", jsonResponse.d.results.InternalID);",
									"pm.environment.set(\"P-MaterialUUID\", jsonResponse.d.results.UUID);",
									"pm.environment.set(\"P-MaterialOjectID\", jsonResponse.d.results.ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Material \" + jsonResponse.d.results.InternalID + \" retrieved\", function () { pm.response.to.have.status(200) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmumaterial/MaterialCollection('{{P-MaterialOjectID}}')?$expand=SupplierInformation,Purchasing/PurchasingText&$format=json",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"vmumaterial",
								"MaterialCollection('{{P-MaterialOjectID}}')"
							],
							"query": [
								{
									"key": "$filter",
									"value": "InternalID eq '{{P-MaterialID}}'",
									"disabled": true
								},
								{
									"key": "$expand",
									"value": "SupplierInformation,Purchasing/PurchasingText"
								},
								{
									"key": "$format",
									"value": "json"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create logistics data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"P-MaterialLogisticsOjectID\", jsonResponse.d.results.ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Material logistics data created\", function () { pm.response.to.have.status(201) });",
									"pm.test(\"Lifecycle status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.be.oneOf([\"2\"]) });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-http-method",
								"value": "MERGE",
								"disabled": true
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"ParentObjectID\": \"{{P-MaterialOjectID}}\",\n\t\"SiteID\": \"A1100\",\n\t\"LifeCycleStatusCode\": \"2\",\n\t\"CycleCountPlannedDuration\": \"P1D\"\n}    \t"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmumaterial/LogisticsCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"vmumaterial",
								"LogisticsCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get material logistics data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"P-MaterialID\", jsonResponse.d.results.InternalID);",
									"pm.environment.set(\"P-MaterialUUID\", jsonResponse.d.results.UUID);",
									"pm.environment.set(\"P-MaterialOjectID\", jsonResponse.d.results.ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Material \" + jsonResponse.d.results.InternalID + \" retrieved\", function () { pm.response.to.have.status(200) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmumaterial/MaterialCollection('{{P-MaterialOjectID}}')?$expand=Logistics/LogisticsProductionGroup,Logistics/LogisticsStorageGroup&$format=json",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"vmumaterial",
								"MaterialCollection('{{P-MaterialOjectID}}')"
							],
							"query": [
								{
									"key": "$filter",
									"value": "InternalID eq '{{P-MaterialID}}'",
									"disabled": true
								},
								{
									"key": "$expand",
									"value": "Logistics/LogisticsProductionGroup,Logistics/LogisticsStorageGroup"
								},
								{
									"key": "$format",
									"value": "json"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update planning unit of measure",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Validations",
									"pm.test(\"Planning unit of measure updated\", function () { pm.response.to.have.status(204) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"ObjectID\":\"{{P-MaterialOjectID}}\",\n   \t\"PlanningMeasureUnitCode\": \"EA\"\n} \n    "
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmumaterial/MaterialCollection('{{P-MaterialOjectID}}')",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"vmumaterial",
								"MaterialCollection('{{P-MaterialOjectID}}')"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create planning forecasting group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Planning forecast group \" + jsonResponse.d.results.ProductCategoryInternalID + \" added\", function () { pm.response.to.have.status(201) });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"ParentObjectID\": \"{{P-MaterialOjectID}}\",\n\t\"ProductCategoryInternalID\": \"{{P-PlanningForecastingGroup}}\"\n}    \t"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmumaterial/PlanningForecastGroupCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"vmumaterial",
								"PlanningForecastGroupCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create and activate planning area data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Planning data for supply planning area \" + jsonResponse.d.results.SupplyPlanningAreaID + \" created\", function () { pm.response.to.have.status(201) });",
									"pm.test(\"Lifecycle status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.be.oneOf([\"2\"]) });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"ParentObjectID\": \"{{P-MaterialOjectID}}\",\n\t\"SupplyPlanningAreaID\": \"{{P-SupplyPlanningAreaID}}\",\n\t\"LifeCycleStatusCode\": \"2\",\n\t\"PlanningGroupID\": \"{{P-PlanningGroupID}}\",\n\t\"DemandManagementProcedureCode\": \"ATOS_MPC\",\n\t\"ProcurementTypeCode\": \"1\",\n    \"ProcurementLeadDuration\": \"P2D\",\n    \"GoodsReceiptProcessingDuration\": \"PT0H0M0S\",\n    \"PlanningProcedureCode\": \"1\",\n    \"SafetyStockQuantity\": \"3\",\n    \"SafetyLeadDuration\": \"P1D\",\n    \"PlanningTimeFenceDuration\": \"P1D\",\n    \"LotSizingMethodCode\": \"1\",\n    \"MinimumLotSizeQuantity\": \"3\",\n    \"MaximumLotSizeQuantity\": \"3000\",\n    \"LotSizeRoundingQuantity\": \"3\",\n    \"MinimumDaysOfSupplyDuration\": \"P5D\",\n    \"MinimumShelfLifeDuration\": \"P1D\",\n    \"MinimumReceiptDaysOfSupplyDuration\": \"P1D\"\n}    \t"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmumaterial/PlanningCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"vmumaterial",
								"PlanningCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create and activate availability confirmation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Availablity confirmation for supply planning area \" + jsonResponse.d.results.SupplyPlanningAreaID + \" created\", function () { pm.response.to.have.status(201) });",
									"pm.test(\"Lifecycle status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.be.oneOf([\"2\"]) });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"ParentObjectID\": \"{{P-MaterialOjectID}}\",\n\t\"SupplyPlanningAreaID\": \"{{P-SupplyPlanningAreaID}}\",\n\t\"LifeCycleStatusCode\": \"2\",\n\t\"AvailabilityCheckScopeCode\": \"A12\",\n\t\"ManualSourcingRequiredIndicator\": false,\n    \"GoodsIssueProcessingDuration\": \"PT2H0M0S\"\n}    \t"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmumaterial/AvailabilityConfirmationCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"vmumaterial",
								"AvailabilityConfirmationCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get material planning data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"P-MaterialID\", jsonResponse.d.results.InternalID);",
									"pm.environment.set(\"P-MaterialUUID\", jsonResponse.d.results.UUID);",
									"pm.environment.set(\"P-MaterialOjectID\", jsonResponse.d.results.ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Material \" + jsonResponse.d.results.InternalID + \" retrieved\", function () { pm.response.to.have.status(200) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmumaterial/MaterialCollection('{{P-MaterialOjectID}}')?$expand=PlanningForecastGroup,Planning,AvailabilityConfirmation&$format=json",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"vmumaterial",
								"MaterialCollection('{{P-MaterialOjectID}}')"
							],
							"query": [
								{
									"key": "$filter",
									"value": "InternalID eq '{{P-MaterialID}}'",
									"disabled": true
								},
								{
									"key": "$expand",
									"value": "PlanningForecastGroup,Planning,AvailabilityConfirmation"
								},
								{
									"key": "$format",
									"value": "json"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create customer information",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Validations",
									"var jsonResponse = pm.response.json();",
									"pm.test(\"Material customer information for customer \" + jsonResponse.d.results.CustomerID + \" created\", function () { pm.response.to.have.status(201) });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Set SupplierPartNumber",
									"var generatedCustomerPartNumber = pm.environment.get(\"P-CustomerID\") + \"-\" + pm.environment.get(\"P-MaterialID\");",
									"pm.environment.set(\"P-CustomerPartNumber\", generatedCustomerPartNumber);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-http-method",
								"value": "MERGE",
								"disabled": true
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"ParentObjectID\": \"{{P-MaterialOjectID}}\",\n\t\"CustomerID\": \"{{P-CustomerID}}\",\n\t\"CustomerPartNumber\": \"{{P-CustomerPartNumber}}\"\n}    \t"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmumaterial/CustomerInformationCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"vmumaterial",
								"CustomerInformationCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create and activate sales data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"P-MaterialSalesOjectID\", jsonResponse.d.results.ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Sales data for sales organisation \" + jsonResponse.d.results.SalesOrganisationID + \" created\", function () { pm.response.to.have.status(201) });",
									"pm.test(\"Lifecycle status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.be.oneOf([\"2\"]) });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"ParentObjectID\": \"{{P-MaterialOjectID}}\",\n\t\"SalesOrganisationID\": \"{{P-SalesOrganisationID}}\",\n\t\"DistributionChannelCode\": \"01\",\n\t\"LifeCycleStatusCode\": \"2\",\n    \"SalesMeasureUnitCode\": \"XBX\",\n    \"ItemGroupCode\": \"NORM\",\n\t\"MinimumOrderQuantity\": \"1\",\n\t\"CashDiscountDeductibleIndicator\": true,\n\t\"ReferencePriceMaterialID\": \"{{P-MaterialID2}}\",\n\t\"SalesWarranty\": \n\t\t[\n\t\t\t{\n\t\t\t\t\"ProductID\": \"{{P-WarrantyProductID}}\"\n\t\t\t}\n\t\t],\n    \"SalesText\": \n    \t[\n    \t\t{\n    \t\t\t\"Text\": \"Some internal comment...\",\n    \t\t\t\"TypeCode\": \"10011\"\n    \t\t},\n    \t\t{\n    \t\t\t\"Text\": \"My sales note...\",\n    \t\t\t\"LanguageCode\": \"EN\",\n    \t\t\t\"TypeCode\": \"10027\"\n    \t\t}\n    \t]                        \n}    \t"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmumaterial/SalesCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"vmumaterial",
								"SalesCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get material sales data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"P-MaterialID\", jsonResponse.d.results.InternalID);",
									"pm.environment.set(\"P-MaterialUUID\", jsonResponse.d.results.UUID);",
									"pm.environment.set(\"P-MaterialOjectID\", jsonResponse.d.results.ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Material \" + jsonResponse.d.results.InternalID + \" retrieved\", function () { pm.response.to.have.status(200) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmumaterial/MaterialCollection('{{P-MaterialOjectID}}')?$expand=QuantityConversion,CustomerInformation,Sales/SalesOrganisationNameByValidity,Sales/SalesWarranty,Sales/SalesText&$format=json",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"vmumaterial",
								"MaterialCollection('{{P-MaterialOjectID}}')"
							],
							"query": [
								{
									"key": "$filter",
									"value": "InternalID eq '{{P-MaterialID}}'",
									"disabled": true
								},
								{
									"key": "$expand",
									"value": "QuantityConversion,CustomerInformation,Sales/SalesOrganisationNameByValidity,Sales/SalesWarranty,Sales/SalesText"
								},
								{
									"key": "$format",
									"value": "json"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update valuation level type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Validations",
									"pm.test(\"Material valuation level type updated\", function () { pm.response.to.have.status(204) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"ObjectID\":\"{{P-MaterialOjectID}}\",\n   \t\"ValuationLevelTypeCode\": \"1\"\n} \n    "
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmumaterial/MaterialCollection('{{P-MaterialOjectID}}')",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"vmumaterial",
								"MaterialCollection('{{P-MaterialOjectID}}')"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create valuation data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Valuation data for company \" + jsonResponse.d.results.CompanyID + \" created\", function () { pm.response.to.have.status(201) });",
									"pm.test(\"Lifecycle status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.be.oneOf([\"1\"]) });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"ParentObjectID\": \"{{P-MaterialOjectID}}\",\n\t\"CompanyID\": \"{{P-CompanyID}}\",\n    \"BusinessResidenceID\": \"{{P-BusinessResidenceID}}\"\n}    \t"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmumaterial/ValuationCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"vmumaterial",
								"ValuationCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create deviant tax classification",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Deviant tax classification for country \" + jsonResponse.d.results.CountryCode + \" created\", function () { pm.response.to.have.status(201) });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"ParentObjectID\": \"{{P-MaterialOjectID}}\",\n\t\"CountryCode\": \"US\",\n\t\"RegionCode\": \"\",\n    \"TaxTypeCode\": \"1\",\n    \"TaxRateTypeCode\": \"1\",\n    \"TaxExemptionReasonCode\": \"I\"\n}    \t"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmumaterial/DeviantTaxClassificationCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"vmumaterial",
								"DeviantTaxClassificationCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create withholding tax classification",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Withholding tax classification for country \" + jsonResponse.d.results.CountryCode + \" created\", function () { pm.response.to.have.status(201) });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"ParentObjectID\": \"{{P-MaterialOjectID}}\",\n\t\"CountryCode\": \"US\",\n\t\"TaxTypeCode\": \"3\",\n\t\"WithholdingTaxIncomeTypeCode\": \"23\"\n}    \t"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmumaterial/WithholdingTaxClassificationCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"vmumaterial",
								"WithholdingTaxClassificationCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get material valuation and tax data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"P-MaterialID\", jsonResponse.d.results.InternalID);",
									"pm.environment.set(\"P-MaterialUUID\", jsonResponse.d.results.UUID);",
									"pm.environment.set(\"P-MaterialOjectID\", jsonResponse.d.results.ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Material \" + jsonResponse.d.results.InternalID + \" retrieved\", function () { pm.response.to.have.status(200) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmumaterial/MaterialCollection('{{P-MaterialOjectID}}')?$expand=DeviantTaxClassification,WithholdingTaxClassification,Valuation/CompanyCurrentName,Valuation/BusinessResidenceCurrentName&$format=json",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"vmumaterial",
								"MaterialCollection('{{P-MaterialOjectID}}')"
							],
							"query": [
								{
									"key": "$filter",
									"value": "InternalID eq '{{P-MaterialID}}'",
									"disabled": true
								},
								{
									"key": "$expand",
									"value": "DeviantTaxClassification,WithholdingTaxClassification,Valuation/CompanyCurrentName,Valuation/BusinessResidenceCurrentName"
								},
								{
									"key": "$format",
									"value": "json"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Service Product (read)",
			"item": [
				{
					"name": "Get service entity sets",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"pm.test(\"Service Product entity sets retrieved\", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Request forgery token received\", function () { pm.response.to.have.header(\"x-csrf-token\") });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khserviceproduct/",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khserviceproduct",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get service metadata",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"pm.test(\"Service metadata retrieved\", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Request forgery token received\", function () { pm.response.to.have.header(\"x-csrf-token\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khserviceproduct/$metadata",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khserviceproduct",
								"$metadata"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get service product (all data)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Service product \" + jsonResponse.d.results.InternalID + \" retrieved\", function () { pm.response.to.have.status(200) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khserviceproduct/ServiceProductCollection?$filter=InternalID eq '{{P-ServiceProductID2}}'&$expand=ProductCategory,QuantityConversion,Identification,CustomerInformation,Text,AttachmentFolder,Purchasing/PurchasingText,Sales/SalesText,Sales/SalesOrganisationNameByValidity,Valuation/CompanyCurrentName,DeviantTaxClassification,WithholdingTaxClassification&$format=json&sap-language=en",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khserviceproduct",
								"ServiceProductCollection"
							],
							"query": [
								{
									"key": "$filter",
									"value": "InternalID eq '{{P-ServiceProductID2}}'"
								},
								{
									"key": "$expand",
									"value": "ProductCategory,QuantityConversion,Identification,CustomerInformation,Text,AttachmentFolder,Purchasing/PurchasingText,Sales/SalesText,Sales/SalesOrganisationNameByValidity,Valuation/CompanyCurrentName,DeviantTaxClassification,WithholdingTaxClassification"
								},
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "sap-language",
									"value": "en"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get service general data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Service product \" + jsonResponse.d.results[0].InternalID + \" retrieved\", function () { pm.response.to.have.status(200) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khserviceproduct/ServiceProductCollection?$filter=InternalID eq '{{P-ServiceProductID2}}'&$expand=QuantityConversion,ProductCategory,Identification,Text,AttachmentFolder&$format=json",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khserviceproduct",
								"ServiceProductCollection"
							],
							"query": [
								{
									"key": "$filter",
									"value": "InternalID eq '{{P-ServiceProductID2}}'"
								},
								{
									"key": "$expand",
									"value": "QuantityConversion,ProductCategory,Identification,Text,AttachmentFolder"
								},
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$select",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get service purchasing data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Service product \" + jsonResponse.d.results[0].InternalID + \" retrieved\", function () { pm.response.to.have.status(200) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khserviceproduct/ServiceProductCollection?$filter=InternalID eq '{{P-ServiceProductID2}}'&$expand=QuantityConversion,Purchasing/PurchasingText&$format=json&$select=ObjectID,UUID,InternalID,Description,QuantityConversion,Purchasing",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khserviceproduct",
								"ServiceProductCollection"
							],
							"query": [
								{
									"key": "$filter",
									"value": "InternalID eq '{{P-ServiceProductID2}}'"
								},
								{
									"key": "$expand",
									"value": "QuantityConversion,Purchasing/PurchasingText"
								},
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$select",
									"value": "ObjectID,UUID,InternalID,Description,QuantityConversion,Purchasing"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get service sales data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Service product \" + jsonResponse.d.results[0].InternalID + \" retrieved\", function () { pm.response.to.have.status(200) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khserviceproduct/ServiceProductCollection?$filter=InternalID eq '{{P-ServiceProductID2}}'&$expand=QuantityConversion,CustomerInformation,Sales/SalesOrganisationNameByValidity,Sales/SalesText&$format=json&$select=ObjectID,UUID,InternalID,Description,QuantityConversion,CustomerInformation,Sales",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khserviceproduct",
								"ServiceProductCollection"
							],
							"query": [
								{
									"key": "$filter",
									"value": "InternalID eq '{{P-ServiceProductID2}}'"
								},
								{
									"key": "$expand",
									"value": "QuantityConversion,CustomerInformation,Sales/SalesOrganisationNameByValidity,Sales/SalesText"
								},
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$select",
									"value": "ObjectID,UUID,InternalID,Description,QuantityConversion,CustomerInformation,Sales"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get service valuation data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Service product \" + jsonResponse.d.results[0].InternalID + \" retrieved\", function () { pm.response.to.have.status(200) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khserviceproduct/ServiceProductCollection?$filter=InternalID eq '{{P-ServiceProductID2}}'&$expand=QuantityConversion,Valuation/CompanyCurrentName&$format=json&$select=ObjectID,UUID,InternalID,Description,QuantityConversion,Valuation",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khserviceproduct",
								"ServiceProductCollection"
							],
							"query": [
								{
									"key": "$filter",
									"value": "InternalID eq '{{P-ServiceProductID2}}'"
								},
								{
									"key": "$expand",
									"value": "QuantityConversion,Valuation/CompanyCurrentName"
								},
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$select",
									"value": "ObjectID,UUID,InternalID,Description,QuantityConversion,Valuation"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Query service product financial valuation data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Validations",
									"pm.test(\"Financial service product valuation data retrieved\", function () { pm.response.to.have.status(200) });",
									"",
									"// Set environment valiables",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"P-SVDObjectID2\", jsonResponse.d.results[0].ObjectID);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khserviceproductvaluationdata/QueryByServiceProduct?ServiceProductID='{{P-ServiceProductID2}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khserviceproductvaluationdata",
								"QueryByServiceProduct"
							],
							"query": [
								{
									"key": "ServiceProductID",
									"value": "'{{P-ServiceProductID2}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get service product financial valuation data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Validations",
									"pm.test(\"Financial service product valuation data retrieved\", function () { pm.response.to.have.status(200) });",
									"",
									"// Set environment valiables",
									"var jsonResponse = pm.response.json();",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khserviceproductvaluationdata/ServiceProductValuationDataCollection('{{P-SVDObjectID2}}')?$expand=CostRate&$format=json",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khserviceproductvaluationdata",
								"ServiceProductValuationDataCollection('{{P-SVDObjectID2}}')"
							],
							"query": [
								{
									"key": "$expand",
									"value": "CostRate"
								},
								{
									"key": "$format",
									"value": "json"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get service tax data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Service product \" + jsonResponse.d.results[0].InternalID + \" retrieved\", function () { pm.response.to.have.status(200) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khserviceproduct/ServiceProductCollection?$filter=InternalID eq '{{P-ServiceProductID2}}'&$expand=DeviantTaxClassification,WithholdingTaxClassification&$format=json&$select=ObjectID,UUID,InternalID,Description,DeviantTaxClassification,WithholdingTaxClassification",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khserviceproduct",
								"ServiceProductCollection"
							],
							"query": [
								{
									"key": "$filter",
									"value": "InternalID eq '{{P-ServiceProductID2}}'"
								},
								{
									"key": "$expand",
									"value": "DeviantTaxClassification,WithholdingTaxClassification"
								},
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$select",
									"value": "ObjectID,UUID,InternalID,Description,DeviantTaxClassification,WithholdingTaxClassification"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "Product Data SAP Business ByDesin Collection\r\npostman collection is to create and update Products (Material and Service Products) data of SAP Business ByDesign in sales demo system\r\n\r\nSupported environment:\r\nE2E Scenarios - PM 338338\r\n\r\n \r\nMaterials Folder : Creates Materail General, Purchasing, Logistics, Planning , Availability Confirmation, Sales, Valuation data\r\nRequired user authorizations (ByD Work Center Views):\r\nProduct Data - Materials\r\n\r\n\r\nScenario:\r\nCreates General Information\r\nCreates Quantity Conversion\r\nCreates and updates and activates Purchasing information\r\nCreates and updates and activates Logistics information\r\nCreates and updates and activates Planning information\r\nCreates and updates and activates Availability information\r\nCreates and updates and activates Sales information\r\nCreates and updates and activates Valuation information\r\n\r\n\r\n \r\nServices Folder : Creates Service Product General, Purchasing, Sales, Valuation data\r\nRequired user authorizations (ByD Work Center Views):\r\nProduct Data - Services\r\n\r\n\r\nScenario:\r\nCreates General Information\r\nCreates Quantity Conversion\r\nCreates and updates and activates Purchasing information\r\nCreates and updates and activates Sales information\r\nCreates and updates and activates Valuation information"
		},
		{
			"name": "Service Product (write)",
			"item": [
				{
					"name": "Get xsrf-token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"pm.test(\"Cross-site request forgery token received\", function () { pm.response.to.have.header(\"x-csrf-token\") });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khserviceproduct/",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khserviceproduct",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create service product",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Set Material ID of pattern <Prefix>-<UTC datetime>",
									"let todayDateTime = (new Date()).toISOString().substr(0,19);",
									"todayDateTime = todayDateTime.replace(\"-\",\"\").replace(\"-\",\"\").replace(\"T\",\"\").replace(\":\",\"\").replace(\":\",\"\");",
									"var generatedID = pm.environment.get(\"P-Prefix\") + todayDateTime;",
									"pm.environment.set(\"P-ServiceProductID\", generatedID);",
									"",
									"// Use internal numbering for service IDs => initialize environment variable ServiceProductID",
									"//pm.environment.set(\"P-ServiceProductID\", \"\");",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"P-ServiceProductID\", jsonResponse.d.results.InternalID);",
									"pm.environment.set(\"P-ServiceProductUUID\", jsonResponse.d.results.UUID);",
									"pm.environment.set(\"P-ServiceProductObjectID\", jsonResponse.d.results.ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Service product \" + jsonResponse.d.results.InternalID + \" created\", function () { pm.response.to.have.status(201) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"InternalID\": \"{{P-ServiceProductID}}\",\n    \"Description\": \"Service product created by OData\",\n    \"DescriptionLanguageCode\": \"EN\",\n    \"BaseMeasureUnitCode\": \"HUR\",\n\t\"ProductCategory\": \n\t\t{\n\t\t\t\"ProductCategoryInternalID\": \"{{P-ServiceProductCategoryID}}\"\n\t\t},\n\t\"Text\": \n\t\t[\n        \t{\n\t\t\t\t\"Text\": \"Detailed description of the service product created using Custom OData Services\",\n\t\t\t\t\"LanguageCode\": \"EN\",\n\t\t\t\t\"TypeCode\": \"10006\"\n\t\t\t}\n\t]        \n}"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khserviceproduct/ServiceProductCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khserviceproduct",
								"ServiceProductCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create quantity conversion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Validations",
									"var jsonResponse = pm.response.json();",
									"pm.test(\"Service product quantity conversion \" + jsonResponse.d.results.CorrespondingQuantityUnitCodeText + \" to \" + jsonResponse.d.results.QuantityUnitCodeText + \" created\", function () { pm.response.to.have.status(201) });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"ParentObjectID\": \"{{P-ServiceProductObjectID}}\",\n\t\"CorrespondingQuantity\": \"20\",\n\t\"CorrespondingQuantityUnitCode\": \"HUR\",\n\t\"Quantity\": \"1\",\n\t\"QuantityUnitCode\": \"XPK\"\n}    \t"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khserviceproduct/QuantityConversionCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khserviceproduct",
								"QuantityConversionCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get service general data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"P-ServiceProductID\", jsonResponse.d.results.InternalID);",
									"pm.environment.set(\"P-ServiceProductUUID\", jsonResponse.d.results.UUID);",
									"pm.environment.set(\"P-ServiceProductObjectID\", jsonResponse.d.results.ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Service product \" + jsonResponse.d.results.InternalID + \" retrieved\", function () { pm.response.to.have.status(200) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khserviceproduct/ServiceProductCollection('{{P-ServiceProductObjectID}}')?$expand=ProductCategory,QuantityConversion,Identification,Text&$format=json",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khserviceproduct",
								"ServiceProductCollection('{{P-ServiceProductObjectID}}')"
							],
							"query": [
								{
									"key": "$filter",
									"value": "InternalID eq '{{P-ServiceProductID}}'",
									"disabled": true
								},
								{
									"key": "$expand",
									"value": "ProductCategory,QuantityConversion,Identification,Text"
								},
								{
									"key": "$format",
									"value": "json"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create and activate purchasing data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"P-ServicePurchasingObjectID\", jsonResponse.d.results.ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Service product purchasing data created\", function () { pm.response.to.have.status(201) });",
									"pm.test(\"Lifecycle status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.be.oneOf([\"2\"]) });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"ParentObjectID\": \"{{P-ServiceProductObjectID}}\",\n\t\"PurchasingMeasureUnitCode\": \"XPK\",\n\t\"LifeCycleStatusCode\": \"2\"\n}    \t"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khserviceproduct/PurchasingCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khserviceproduct",
								"PurchasingCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create purchasing note",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Validations",
									"var jsonResponse = pm.response.json();",
									"pm.test(\"Service product purchasing note created\", function () { pm.response.to.have.status(201) });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"ParentObjectID\": \"{{P-ServicePurchasingObjectID}}\",\n\t\"Text\": \"Some purchasing note...\",\n\t\"LanguageCode\": \"EN\",\n\t\"TypeCode\": \"10026\"\n}    \t"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khserviceproduct/PurchasingTextCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khserviceproduct",
								"PurchasingTextCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create purchasing internal comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Validations",
									"var jsonResponse = pm.response.json();",
									"pm.test(\"Service product internal purchasing comment created\", function () { pm.response.to.have.status(201) });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"ParentObjectID\": \"{{P-ServicePurchasingObjectID}}\",\n\t\"Text\": \"Some internal purchasing comment...\",\n\t\"LanguageCode\": \"EN\",\n\t\"TypeCode\": \"10011\"\n}    \t"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khserviceproduct/PurchasingTextCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khserviceproduct",
								"PurchasingTextCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get service purchasing data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"P-ServiceProductID\", jsonResponse.d.results.InternalID);",
									"pm.environment.set(\"P-ServiceProductUUID\", jsonResponse.d.results.UUID);",
									"pm.environment.set(\"P-ServiceProductObjectID\", jsonResponse.d.results.ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Service product \" + jsonResponse.d.results.InternalID + \" retrieved\", function () { pm.response.to.have.status(200) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khserviceproduct/ServiceProductCollection('{{P-ServiceProductObjectID}}')?$expand=Purchasing/PurchasingText&$format=json",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khserviceproduct",
								"ServiceProductCollection('{{P-ServiceProductObjectID}}')"
							],
							"query": [
								{
									"key": "$filter",
									"value": "InternalID eq '{{P-ServiceProductID}}'",
									"disabled": true
								},
								{
									"key": "$expand",
									"value": "Purchasing/PurchasingText"
								},
								{
									"key": "$format",
									"value": "json"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create customer information",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Validations",
									"var jsonResponse = pm.response.json();",
									"pm.test(\"Service product customer information for customer \" + jsonResponse.d.results.CustomerID + \" created\", function () { pm.response.to.have.status(201) });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Set SupplierPartNumber",
									"var generatedNumber = pm.environment.get(\"P-CustomerID\") + \"-\" + pm.environment.get(\"P-ServiceProductID\");",
									"pm.environment.set(\"P-CustomerServiceNumber\", generatedNumber);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"ParentObjectID\": \"{{P-ServiceProductObjectID}}\",\n\t\"CustomerID\": \"{{P-CustomerID}}\",\n\t\"CustomerServiceNumber\": \"{{P-CustomerServiceNumber}}\"\n}    \t"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khserviceproduct/CustomerInformationCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khserviceproduct",
								"CustomerInformationCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create and activate sales data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"P-ServiceSalesObjectID\", jsonResponse.d.results.ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Sales data for sales organisation \" + jsonResponse.d.results.SalesOrganisationID + \" created\", function () { pm.response.to.have.status(201) });",
									"pm.test(\"Lifecycle status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.be.oneOf([\"2\"]) });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"ParentObjectID\": \"{{P-ServiceProductObjectID}}\",\n\t\"SalesOrganisationID\": \"{{P-SalesOrganisationID}}\",\n\t\"DistributionChannelCode\": \"01\",\n\t\"LifeCycleStatusCode\": \"2\",\n    \"SalesMeasureUnitCode\": \"XPK\",\n    \"ItemGroupCode\": \"SECO\",\n\t\"MinimumOrderQuantity\": \"1\",\n\t\"CashDiscountDeductibleIndicator\": true,\n\t\"ReferencePriceServiceProductID\": \"{{P-ServiceProductID2}}\",\n    \"SalesText\": \n    \t[\n    \t\t{\n    \t\t\t\"Text\": \"Some internal comment...\",\n    \t\t\t\"TypeCode\": \"10011\"\n    \t\t},\n    \t\t{\n    \t\t\t\"Text\": \"My sales note...\",\n    \t\t\t\"LanguageCode\": \"EN\",\n    \t\t\t\"TypeCode\": \"10027\"\n    \t\t}\n    \t]                        \n}    \t"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khserviceproduct/SalesCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khserviceproduct",
								"SalesCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get service sales data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"P-ServiceProductID\", jsonResponse.d.results.InternalID);",
									"pm.environment.set(\"P-ServiceProductUUID\", jsonResponse.d.results.UUID);",
									"pm.environment.set(\"P-ServiceProductObjectID\", jsonResponse.d.results.ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Service product \" + jsonResponse.d.results.InternalID + \" retrieved\", function () { pm.response.to.have.status(200) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khserviceproduct/ServiceProductCollection('{{P-ServiceProductObjectID}}')?$expand=QuantityConversion,CustomerInformation,Sales/SalesOrganisationNameByValidity,Sales/SalesText&$format=json",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khserviceproduct",
								"ServiceProductCollection('{{P-ServiceProductObjectID}}')"
							],
							"query": [
								{
									"key": "$expand",
									"value": "QuantityConversion,CustomerInformation,Sales/SalesOrganisationNameByValidity,Sales/SalesText"
								},
								{
									"key": "$format",
									"value": "json"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create valuation data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Valuation data for company \" + jsonResponse.d.results.CompanyID + \" created\", function () { pm.response.to.have.status(201) });",
									"pm.test(\"Lifecycle status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.be.oneOf([\"1\"]) });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"ParentObjectID\": \"{{P-ServiceProductObjectID}}\",\n\t\"CompanyID\": \"{{P-CompanyID}}\"\n}    \t"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khserviceproduct/ValuationCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khserviceproduct",
								"ValuationCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get service product financial valuation data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Validations",
									"pm.test(\"Financial service product valuation data retrieved\", function () { pm.response.to.have.status(200) });",
									"",
									"// Set environment valiables",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"P-SVDObjectID\", jsonResponse.d.results[0].ObjectID);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khserviceproductvaluationdata/ServiceProductValuationDataCollection?$filter=ServiceProductInternalID eq '{{P-ServiceProductID}}'&$expand=CostRate&$format=json",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khserviceproductvaluationdata",
								"ServiceProductValuationDataCollection"
							],
							"query": [
								{
									"key": "$filter",
									"value": "ServiceProductInternalID eq '{{P-ServiceProductID}}'"
								},
								{
									"key": "$expand",
									"value": "CostRate"
								},
								{
									"key": "$format",
									"value": "json"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create cost rate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Cost rate for set of books \" + jsonResponse.d.results.SetOfBooksID + \" created\", function () { pm.response.to.have.status(201) });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"ParentObjectID\": \"{{P-SVDObjectID}}\",\n\t\"SetOfBooksID\": \"7000\",\n\t\"Amount\": \"150\",\n\t\"BaseQuantity\": \"1\"\n}    \t"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khserviceproductvaluationdata/CostRateCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khserviceproductvaluationdata",
								"CostRateCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get service product financial valuation data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Validations",
									"pm.test(\"Financial service product valuation data retrieved\", function () { pm.response.to.have.status(200) });",
									"",
									"// Set environment valiables",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"P-SVDObjectID\", jsonResponse.d.results[0].ObjectID);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khserviceproductvaluationdata/ServiceProductValuationDataCollection?$filter=ServiceProductInternalID eq '{{P-ServiceProductID}}'&$expand=CostRate&$format=json",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khserviceproductvaluationdata",
								"ServiceProductValuationDataCollection"
							],
							"query": [
								{
									"key": "$filter",
									"value": "ServiceProductInternalID eq '{{P-ServiceProductID}}'"
								},
								{
									"key": "$expand",
									"value": "CostRate"
								},
								{
									"key": "$format",
									"value": "json"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get service product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Service product \" + jsonResponse.d.results[0].InternalID + \" retrieved\", function () { pm.response.to.have.status(200) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khserviceproduct/ServiceProductCollection?$filter=InternalID eq '{{P-ServiceProductID}}'&$expand=ProductCategory,QuantityConversion,Identification,CustomerInformation,Text,AttachmentFolder,Purchasing/PurchasingText,Sales/SalesText,Sales/SalesOrganisationNameByValidity,Valuation/CompanyCurrentName,DeviantTaxClassification,WithholdingTaxClassification&$format=json&sap-language=en",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khserviceproduct",
								"ServiceProductCollection"
							],
							"query": [
								{
									"key": "$filter",
									"value": "InternalID eq '{{P-ServiceProductID}}'"
								},
								{
									"key": "$expand",
									"value": "ProductCategory,QuantityConversion,Identification,CustomerInformation,Text,AttachmentFolder,Purchasing/PurchasingText,Sales/SalesText,Sales/SalesOrganisationNameByValidity,Valuation/CompanyCurrentName,DeviantTaxClassification,WithholdingTaxClassification"
								},
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "sap-language",
									"value": "en"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Sales Prices",
			"item": [
				{
					"name": "Price Lists",
					"item": [
						{
							"name": "Create/Update base price list (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"pm.environment.set(\"PriceListUUID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.UUID);",
											"",
											"// Validations",
											"pm.test(\"Base Price List \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.ID + \" created / updated \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:SalesPriceListBundleMaintainRequest_sync>\r\n \t\t<SalesPriceList ActionCode=\"04\">\r\n\t\t  <TypeCode>7PL0</TypeCode>  <!-- 7PL0 for Price List -->\r\n\t\t  <ID>MD-1</ID>\r\n\t\t  <Description languageCode=\"EN\">Base price list</Description>\r\n\t\t  \r\n\t\t  <!-- No Header Keys -->\r\n\t\t  \r\n\t\t  <StartDate>2000-02-02</StartDate>\r\n\t\t  <EndDate>2000-02-02</EndDate>\r\n\t\t  <CurrencyCode>USD</CurrencyCode>\t\t  \r\n\t\t  <PriceSpecification>\r\n\t\t\t   <TypeCode>7PR1</TypeCode>  <!-- 7PR1 for Price -->\r\n\t\t\t   <Amount currencyCode=\"EUR\">200.00</Amount>\r\n\t\t\t   <BaseQuantity unitCode=\"EA\">1</BaseQuantity>\r\n\t\t\t   <BaseQuantityTypeCode>EA</BaseQuantityTypeCode>\r\n\t\t\t   <ProductID>{{ProductID}}</ProductID>\r\n\t\t\t   <ProductTypeCode>1</ProductTypeCode>   <!-- 1 means Material , 2 Means Service Product -->\r\n\t\t  </PriceSpecification>\r\n\t\t </SalesPriceList>\r\n\r\n      </glob:SalesPriceListBundleMaintainRequest_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managesalespricelistin2",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managesalespricelistin2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get base price list",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"Get Base Price List  - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmupricelist/PriceListCollection?$filter=UUID eq guid'{{PriceListUUID}}'&$expand=PriceListKeys,Items,Items/ItemKeys,Items/Scales&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmupricelist",
										"PriceListCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "UUID eq guid'{{PriceListUUID}}'"
										},
										{
											"key": "$expand",
											"value": "PriceListKeys,Items,Items/ItemKeys,Items/Scales"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create/Update base price list product category (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"pm.environment.set(\"PriceListUUID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.UUID);",
											"",
											"// Validations",
											"pm.test(\"Base price list product category \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.ID + \" created / updated \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:SalesPriceListBundleMaintainRequest_sync>\r\n \t\t<SalesPriceList ActionCode=\"04\">\r\n\t\t  <TypeCode>7PL0</TypeCode>  <!-- 7PL0 for Price List -->\r\n\t\t  <ID>MD-2</ID>\r\n\t\t  <Description languageCode=\"EN\">Base product category price list</Description>\r\n\t\t  \r\n\t\t  <!--Header Keys: ProductCategoryID --> \r\n\t\t  <ProductCategoryID>{{ProductCategoryID}}</ProductCategoryID>\r\n\t\t  \r\n\t\t  <StartDate>2000-02-02</StartDate>\r\n\t\t  <EndDate>2000-02-02</EndDate>\r\n\t\t  <CurrencyCode>USD</CurrencyCode>\t\t  \r\n\t\t  <PriceSpecification>\r\n\t\t\t   <TypeCode>7PR1</TypeCode>  <!-- 7PR1 for Price -->\r\n\t\t\t   <Amount currencyCode=\"EUR\">200.00</Amount>\r\n\t\t\t   <BaseQuantity unitCode=\"EA\">1</BaseQuantity>\r\n\t\t\t   <BaseQuantityTypeCode>EA</BaseQuantityTypeCode>\r\n\t\t\t   <ProductID>{{ProductID}}</ProductID>\r\n\t\t\t   <ProductTypeCode>1</ProductTypeCode>   <!-- 1 means Material , 2 Means Service Product -->\r\n\t\t  </PriceSpecification>\r\n\t\t </SalesPriceList>\r\n\r\n      </glob:SalesPriceListBundleMaintainRequest_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managesalespricelistin2",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managesalespricelistin2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get base price list product category",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"Get Base price list product category  - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmupricelist/PriceListCollection?$filter=UUID eq guid'{{PriceListUUID}}'&$expand=PriceListKeys,Items,Items/ItemKeys,Items/Scales&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmupricelist",
										"PriceListCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "UUID eq guid'{{PriceListUUID}}'"
										},
										{
											"key": "$expand",
											"value": "PriceListKeys,Items,Items/ItemKeys,Items/Scales"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create/Update distribution chain price list (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"pm.environment.set(\"PriceListUUID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.UUID);",
											"",
											"// Validations",
											"pm.test(\"Distribution chain price list \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.ID + \" created / updated \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:SalesPriceListBundleMaintainRequest_sync>\r\n \t\t<SalesPriceList ActionCode=\"04\">\r\n\t\t  <TypeCode>7PL0</TypeCode>  <!-- 7PL0 for Price List -->\r\n\t\t  <ID>MD-3</ID>\r\n\t\t  <Description languageCode=\"EN\">Price list per sales organization</Description>\r\n\t\t  \r\n\t\t  <!-- Header Keys: SalesOrgID,DistributionChannelCode -->\r\n\t\t  \r\n\t\t  <SalesOrgID>{{SalesOrgID}}</SalesOrgID>\r\n\t\t  <DistributionChannelCode>{{DistributionChannel}}</DistributionChannelCode>\r\n\t\t  \r\n\t\t  <StartDate>2000-02-02</StartDate>\r\n\t\t  <EndDate>2000-02-02</EndDate>\r\n\t\t  <CurrencyCode>USD</CurrencyCode>\t\t  \r\n\t\t  <PriceSpecification>\r\n\t\t\t   <TypeCode>7PR1</TypeCode>  <!-- 7PR1 for Price -->\r\n\t\t\t   <Amount currencyCode=\"EUR\">200.00</Amount>\r\n\t\t\t   <BaseQuantity unitCode=\"EA\">1</BaseQuantity>\r\n\t\t\t   <BaseQuantityTypeCode>EA</BaseQuantityTypeCode>\r\n\t\t\t   <ProductID>{{ProductID}}</ProductID>\r\n\t\t\t   <ProductTypeCode>1</ProductTypeCode>   <!-- 1 means Material , 2 Means Service Product -->\r\n\t\t  </PriceSpecification>\r\n\t\t </SalesPriceList>\r\n\r\n      </glob:SalesPriceListBundleMaintainRequest_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managesalespricelistin2",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managesalespricelistin2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get distribution chain price list",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"Get Distribution chain price list - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmupricelist/PriceListCollection?$filter=UUID eq guid'{{PriceListUUID}}'&$expand=PriceListKeys,Items,Items/ItemKeys,Items/Scales&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmupricelist",
										"PriceListCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "UUID eq guid'{{PriceListUUID}}'"
										},
										{
											"key": "$expand",
											"value": "PriceListKeys,Items,Items/ItemKeys,Items/Scales"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create/Update distribution chain price list by product category (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"pm.environment.set(\"PriceListUUID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.UUID);",
											"",
											"// Validations",
											"pm.test(\"Distribution chain price list by product category \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.ID + \" created / updated \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:SalesPriceListBundleMaintainRequest_sync>\r\n \t\t<SalesPriceList ActionCode=\"04\">\r\n\t\t  <TypeCode>7PL0</TypeCode>  <!-- 7PL0 for Price List -->\r\n\t\t  <ID>MD-4</ID>\r\n\t\t  <Description languageCode=\"EN\">Distribution chain price list 2</Description>\r\n\t\t  \r\n\t\t  <!-- Header Keys: SalesOrgID,DistributionChannelCode,ProductCategoryID -->\r\n\t\t  \r\n\t\t  <SalesOrgID>{{SalesOrgID}}</SalesOrgID>\r\n\t\t  <DistributionChannelCode>{{DistributionChannel}}</DistributionChannelCode>\r\n\t\t  <ProductCategoryID>{{ProductCategoryID}}</ProductCategoryID>\r\n\t\t  \r\n\t\t  <StartDate>2000-01-01</StartDate>\r\n\t\t  <EndDate>2000-01-01</EndDate>\r\n\t\t  <CurrencyCode>USD</CurrencyCode>\t\t  \r\n\t\t  <PriceSpecification>\r\n\t\t\t   <TypeCode>7PR1</TypeCode>  <!-- 7PR1 for Price -->\r\n\t\t\t   <Amount currencyCode=\"EUR\">200.00</Amount>\r\n\t\t\t   <BaseQuantity unitCode=\"EA\">1</BaseQuantity>\r\n\t\t\t   <BaseQuantityTypeCode>EA</BaseQuantityTypeCode>\r\n\t\t\t   <ProductID>{{ProductID}}</ProductID>\r\n\t\t\t   <ProductTypeCode>1</ProductTypeCode>   <!-- 1 means Material , 2 Means Service Product -->\r\n\t\t  </PriceSpecification>\r\n\t\t </SalesPriceList>\r\n\r\n      </glob:SalesPriceListBundleMaintainRequest_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managesalespricelistin2",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managesalespricelistin2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get distribution chain price list by product category",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"Get Distribution chain price list by product category  - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmupricelist/PriceListCollection?$filter=UUID eq guid'{{PriceListUUID}}'&$expand=PriceListKeys,Items,Items/ItemKeys,Items/Scales&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmupricelist",
										"PriceListCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "UUID eq guid'{{PriceListUUID}}'"
										},
										{
											"key": "$expand",
											"value": "PriceListKeys,Items,Items/ItemKeys,Items/Scales"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create/Update customer group price list (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"pm.environment.set(\"PriceListUUID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.UUID);",
											"",
											"// Validations",
											"pm.test(\"Customer group price list \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.ID + \" created / updated \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:SalesPriceListBundleMaintainRequest_sync>\r\n \t\t<SalesPriceList ActionCode=\"04\">\r\n\t\t  <TypeCode>7PL0</TypeCode>  <!-- 7PL0 for Price List -->\r\n\t\t  <ID>MD-5</ID>\r\n\t\t  <Description languageCode=\"EN\">Customer group price list</Description>\r\n\t\t  \r\n\t\t  <!-- Header Keys: SalesOrgID,DistributionChannelCode,ProductCategoryID -->\r\n\t\t  \r\n\t\t  <SalesOrgID>{{SalesOrgID}}</SalesOrgID>\r\n\t\t  <DistributionChannelCode>{{DistributionChannel}}</DistributionChannelCode>\r\n\t\t  <CustomerGroupCode>{{CustomerGroup}}</CustomerGroupCode>\r\n\t\t  \r\n\t\t  <StartDate>2000-01-01</StartDate>\r\n\t\t  <EndDate>2000-01-01</EndDate>\r\n\t\t  <CurrencyCode>USD</CurrencyCode>\t\t  \r\n\t\t  <PriceSpecification>\r\n\t\t\t   <TypeCode>7PR1</TypeCode>  <!-- 7PR1 for Price -->\r\n\t\t\t   <Amount currencyCode=\"EUR\">200.00</Amount>\r\n\t\t\t   <BaseQuantity unitCode=\"EA\">1</BaseQuantity>\r\n\t\t\t   <BaseQuantityTypeCode>EA</BaseQuantityTypeCode>\r\n\t\t\t   <ProductID>{{ProductID}}</ProductID>\r\n\t\t\t   <ProductTypeCode>1</ProductTypeCode>   <!-- 1 means Material , 2 Means Service Product -->\r\n\t\t  </PriceSpecification>\r\n\t\t </SalesPriceList>\r\n\r\n      </glob:SalesPriceListBundleMaintainRequest_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managesalespricelistin2",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managesalespricelistin2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get customer group price list",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"Get Customer group price list - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmupricelist/PriceListCollection?$filter=UUID eq guid'{{PriceListUUID}}'&$expand=PriceListKeys,Items,Items/ItemKeys,Items/Scales&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmupricelist",
										"PriceListCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "UUID eq guid'{{PriceListUUID}}'"
										},
										{
											"key": "$expand",
											"value": "PriceListKeys,Items,Items/ItemKeys,Items/Scales"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create/Update customer specific price list (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"pm.environment.set(\"PriceListUUID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.UUID);",
											"",
											"// Validations",
											"pm.test(\"Customer specific price list \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.ID + \" created / updated \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:SalesPriceListBundleMaintainRequest_sync>\r\n \t\t<SalesPriceList ActionCode=\"04\">\r\n\t\t  <TypeCode>7PL0</TypeCode>  <!-- 7PL0 for Price List -->\r\n\t\t  <ID>MD-6</ID>\r\n\t\t  <Description languageCode=\"EN\">Price list per customer</Description>\r\n\t\t  \r\n\t\t  <!-- Header Keys: SalesOrgID,DistributionChannelCode,ProductCategoryID -->\r\n\t\t  \r\n\t\t  <AccountID>{{AccountID}}</AccountID>\r\n\t\t \r\n\t\t  <StartDate>2000-01-01</StartDate>\r\n\t\t  <EndDate>2000-01-01</EndDate>\r\n\t\t  <CurrencyCode>USD</CurrencyCode>\t\t  \r\n\t\t  <PriceSpecification>\r\n\t\t\t   <TypeCode>7PR1</TypeCode>  <!-- 7PR1 for Price -->\r\n\t\t\t   <Amount currencyCode=\"EUR\">200.00</Amount>\r\n\t\t\t   <BaseQuantity unitCode=\"EA\">1</BaseQuantity>\r\n\t\t\t   <BaseQuantityTypeCode>EA</BaseQuantityTypeCode>\r\n\t\t\t   <ProductID>{{ProductID}}</ProductID>\r\n\t\t\t   <ProductTypeCode>1</ProductTypeCode>   <!-- 1 means Material , 2 Means Service Product -->\r\n\t\t  </PriceSpecification>\r\n\t\t </SalesPriceList>\r\n\r\n      </glob:SalesPriceListBundleMaintainRequest_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managesalespricelistin2",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managesalespricelistin2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get customer specific price list",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"Get Customer specific price list - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmupricelist/PriceListCollection?$filter=UUID eq guid'{{PriceListUUID}}'&$expand=PriceListKeys,Items,Items/ItemKeys,Items/Scales&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmupricelist",
										"PriceListCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "UUID eq guid'{{PriceListUUID}}'"
										},
										{
											"key": "$expand",
											"value": "PriceListKeys,Items,Items/ItemKeys,Items/Scales"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create/Update campaign specific price list (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"pm.environment.set(\"PriceListUUID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.UUID);",
											"",
											"// Validations",
											"pm.test(\"Campaign specific price list \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.ID + \" created / updated \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:SalesPriceListBundleMaintainRequest_sync>\r\n \t\t<SalesPriceList ActionCode=\"04\">\r\n\t\t  <TypeCode>7PL0</TypeCode>  <!-- 7PL0 for Price List -->\r\n\t\t  <ID>MD-7</ID>\r\n\t\t  <Description languageCode=\"EN\">Price list per sales org. and campaign</Description>\r\n\t\t  \r\n\t\t  <!-- Header Keys: SalesOrgID,DistributionChannelCode,ProductCategoryID -->\r\n\t\t  \r\n\t\t  <SalesOrgID>{{SalesOrgID}}</SalesOrgID>\r\n\t\t  <DistributionChannelCode>{{DistributionChannel}}</DistributionChannelCode>\r\n\t\t  <CampaignID>{{CampaignID}}</CampaignID>\r\n\t\t \r\n\t\t  <StartDate>2000-01-01</StartDate>\r\n\t\t  <EndDate>2000-01-01</EndDate>\r\n\t\t  <CurrencyCode>USD</CurrencyCode>\t\t  \r\n\t\t  <PriceSpecification>\r\n\t\t\t   <TypeCode>7PR1</TypeCode>  <!-- 7PR1 for Price -->\r\n\t\t\t   <Amount currencyCode=\"EUR\">200.00</Amount>\r\n\t\t\t   <BaseQuantity unitCode=\"EA\">1</BaseQuantity>\r\n\t\t\t   <BaseQuantityTypeCode>EA</BaseQuantityTypeCode>\r\n\t\t\t   <ProductID>{{ProductID}}</ProductID>\r\n\t\t\t   <ProductTypeCode>1</ProductTypeCode>   <!-- 1 means Material , 2 Means Service Product -->\r\n\t\t  </PriceSpecification>\r\n\t\t </SalesPriceList>\r\n\r\n      </glob:SalesPriceListBundleMaintainRequest_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managesalespricelistin2",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managesalespricelistin2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get campaign specific price list",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"Get Campaign specific price list - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmupricelist/PriceListCollection?$filter=UUID eq guid'{{PriceListUUID}}'&$expand=PriceListKeys,Items,Items/ItemKeys,Items/Scales&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmupricelist",
										"PriceListCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "UUID eq guid'{{PriceListUUID}}'"
										},
										{
											"key": "$expand",
											"value": "PriceListKeys,Items,Items/ItemKeys,Items/Scales"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create/Update company specific price list (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"pm.environment.set(\"PriceListUUID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.UUID);",
											"",
											"// Validations",
											"pm.test(\"Company specific price list \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.ID + \" created / updated \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:SalesPriceListBundleMaintainRequest_sync>\r\n \t\t<SalesPriceList ActionCode=\"04\">\r\n\t\t  <TypeCode>7PL0</TypeCode>  <!-- 7PL0 for Price List -->\r\n\t\t  <ID>MD-8</ID>\r\n\t\t  <Description languageCode=\"EN\">Price list per company</Description>\r\n\t\t  \r\n\t\t  <!-- Header Keys: SalesOrgID,DistributionChannelCode,ProductCategoryID -->\r\n\t\t  \r\n\t\t  <CompanyID>{{CompanyID}}</CompanyID>\r\n\t\t \r\n\t\t  <StartDate>2000-01-01</StartDate>\r\n\t\t  <EndDate>2000-01-01</EndDate>\r\n\t\t  <CurrencyCode>USD</CurrencyCode>\t\t  \r\n\t\t  <PriceSpecification>\r\n\t\t\t   <TypeCode>7PR1</TypeCode>  <!-- 7PR1 for Price -->\r\n\t\t\t   <Amount currencyCode=\"EUR\">200.00</Amount>\r\n\t\t\t   <BaseQuantity unitCode=\"EA\">1</BaseQuantity>\r\n\t\t\t   <BaseQuantityTypeCode>EA</BaseQuantityTypeCode>\r\n\t\t\t   <ProductID>{{ProductID}}</ProductID>\r\n\t\t\t   <ProductTypeCode>1</ProductTypeCode>   <!-- 1 means Material , 2 Means Service Product -->\r\n\t\t  </PriceSpecification>\r\n\t\t </SalesPriceList>\r\n\r\n      </glob:SalesPriceListBundleMaintainRequest_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managesalespricelistin2",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managesalespricelistin2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get  company specific price list",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"Get Company specific price list  - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmupricelist/PriceListCollection?$filter=UUID eq guid'{{PriceListUUID}}'&$expand=PriceListKeys,Items,Items/ItemKeys,Items/Scales&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmupricelist",
										"PriceListCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "UUID eq guid'{{PriceListUUID}}'"
										},
										{
											"key": "$expand",
											"value": "PriceListKeys,Items,Items/ItemKeys,Items/Scales"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Discount Lists",
					"item": [
						{
							"name": "Create/Update overall customer discount (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"pm.environment.set(\"DiscountListUUID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.UUID);",
											"",
											"// Validations",
											"pm.test(\"Overall customer discount \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.ID + \" created / updated \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:SalesPriceListBundleMaintainRequest_sync>\r\n \t\t<SalesPriceList ActionCode=\"04\">\r\n\t\t  <TypeCode>7PL1</TypeCode>\r\n\t\t  <ID>MD-DL-1</ID>\r\n\t\t  <Description languageCode=\"EN\">Overall customer discounts</Description>\r\n\t\t  <StartDate>2000-05-05</StartDate>\r\n\t\t  <EndDate>2000-05-05</EndDate>\r\n\t\t    \r\n\t\t  <PriceSpecification>\r\n\t\t\t   <TypeCode>7PR6</TypeCode>\r\n\t\t\t   <Percent>1.00</Percent>\r\n\t\t\t   \r\n\t\t\t   <!-- Item Keys: AccountID -->\r\n\t\t\t   <AccountID>{{AccountID}}</AccountID>\r\n\t\t  </PriceSpecification>\r\n\t\t </SalesPriceList>\r\n\r\n      </glob:SalesPriceListBundleMaintainRequest_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managesalespricelistin2",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managesalespricelistin2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get overall customer discount",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"Get Overall customer discount - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmupricelist/PriceListCollection?$filter=UUID eq guid'{{DiscountListUUID}}'&$expand=PriceListKeys,Items,Items/ItemKeys,Items/Scales&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmupricelist",
										"PriceListCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "UUID eq guid'{{DiscountListUUID}}'"
										},
										{
											"key": "$expand",
											"value": "PriceListKeys,Items,Items/ItemKeys,Items/Scales"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create/Update customer hierarchy specific discount (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"pm.environment.set(\"DiscountListUUID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.UUID);",
											"",
											"// Validations",
											"pm.test(\"Customer hierarchy specific discount \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.ID + \" created / updated \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:SalesPriceListBundleMaintainRequest_sync>\r\n \t\t<SalesPriceList ActionCode=\"04\">\r\n\t\t  <TypeCode>7PL1</TypeCode>\r\n\t\t  <ID>MD-DL-2</ID>\r\n\t\t  <Description languageCode=\"EN\">Customer hierarchy specific discount</Description>\r\n\t\t  \r\n\t\t  <!-- Header Keys: AccountHierarchyID -->\r\n\t\t  \r\n\t\t  <AccountHierarchyID>IF01</AccountHierarchyID>\r\n\t\t  \r\n\t\t  <StartDate>2001-01-01</StartDate>\r\n\t\t  <EndDate>2001-01-01</EndDate>\r\n\t\t\r\n\t\t  <PriceSpecification>\r\n\t\t\t   <TypeCode>7PR6</TypeCode>\r\n\t\t\t   <Percent>1.00</Percent>\r\n\t\t\t   \r\n\t\t\t    <!-- Item Keys: ProductID,ProductTypeCode  -->\r\n\t\t\t   <ProductID>{{ProductID}}</ProductID>\r\n\t\t\t   <ProductTypeCode>1</ProductTypeCode>   <!-- 1 means Material , 2 Means Service Product -->\r\n\t\t\t   \r\n\t\t  </PriceSpecification>\r\n\t\t </SalesPriceList>\r\n\r\n      </glob:SalesPriceListBundleMaintainRequest_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managesalespricelistin2",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managesalespricelistin2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get  customer hierarchy specific discount",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"Get Customer hierarchy specific discount - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmupricelist/PriceListCollection?$filter=UUID eq guid'{{DiscountListUUID}}'&$expand=PriceListKeys,Items,Items/ItemKeys,Items/Scales&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmupricelist",
										"PriceListCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "UUID eq guid'{{DiscountListUUID}}'"
										},
										{
											"key": "$expand",
											"value": "PriceListKeys,Items,Items/ItemKeys,Items/Scales"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create/Update customer specific discount (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"",
											"pm.environment.set(\"DiscountListUUID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.UUID);",
											"",
											"// Validations",
											"pm.test(\"Customer specific discount \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.ID + \" created / updated \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:SalesPriceListBundleMaintainRequest_sync>\r\n \t\t<SalesPriceList ActionCode=\"04\">\r\n\t\t  <TypeCode>7PL2</TypeCode>\r\n\t\t  <ID>MD-DL-3</ID>\r\n\t\t  <Description languageCode=\"EN\">Customer specific discount</Description>\r\n\t\t  \r\n\t\t  <!-- Header Keys: AccountID -->\r\n\t\t  \r\n\t\t   <AccountID>{{AccountID}}</AccountID>\r\n\t\t  \r\n\t\t  <StartDate>2001-01-01</StartDate>\r\n\t\t  <EndDate>2001-01-01</EndDate>\r\n\t\t\r\n\t\t  <PriceSpecification>\r\n\t\t\t   <TypeCode>7PR6</TypeCode>\r\n\t\t\t   <Percent>1.00</Percent>\r\n\t\t\t   \r\n\t\t\t    <!-- Item Keys: ProductID,ProductTypeCode  -->\r\n\t\t\t   <ProductID>{{ProductID}}</ProductID>\r\n\t\t\t   <ProductTypeCode>1</ProductTypeCode>   <!-- 1 means Material , 2 Means Service Product -->\r\n\t\t\t   \r\n\t\t  </PriceSpecification>\r\n\t\t </SalesPriceList>\r\n\r\n      </glob:SalesPriceListBundleMaintainRequest_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managesalespricelistin2",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managesalespricelistin2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get customer specific discount",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"Get Customer specific discount - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmupricelist/PriceListCollection?$filter=UUID eq guid'{{DiscountListUUID}}'&$expand=PriceListKeys,Items,Items/ItemKeys,Items/Scales&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmupricelist",
										"PriceListCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "UUID eq guid'{{DiscountListUUID}}'"
										},
										{
											"key": "$expand",
											"value": "PriceListKeys,Items,Items/ItemKeys,Items/Scales"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create/Update customer specific discount product category (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"pm.environment.set(\"DiscountListUUID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.UUID);",
											"",
											"",
											"// Validations",
											"pm.test(\"Customer specific discount product category \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.ID + \" created / updated \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:SalesPriceListBundleMaintainRequest_sync>\r\n \t\t<SalesPriceList ActionCode=\"04\">\r\n\t\t  <TypeCode>7PL4</TypeCode>\r\n\t\t  <ID>MD-DL-4</ID>\r\n\t\t  <Description languageCode=\"EN\">Customer discount by product category</Description>\r\n\t\t  \r\n\t\t  <!-- Header Keys: AccountID -->\r\n\t\t  \r\n\t\t   <AccountID>{{AccountID}}</AccountID>\r\n\t\t  \r\n\t\t  <StartDate>2000-01-01</StartDate>\r\n\t\t  <EndDate>2000-01-01</EndDate>\r\n\t\t\r\n\t\t  <PriceSpecification>\r\n\t\t\t   <TypeCode>7PR6</TypeCode>\r\n\t\t\t   <Percent>1.00</Percent>\r\n\t\t\t   \r\n\t\t\t      <!-- Item Keys: ProductCategoryID  -->\r\n\t\t\t\t<ProductCategoryHierarchyID>ROOT-1</ProductCategoryHierarchyID>\r\n\t\t\t\t<ProductCategoryID>191</ProductCategoryID>\r\n\r\n\t\t\t   \r\n\t\t  </PriceSpecification>\r\n\t\t </SalesPriceList>\r\n\r\n      </glob:SalesPriceListBundleMaintainRequest_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managesalespricelistin2",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managesalespricelistin2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get customer specific discount product category",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"Get Customer specific discount product category - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmupricelist/PriceListCollection?$filter=UUID eq guid'{{DiscountListUUID}}'&$expand=PriceListKeys,Items,Items/ItemKeys,Items/Scales&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmupricelist",
										"PriceListCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "UUID eq guid'{{DiscountListUUID}}'"
										},
										{
											"key": "$expand",
											"value": "PriceListKeys,Items,Items/ItemKeys,Items/Scales"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create/Update customer hierarchy specific discount product category (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"",
											"pm.environment.set(\"DiscountListUUID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.UUID);",
											"",
											"// Validations",
											"pm.test(\"Customer hierarchy specific discount product category \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.ID + \" created / updated \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:SalesPriceListBundleMaintainRequest_sync>\r\n \t\t<SalesPriceList ActionCode=\"04\">\r\n\t\t  <TypeCode>7PL3</TypeCode>\r\n\t\t  <ID>MD-DL-5</ID>\r\n\t\t  <Description languageCode=\"EN\">Account hierarchy discount list</Description>\r\n\t\t  \r\n\t\t  <!-- Header Keys: AccountHierarchyID -->\r\n\t\t  \r\n\t\t  <AccountHierarchyID>IF01</AccountHierarchyID>\r\n\t\t  \r\n\t\t  <StartDate>2001-01-01</StartDate>\r\n\t\t  <EndDate>2001-01-01</EndDate>\r\n\t\t\r\n\t\t  <PriceSpecification>\r\n\t\t\t   <TypeCode>7PR6</TypeCode>\r\n\t\t\t   <Percent>1.00</Percent>\r\n\t\t\t   \r\n\t\t\t       <!-- Item Keys: ProductCategoryHierarchyID,ProductCategoryID  -->\r\n\t\t\t\t<ProductCategoryHierarchyID>ROOT-1</ProductCategoryHierarchyID>\r\n\t\t\t\t<ProductCategoryID>191</ProductCategoryID>\r\n\t\t\t   \r\n\t\t  </PriceSpecification>\r\n\t\t </SalesPriceList>\r\n\r\n      </glob:SalesPriceListBundleMaintainRequest_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managesalespricelistin2",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managesalespricelistin2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get customer hierarchy specific discount product category",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"Get Customer hierarchy specific discount product category - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmupricelist/PriceListCollection?$filter=UUID eq guid'{{DiscountListUUID}}'&$expand=PriceListKeys,Items,Items/ItemKeys,Items/Scales&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmupricelist",
										"PriceListCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "UUID eq guid'{{DiscountListUUID}}'"
										},
										{
											"key": "$expand",
											"value": "PriceListKeys,Items,Items/ItemKeys,Items/Scales"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Price Lists (Gross)",
					"item": [
						{
							"name": "Create/Update base price list (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"",
											"pm.environment.set(\"PriceListUUID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.UUID);",
											"",
											"",
											"// Validations",
											"pm.test(\"Gross Base Price List \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.ID + \" created / updated \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:SalesPriceListBundleMaintainRequest_sync>\r\n \t\t<SalesPriceList ActionCode=\"04\">\r\n\t\t  <TypeCode>8PL0</TypeCode>  \r\n\t\t  <ID>MD-GPL-1</ID>\r\n\t\t  <Description languageCode=\"EN\">Base gross price list</Description>\r\n\t\t  \r\n\t\t  <!-- No Header Keys -->\r\n\t\t  \r\n\t\t  <StartDate>2000-02-02</StartDate>\r\n\t\t  <EndDate>2000-02-02</EndDate>\r\n\t\t  <CurrencyCode>USD</CurrencyCode>\t\t  \r\n\t\t  <PriceSpecification>\r\n\t\t\t   <TypeCode>8PR1</TypeCode> \r\n\t\t\t   <Amount currencyCode=\"EUR\">200.00</Amount>\r\n\t\t\t   <BaseQuantity unitCode=\"EA\">1</BaseQuantity>\r\n\t\t\t   <BaseQuantityTypeCode>EA</BaseQuantityTypeCode>\r\n\t\t\t   <ProductID>{{ProductID}}</ProductID>\r\n\t\t\t   <ProductTypeCode>1</ProductTypeCode>   <!-- 1 means Material , 2 Means Service Product -->\r\n\t\t  </PriceSpecification>\r\n\t\t </SalesPriceList>\r\n\r\n      </glob:SalesPriceListBundleMaintainRequest_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managesalespricelistin2",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managesalespricelistin2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get base price list",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"Get Gross Base Price List  - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmupricelist/PriceListCollection?$filter=UUID eq guid'{{PriceListUUID}}'&$expand=PriceListKeys,Items,Items/ItemKeys,Items/Scales&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmupricelist",
										"PriceListCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "UUID eq guid'{{PriceListUUID}}'"
										},
										{
											"key": "$expand",
											"value": "PriceListKeys,Items,Items/ItemKeys,Items/Scales"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create/Update base price list product category (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"",
											"pm.environment.set(\"PriceListUUID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.UUID);",
											"",
											"",
											"// Validations",
											"pm.test(\"Gross Base price list product category \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.ID + \" created / updated \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\n    <soapenv:Header/>\n    <soapenv:Body>\n        <glob:SalesPriceListBundleMaintainRequest_sync>\n            <SalesPriceList ActionCode=\"04\">\n                <TypeCode>8PL0</TypeCode>\n                <ID>MD-GPL-2</ID>\n                <Description languageCode=\"EN\">Product category gross price list</Description>\n                <!--Header Keys: ProductCategoryID -->\n                <ProductCategoryID>{{ProductCategoryID}}</ProductCategoryID>\n                <StartDate>2000-02-02</StartDate>\n                <EndDate>2000-02-02</EndDate>\n                <CurrencyCode>USD</CurrencyCode>\n                <PriceSpecification>\n                    <TypeCode>8PR1</TypeCode>\n                    <Amount currencyCode=\"EUR\">200.00</Amount>\n                    <BaseQuantity unitCode=\"EA\">1</BaseQuantity>\n                    <BaseQuantityTypeCode>EA</BaseQuantityTypeCode>\n                    <ProductID>P100101</ProductID>\n                    <ProductTypeCode>1</ProductTypeCode>\n                    <!-- 1 means Material , 2 Means Service Product -->\n\t\t  \n                </PriceSpecification>\n            </SalesPriceList>\n        </glob:SalesPriceListBundleMaintainRequest_sync>\n    </soapenv:Body>\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managesalespricelistin2",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managesalespricelistin2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get base price list product category",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"Get Gross Base price list product category - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmupricelist/PriceListCollection?$filter=UUID eq guid'{{PriceListUUID}}'&$expand=PriceListKeys,Items,Items/ItemKeys,Items/Scales&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmupricelist",
										"PriceListCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "UUID eq guid'{{PriceListUUID}}'"
										},
										{
											"key": "$expand",
											"value": "PriceListKeys,Items,Items/ItemKeys,Items/Scales"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create/Update distribution chain price list (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"",
											"pm.environment.set(\"PriceListUUID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.UUID);",
											"",
											"",
											"// Validations",
											"pm.test(\"Gross Distribution chain price list \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.ID + \" created / updated \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\n    <soapenv:Header/>\n    <soapenv:Body>\n        <glob:SalesPriceListBundleMaintainRequest_sync>\n            <SalesPriceList ActionCode=\"04\">\n                <TypeCode>8PL0</TypeCode>\n                <ID>MD-GPL-3</ID>\n                <Description languageCode=\"EN\">Distribution chain gross price list</Description>\n                <!-- Header Keys: SalesOrgID,DistributionChannelCode -->\n                <SalesOrgID>{{SalesOrgID}}</SalesOrgID>\n                <DistributionChannelCode>{{DistributionChannel}}</DistributionChannelCode>\n                <StartDate>2000-02-02</StartDate>\n                <EndDate>2000-02-02</EndDate>\n                <CurrencyCode>USD</CurrencyCode>\n                <PriceSpecification>\n                    <TypeCode>8PR1</TypeCode>\n                    <Amount currencyCode=\"EUR\">200.00</Amount>\n                    <BaseQuantity unitCode=\"EA\">1</BaseQuantity>\n                    <BaseQuantityTypeCode>EA</BaseQuantityTypeCode>\n                    <ProductID>P100101</ProductID>\n                    <ProductTypeCode>1</ProductTypeCode>\n                </PriceSpecification>\n            </SalesPriceList>\n        </glob:SalesPriceListBundleMaintainRequest_sync>\n    </soapenv:Body>\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managesalespricelistin2",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managesalespricelistin2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get distribution chain price list",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"Get Gross Distribution chain price list  - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmupricelist/PriceListCollection?$filter=UUID eq guid'{{PriceListUUID}}'&$expand=PriceListKeys,Items,Items/ItemKeys,Items/Scales&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmupricelist",
										"PriceListCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "UUID eq guid'{{PriceListUUID}}'"
										},
										{
											"key": "$expand",
											"value": "PriceListKeys,Items,Items/ItemKeys,Items/Scales"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create/Update distribution chain price list by product category (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"pm.environment.set(\"PriceListUUID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.UUID);",
											"",
											"",
											"// Validations",
											"pm.test(\"Gross Distribution chain price list by product category \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.ID + \" created / updated \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:SalesPriceListBundleMaintainRequest_sync>\r\n \t\t<SalesPriceList ActionCode=\"04\">\r\n\t\t  <TypeCode>8PL0</TypeCode>\r\n\t\t  <ID>MD-GPL-4</ID>\r\n\t\t  <Description languageCode=\"EN\">Distribution chain gross price list 2</Description>\r\n\t\t  \r\n\t\t  <!-- Header Keys: SalesOrgID,DistributionChannelCode,ProductCategoryID -->\r\n\t\t  \r\n\t\t  <SalesOrgID>{{SalesOrgID}}</SalesOrgID>\r\n\t\t  <DistributionChannelCode>{{DistributionChannel}}</DistributionChannelCode>\r\n\t\t  <ProductCategoryID>{{ProductCategoryID}}</ProductCategoryID>\r\n\t\t  \r\n\t\t  <StartDate>2000-01-01</StartDate>\r\n\t\t  <EndDate>2000-01-01</EndDate>\r\n\t\t  <CurrencyCode>USD</CurrencyCode>\t\t  \r\n\t\t  <PriceSpecification>\r\n\t\t\t   <TypeCode>8PR1</TypeCode>  \r\n\t\t\t   <Amount currencyCode=\"EUR\">200.00</Amount>\r\n\t\t\t   <BaseQuantity unitCode=\"EA\">1</BaseQuantity>\r\n\t\t\t   <BaseQuantityTypeCode>EA</BaseQuantityTypeCode>\r\n\t\t\t   <ProductID>P100101</ProductID>\r\n\t\t\t   <ProductTypeCode>1</ProductTypeCode>   <!-- 1 means Material , 2 Means Service Product -->\r\n\t\t  </PriceSpecification>\r\n\t\t </SalesPriceList>\r\n\r\n      </glob:SalesPriceListBundleMaintainRequest_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managesalespricelistin2",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managesalespricelistin2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get distribution chain price list by product category",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"Get Gross Distribution chain price list by product category  - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmupricelist/PriceListCollection?$filter=UUID eq guid'{{PriceListUUID}}'&$expand=PriceListKeys,Items,Items/ItemKeys,Items/Scales&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmupricelist",
										"PriceListCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "UUID eq guid'{{PriceListUUID}}'"
										},
										{
											"key": "$expand",
											"value": "PriceListKeys,Items,Items/ItemKeys,Items/Scales"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create/Update customer group price list (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"pm.environment.set(\"PriceListUUID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.UUID);",
											"",
											"",
											"// Validations",
											"pm.test(\"Gross customer group price list \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.ID + \" created / updated \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:SalesPriceListBundleMaintainRequest_sync>\r\n \t\t<SalesPriceList ActionCode=\"04\">\r\n\t\t  <TypeCode>8PL0</TypeCode> \r\n\t\t  <ID>MD-GPL-5</ID>\r\n\t\t  <Description languageCode=\"EN\">Customer group gross price list</Description>\r\n\t\t  \r\n\t\t  <!-- Header Keys: SalesOrgID,DistributionChannelCode,ProductCategoryID -->\r\n\t\t  \r\n\t\t  <SalesOrgID>{{SalesOrgID}}</SalesOrgID>\r\n\t\t  <DistributionChannelCode>{{DistributionChannel}}</DistributionChannelCode>\r\n\t\t  <CustomerGroupCode>{{CustomerGroup}}</CustomerGroupCode>\r\n\t\t  \r\n\t\t  <StartDate>2000-01-01</StartDate>\r\n\t\t  <EndDate>2000-01-01</EndDate>\r\n\t\t  <CurrencyCode>USD</CurrencyCode>\t\t  \r\n\t\t  <PriceSpecification>\r\n\t\t\t   <TypeCode>8PR1</TypeCode> \r\n\t\t\t   <Amount currencyCode=\"EUR\">200.00</Amount>\r\n\t\t\t   <BaseQuantity unitCode=\"EA\">1</BaseQuantity>\r\n\t\t\t   <BaseQuantityTypeCode>EA</BaseQuantityTypeCode>\r\n\t\t\t   <ProductID>P100101</ProductID>\r\n\t\t\t   <ProductTypeCode>1</ProductTypeCode>   <!-- 1 means Material , 2 Means Service Product -->\r\n\t\t  </PriceSpecification>\r\n\t\t </SalesPriceList>\r\n\r\n      </glob:SalesPriceListBundleMaintainRequest_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managesalespricelistin2",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managesalespricelistin2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get customer group price list",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"Get Gross customer group price list - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmupricelist/PriceListCollection?$filter=UUID eq guid'{{PriceListUUID}}'&$expand=PriceListKeys,Items,Items/ItemKeys,Items/Scales&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmupricelist",
										"PriceListCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "UUID eq guid'{{PriceListUUID}}'"
										},
										{
											"key": "$expand",
											"value": "PriceListKeys,Items,Items/ItemKeys,Items/Scales"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create/Update customer specific price list (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"pm.environment.set(\"PriceListUUID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.UUID);",
											"",
											"",
											"// Validations",
											"pm.test(\"Gross Customer specific price list  \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.ID + \" created / updated \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:SalesPriceListBundleMaintainRequest_sync>\r\n \t\t<SalesPriceList ActionCode=\"04\">\r\n\t\t  <TypeCode>8PL0</TypeCode> \r\n\t\t  <ID>MD-GPL-6</ID>\r\n\t\t  <Description languageCode=\"EN\">Customer gross price list</Description>\r\n\t\t  \r\n\t\t  <!-- Header Keys: SalesOrgID,DistributionChannelCode,ProductCategoryID -->\r\n\t\t  \r\n\t\t  <AccountID>{{AccountID}}</AccountID>\r\n\t\t \r\n\t\t  <StartDate>2000-01-01</StartDate>\r\n\t\t  <EndDate>2000-01-01</EndDate>\r\n\t\t  <CurrencyCode>USD</CurrencyCode>\t\t  \r\n\t\t  <PriceSpecification>\r\n\t\t\t   <TypeCode>8PR1</TypeCode>  \r\n\t\t\t   <Amount currencyCode=\"EUR\">200.00</Amount>\r\n\t\t\t   <BaseQuantity unitCode=\"EA\">1</BaseQuantity>\r\n\t\t\t   <BaseQuantityTypeCode>EA</BaseQuantityTypeCode>\r\n\t\t\t   <ProductID>P100101</ProductID>\r\n\t\t\t   <ProductTypeCode>1</ProductTypeCode>   <!-- 1 means Material , 2 Means Service Product -->\r\n\t\t  </PriceSpecification>\r\n\t\t </SalesPriceList>\r\n\r\n      </glob:SalesPriceListBundleMaintainRequest_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managesalespricelistin2",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managesalespricelistin2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get customer specific price list",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"Get Gross Customer specific price list - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmupricelist/PriceListCollection?$filter=UUID eq guid'{{PriceListUUID}}'&$expand=PriceListKeys,Items,Items/ItemKeys,Items/Scales&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmupricelist",
										"PriceListCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "UUID eq guid'{{PriceListUUID}}'"
										},
										{
											"key": "$expand",
											"value": "PriceListKeys,Items,Items/ItemKeys,Items/Scales"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Discount Lists (Gross)",
					"item": [
						{
							"name": "Create/Update overall customer discount (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"pm.environment.set(\"DiscountListUUID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.UUID);",
											"",
											"",
											"// Validations",
											"pm.test(\"Gross Overall customer discount \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.ID + \" created / updated \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:SalesPriceListBundleMaintainRequest_sync>\r\n \t\t<SalesPriceList ActionCode=\"04\">\r\n\t\t  <TypeCode>8PL1</TypeCode>\r\n\t\t  <ID>MD-GDL-1</ID>\r\n\t\t  <Description languageCode=\"EN\">Base gross discount list</Description>\r\n\t\t  <StartDate>2000-01-01</StartDate>\r\n\t\t  <EndDate>2000-01-01</EndDate>\r\n\t\t    \r\n\t\t  <PriceSpecification>\r\n\t\t\t   <TypeCode>7PR6</TypeCode>\r\n\t\t\t   <Percent>1.00</Percent>\r\n\t\t\t   \r\n\t\t\t   <!-- Item Keys: AccountID -->\r\n\t\t\t   <AccountID>{{AccountID}}</AccountID>\r\n\t\t  </PriceSpecification>\r\n\t\t </SalesPriceList>\r\n\r\n      </glob:SalesPriceListBundleMaintainRequest_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managesalespricelistin2",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managesalespricelistin2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get overall customer discount",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"Get Gross Overall customer discount  - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmupricelist/PriceListCollection?$filter=UUID eq guid'{{DiscountListUUID}}'&$expand=PriceListKeys,Items,Items/ItemKeys,Items/Scales&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmupricelist",
										"PriceListCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "UUID eq guid'{{DiscountListUUID}}'"
										},
										{
											"key": "$expand",
											"value": "PriceListKeys,Items,Items/ItemKeys,Items/Scales"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create/Update overall customer group discount (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"pm.environment.set(\"DiscountListUUID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.UUID);",
											"",
											"// Validations",
											"pm.test(\"Gross Overall customer group discount \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.ID + \" created / updated \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:SalesPriceListBundleMaintainRequest_sync>\r\n \t\t<SalesPriceList ActionCode=\"04\">\r\n\t\t  <TypeCode>8PL1</TypeCode>\r\n\t\t  <ID>MD-GDL-2</ID>\r\n\t\t  <Description languageCode=\"EN\">Base gross discount list 2</Description>\r\n\t\t  <StartDate>2001-01-01</StartDate>\r\n\t\t  <EndDate>2001-01-01</EndDate>\r\n\t\t\r\n\t\t  <PriceSpecification>\r\n\t\t\t   <TypeCode>7PR6</TypeCode>\r\n\t\t\t   <Percent>1.00</Percent>\r\n\t\t\t   \r\n\t\t\t    <!-- Item Keys: CustomerGroupCode -->\r\n\t\t\t   <CustomerGroupCode>{{CustomerGroup}}</CustomerGroupCode>\r\n\t\t\t   \r\n\t\t  </PriceSpecification>\r\n\t\t </SalesPriceList>\r\n\r\n      </glob:SalesPriceListBundleMaintainRequest_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managesalespricelistin2",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managesalespricelistin2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get overall customer group discount",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"Get Gross Overall customer group discount   - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmupricelist/PriceListCollection?$filter=UUID eq guid'{{DiscountListUUID}}'&$expand=PriceListKeys,Items,Items/ItemKeys,Items/Scales&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmupricelist",
										"PriceListCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "UUID eq guid'{{DiscountListUUID}}'"
										},
										{
											"key": "$expand",
											"value": "PriceListKeys,Items,Items/ItemKeys,Items/Scales"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create/Update customer hierarchy specific discount (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"pm.environment.set(\"DiscountListUUID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.UUID);",
											"",
											"",
											"// Validations",
											"pm.test(\"Gross Customer hierarchy specific discount \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.ID + \" created / updated \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:SalesPriceListBundleMaintainRequest_sync>\r\n \t\t<SalesPriceList ActionCode=\"04\">\r\n\t\t  <TypeCode>8PL1</TypeCode>\r\n\t\t  <ID>MD-GDL-3</ID>\r\n\t\t  <Description languageCode=\"EN\">Accout hierarchy gross discount list</Description>\r\n\t\t  \r\n\t\t  <!-- Header Keys: AccountHierarchyID -->\r\n\t\t  \r\n\t\t  <AccountHierarchyID>IF01</AccountHierarchyID>\r\n\t\t  \r\n\t\t  <StartDate>2001-01-01</StartDate>\r\n\t\t  <EndDate>2001-01-01</EndDate>\r\n\t\t\r\n\t\t  <PriceSpecification>\r\n\t\t\t   <TypeCode>8PR6</TypeCode>\r\n\t\t\t   <Percent>1.00</Percent>\r\n\t\t\t   \r\n\t\t\t    <!-- Item Keys: ProductID,ProductTypeCode  -->\r\n\t\t\t   <ProductID>{{ProductID}}</ProductID>\r\n\t\t\t   <ProductTypeCode>1</ProductTypeCode>   <!-- 1 means Material , 2 Means Service Product -->\r\n\t\t\t   \r\n\t\t  </PriceSpecification>\r\n\t\t </SalesPriceList>\r\n\r\n      </glob:SalesPriceListBundleMaintainRequest_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managesalespricelistin2",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managesalespricelistin2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get customer hierarchy specific discount",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"Get Gross Customer hierarchy specific discount  - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmupricelist/PriceListCollection?$filter=UUID eq guid'{{DiscountListUUID}}'&$expand=PriceListKeys,Items,Items/ItemKeys,Items/Scales&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmupricelist",
										"PriceListCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "UUID eq guid'{{DiscountListUUID}}'"
										},
										{
											"key": "$expand",
											"value": "PriceListKeys,Items,Items/ItemKeys,Items/Scales"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create/Update customer specific discount (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"pm.environment.set(\"DiscountListUUID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.UUID);",
											"",
											"// Validations",
											"pm.test(\"Gross customer specific discount \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.ID + \" created / updated \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:SalesPriceListBundleMaintainRequest_sync>\r\n \t\t<SalesPriceList ActionCode=\"04\">\r\n\t\t  <TypeCode>8PL2</TypeCode>\r\n\t\t  <ID>MD-GDL-4</ID>\r\n\t\t  <Description languageCode=\"EN\">Accout gross discount list</Description>\r\n\t\t  \r\n\t\t  <!-- Header Keys: AccountID -->\r\n\t\t  \r\n\t\t   <AccountID>{{AccountID}}</AccountID>\r\n\t\t  \r\n\t\t  <StartDate>2001-01-01</StartDate>\r\n\t\t  <EndDate>2001-01-01</EndDate>\r\n\t\t\r\n\t\t  <PriceSpecification>\r\n\t\t\t   <TypeCode>8PR6</TypeCode>\r\n\t\t\t   <Percent>1.00</Percent>\r\n\t\t\t   \r\n\t\t\t    <!-- Item Keys: ProductID,ProductTypeCode  -->\r\n\t\t\t   <ProductID>{{ProductID}}</ProductID>\r\n\t\t\t   <ProductTypeCode>1</ProductTypeCode>   <!-- 1 means Material , 2 Means Service Product -->\r\n\t\t\t   \r\n\t\t  </PriceSpecification>\r\n\t\t </SalesPriceList>\r\n\r\n      </glob:SalesPriceListBundleMaintainRequest_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managesalespricelistin2",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managesalespricelistin2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get customer specific discount",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"Get Gross customer specific discount - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmupricelist/PriceListCollection?$filter=UUID eq guid'{{DiscountListUUID}}'&$expand=PriceListKeys,Items,Items/ItemKeys,Items/Scales&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmupricelist",
										"PriceListCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "UUID eq guid'{{DiscountListUUID}}'"
										},
										{
											"key": "$expand",
											"value": "PriceListKeys,Items,Items/ItemKeys,Items/Scales"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create/Update customer specific discount product category (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"pm.environment.set(\"DiscountListUUID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.UUID);",
											"",
											"",
											"// Validations",
											"pm.test(\"Gross Customer specific discount product category \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.ID + \" created / updated \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:SalesPriceListBundleMaintainRequest_sync>\r\n \t\t<SalesPriceList ActionCode=\"04\">\r\n\t\t  <TypeCode>8PL4</TypeCode>\r\n\t\t  <ID>MD-GDL-5</ID>\r\n\t\t  <Description languageCode=\"EN\">Accout gross discount list 2</Description>\r\n\t\t  \r\n\t\t  <!-- Header Keys: AccountID -->\r\n\t\t  \r\n\t\t   <AccountID>{{AccountID}}</AccountID>\r\n\t\t  \r\n\t\t  <StartDate>2001-01-01</StartDate>\r\n\t\t  <EndDate>2001-01-01</EndDate>\r\n\t\t\r\n\t\t  <PriceSpecification>\r\n\t\t\t   <TypeCode>8PR6</TypeCode>\r\n\t\t\t   <Percent>1.00</Percent>\r\n\t\t\t   \r\n\t\t\t    <!-- Item Keys: ProductID,ProductTypeCode  -->\r\n\t\t\t   <ProductID>{{ProductID}}</ProductID>\r\n\t\t\t   <ProductTypeCode>1</ProductTypeCode>   <!-- 1 means Material , 2 Means Service Product -->\r\n\t\t\t   \r\n\t\t  </PriceSpecification>\r\n\t\t </SalesPriceList>\r\n\r\n      </glob:SalesPriceListBundleMaintainRequest_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managesalespricelistin2",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managesalespricelistin2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get customer specific discount product category",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"Get Gross Customer specific discount product category - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmupricelist/PriceListCollection?$filter=UUID eq guid'{{DiscountListUUID}}'&$expand=PriceListKeys,Items,Items/ItemKeys,Items/Scales&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmupricelist",
										"PriceListCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "UUID eq guid'{{DiscountListUUID}}'"
										},
										{
											"key": "$expand",
											"value": "PriceListKeys,Items,Items/ItemKeys,Items/Scales"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create/Update customer hierarchy specific discount product category (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"",
											"pm.environment.set(\"DiscountListUUID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.UUID);",
											"",
											"// Validations",
											"pm.test(\"Gross Customer hierarchy specific discount product category \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.ID + \" created / updated \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:SalesPriceListBundleMaintainRequest_sync>\r\n \t\t<SalesPriceList ActionCode=\"04\">\r\n\t\t  <TypeCode>8PL3</TypeCode>\r\n\t\t  <ID>MD-GDL-6</ID>\r\n\t\t  <Description languageCode=\"EN\">Accout hierarchy gross discount list 3</Description>\r\n\t\t  \r\n\t\t  <!-- Header Keys: AccountHierarchyID -->\r\n\t\t  \r\n\t\t  <AccountHierarchyID>IF01</AccountHierarchyID>\r\n\t\t  \r\n\t\t  <StartDate>2001-01-01</StartDate>\r\n\t\t  <EndDate>2001-01-01</EndDate>\r\n\t\t\r\n\t\t  <PriceSpecification>\r\n\t\t\t   <TypeCode>8PR6</TypeCode>\r\n\t\t\t   <Percent>1.00</Percent>\r\n\t\t\t   \r\n\t\t\t       <!-- Item Keys: ProductCategoryHierarchyID,ProductCategoryID  -->\r\n\t\t\t\t<ProductCategoryHierarchyID>ROOT-1</ProductCategoryHierarchyID>\r\n\t\t\t\t<ProductCategoryID>191</ProductCategoryID>\r\n\t\t\t   \r\n\t\t  </PriceSpecification>\r\n\t\t </SalesPriceList>\r\n\r\n      </glob:SalesPriceListBundleMaintainRequest_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managesalespricelistin2",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managesalespricelistin2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get customer hierarchy specific discount product category",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"Get Gross Customer hierarchy specific discount product category - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmupricelist/PriceListCollection?$filter=UUID eq guid'{{DiscountListUUID}}'&$expand=PriceListKeys,Items,Items/ItemKeys,Items/Scales&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmupricelist",
										"PriceListCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "UUID eq guid'{{DiscountListUUID}}'"
										},
										{
											"key": "$expand",
											"value": "PriceListKeys,Items,Items/ItemKeys,Items/Scales"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Business Partner (read)",
			"item": [
				{
					"name": "Query business partner by role",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"pm.test(\"Cross site request forgery token: received\", function () { pm.response.to.have.status(200); pm.response.to.have.header(\"x-csrf-token\") });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khbusinesspartner/QueryByRole?NumberOfRows='20'&RoleCode='CRM000'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khbusinesspartner",
								"QueryByRole"
							],
							"query": [
								{
									"key": "NumberOfRows",
									"value": "'20'"
								},
								{
									"key": "StartRow",
									"value": "'5'",
									"disabled": true
								},
								{
									"key": "RoleCode",
									"value": "'CRM000'",
									"description": "BBP000 - Supplier, CRM000 - Customer, BUP001 - Contact Person, ..."
								},
								{
									"key": "InternalID",
									"value": "'{{BP-CustomerID}}'",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get customer (organization)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(jsonResponse.d.__count + \" records returned\", function () { pm.response.to.have.status(200) });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khbusinesspartner/BusinessPartnerCollection?$format=json&$expand=Role,Identification,CurrentDefaultAddressInformation/FormattedAddress,CurrentDefaultAddressInformation/PostalAddress,CurrentDefaultAddressInformation/ConventionalPhone,CurrentDefaultAddressInformation/MobilePhone,CurrentDefaultAddressInformation/Facsimile,CurrentDefaultAddressInformation/EMail,CurrentDefaultAddressInformation/WebSite&$filter=InternalID eq '{{BP-CustomerID}}'&$inlinecount=allpages&$top=10",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khbusinesspartner",
								"BusinessPartnerCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "Role,Identification,CurrentDefaultAddressInformation/FormattedAddress,CurrentDefaultAddressInformation/PostalAddress,CurrentDefaultAddressInformation/ConventionalPhone,CurrentDefaultAddressInformation/MobilePhone,CurrentDefaultAddressInformation/Facsimile,CurrentDefaultAddressInformation/EMail,CurrentDefaultAddressInformation/WebSite"
								},
								{
									"key": "$filter",
									"value": "InternalID eq '{{BP-CustomerID}}'"
								},
								{
									"key": "$inlinecount",
									"value": "allpages"
								},
								{
									"key": "$top",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get employee",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(jsonResponse.d.__count + \" records returned\", function () { pm.response.to.have.status(200) });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khbusinesspartner/BusinessPartnerCollection?$format=json&$expand=Role,Identification,CurrentDefaultAddressInformation/FormattedAddress,CurrentDefaultAddressInformation/PostalAddress,CurrentDefaultAddressInformation/ConventionalPhone,CurrentDefaultAddressInformation/MobilePhone,CurrentDefaultAddressInformation/Facsimile,CurrentDefaultAddressInformation/EMail,CurrentDefaultAddressInformation/WebSite,Note,AttachmentFolder&$filter=InternalID eq '{{BP-EmployeeInternalID}}'&$inlinecount=allpages&$top=10",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khbusinesspartner",
								"BusinessPartnerCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "Role,Identification,CurrentDefaultAddressInformation/FormattedAddress,CurrentDefaultAddressInformation/PostalAddress,CurrentDefaultAddressInformation/ConventionalPhone,CurrentDefaultAddressInformation/MobilePhone,CurrentDefaultAddressInformation/Facsimile,CurrentDefaultAddressInformation/EMail,CurrentDefaultAddressInformation/WebSite,Note,AttachmentFolder"
								},
								{
									"key": "$filter",
									"value": "InternalID eq '{{BP-EmployeeInternalID}}'"
								},
								{
									"key": "$inlinecount",
									"value": "allpages"
								},
								{
									"key": "$top",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get contact person",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(jsonResponse.d.__count + \" records returned\", function () { pm.response.to.have.status(200) });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khbusinesspartner/BusinessPartnerCollection?$format=json&$expand=Role,Identification&$filter=InternalID eq '{{BP-ContactPersonID}}'&$inlinecount=allpages&$top=10",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khbusinesspartner",
								"BusinessPartnerCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "Role,Identification"
								},
								{
									"key": "$filter",
									"value": "InternalID eq '{{BP-ContactPersonID}}'"
								},
								{
									"key": "$inlinecount",
									"value": "allpages"
								},
								{
									"key": "$top",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get contact person relationships",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(jsonResponse.d.__count + \" records returned\", function () { pm.response.to.have.status(200) });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khbusinesspartnerrelationship/BusinessPartnerRelationshipCollection?$format=json&$filter=CategoryCode eq 'BUR001' and SecondBusinessPartnerInternalID eq '{{BP-ContactPersonID}}'&$inlinecount=allpages&$top=10&$expand=FirstBusinessPartnerIdentification,SecondBusinessPartnerIdentification,ContactPerson/ContactPersonBusinessAddressInformation/ContactPersonOrganisationFormattedAddress,ContactPerson/ContactPersonBusinessAddressInformation/ContactPersonBusinessAddress,ContactPerson/ContactPersonBusinessAddressInformation/ContactPersonBusinessCommunicationPreference,ContactPerson/ContactPersonBusinessAddressInformation/ContactPersonBusinessPhone,ContactPerson/ContactPersonBusinessAddressInformation/ContactPersonBusinessMobilePhone,ContactPerson/ContactPersonBusinessAddressInformation/ContactPersonBusinessEMail",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khbusinesspartnerrelationship",
								"BusinessPartnerRelationshipCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$filter",
									"value": "CategoryCode eq 'BUR001' and SecondBusinessPartnerInternalID eq '{{BP-ContactPersonID}}'",
									"description": "CategoryCode eq 'BUR001' and FirstBusinessPartnerInternalID eq '{{BP-CustomerID}}'"
								},
								{
									"key": "$inlinecount",
									"value": "allpages"
								},
								{
									"key": "$top",
									"value": "10"
								},
								{
									"key": "$expand",
									"value": "FirstBusinessPartnerIdentification,SecondBusinessPartnerIdentification,ContactPerson/ContactPersonBusinessAddressInformation/ContactPersonOrganisationFormattedAddress,ContactPerson/ContactPersonBusinessAddressInformation/ContactPersonBusinessAddress,ContactPerson/ContactPersonBusinessAddressInformation/ContactPersonBusinessCommunicationPreference,ContactPerson/ContactPersonBusinessAddressInformation/ContactPersonBusinessPhone,ContactPerson/ContactPersonBusinessAddressInformation/ContactPersonBusinessMobilePhone,ContactPerson/ContactPersonBusinessAddressInformation/ContactPersonBusinessEMail"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Business Partner (write)",
			"item": [
				{
					"name": "Get xsrf-token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"pm.test(\"Cross-site request forgery token received\", function () { pm.response.to.have.header(\"x-csrf-token\") });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khbusinesspartner/",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khbusinesspartner",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create business partner (organisation)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Set Business partner ID of pattern <Prefix>-<UTC datetime>",
									"//let todayDateTime = (new Date()).toISOString().substr(0,19);",
									"//todayDateTime = todayDateTime.replace(\"-\",\"\").replace(\"-\",\"\").replace(\"T\",\"\").replace(\":\",\"\").replace(\":\",\"\");",
									"//var generatedID = pm.environment.get(\"C-Prefix\") + todayDateTime;",
									"//pm.environment.set(\"B-BusinessPartnerID\", generatedID);",
									"",
									"// Use internal numbering  => initialize environment variable B-BusinessPartnerID",
									"pm.environment.set(\"B-BusinessPartnerID\", \"\");",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"B-BusinessPartnerID\", jsonResponse.d.results.InternalID);",
									"",
									"// Validations",
									"pm.test(\"Business partner \" + jsonResponse.d.results.InternalID + \" created\", function () { pm.response.to.have.status(201) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"InternalID\": \"\",\n\t\"CategoryCode\": \"2\",\n\t\"CompanyLegalFormCode\": \"01\",\n    \"OrganisationFirstLineName\": \"OData Hands-on Bupa Corp\",\n    \"OrganisationSecondLineName\": \"\",\n\t\"CurrentDefaultAddressInformation\": \n\t\t{\n    \t\t\"ConventionalPhone\": \n    \t\t\t{\n            \t\t\"FormattedNumberDescription\": \"+1 (716) 482-4863\"\n\t\t\t\t},\n\t\t\t\"MobilePhone\": \n\t\t\t\t{\n            \t\t\"FormattedNumberDescription\": \"+1 (716) 482-4863\"\n                },\n\t\t\t\"Facsimile\": \n\t\t\t\t{\n                \t\"FormattedNumberDescription\": \"+1 (716) 482-4867\"\n\t\t\t\t},\n\t\t\t\"EMail\": \n\t\t\t\t{\n                \t\"URI\": \"bupaOHBC@bydmail.com\"\n\t\t\t\t},\n\t\t\t\"WebSite\": \n\t\t\t\t{\n                \t\"URI\": \"https://www.sap.com/community/topics/business-bydesign.html\"\n                },\n\t\t\t\"PostalAddress\": \n\t\t\t\t{\n                \t\"CountryCode\": \"US\",\n                    \"CareOfName\": \"\",\n                    \"StreetPostalCode\": \"14204\",\n                    \"StreetPrefixName\": \"\",\n                    \"StreetName\": \"Seneca Street\",\n                    \"StreetSuffixName\": \"\",\n                    \"HouseID\": \"145\",\n                    \"CityName\": \"Buffalo\",\n                    \"DifferentCityName\": \"\",\n                    \"RegionCode\": \"NY\",\n                    \"CountyName\": \"\",\n                    \"DistrictName\": \"\",\n                    \"TaxJurisdictionCode\": \"NY\",\n                    \"CompanyPostalCode\": \"\",\n                    \"POBoxID\": \"\",\n                    \"POBoxPostalCode\": \"\",\n                    \"POBoxDeviatingCountryCode\": \"\",\n                    \"POBoxDeviatingRegionCode\": \"\",\n                    \"POBoxDeviatingCityName\": \"\"\n\t\t\t\t}\n\t\t}\n}"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khbusinesspartner/BusinessPartnerCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khbusinesspartner",
								"BusinessPartnerCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get business partner",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"pm.test(\"Cross site request forgery token: received\", function () { pm.response.to.have.status(200); pm.response.to.have.header(\"x-csrf-token\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khbusinesspartner/BusinessPartnerCollection?$format=json&$expand=Role,Identification,Note,AttachmentFolder,CurrentDefaultAddressInformation/FormattedAddress,CurrentDefaultAddressInformation/PostalAddress,CurrentDefaultAddressInformation/ConventionalPhone,CurrentDefaultAddressInformation/MobilePhone,CurrentDefaultAddressInformation/Facsimile,CurrentDefaultAddressInformation/EMail,CurrentDefaultAddressInformation/WebSite&$filter=InternalID eq '{{B-BusinessPartnerID}}'&$inlinecount=allpages&$top=10",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khbusinesspartner",
								"BusinessPartnerCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "Role,Identification,Note,AttachmentFolder,CurrentDefaultAddressInformation/FormattedAddress,CurrentDefaultAddressInformation/PostalAddress,CurrentDefaultAddressInformation/ConventionalPhone,CurrentDefaultAddressInformation/MobilePhone,CurrentDefaultAddressInformation/Facsimile,CurrentDefaultAddressInformation/EMail,CurrentDefaultAddressInformation/WebSite"
								},
								{
									"key": "$filter",
									"value": "InternalID eq '{{B-BusinessPartnerID}}'"
								},
								{
									"key": "$inlinecount",
									"value": "allpages"
								},
								{
									"key": "$top",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create business partner (person)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Set Business partner ID of pattern <Prefix>-<UTC datetime>",
									"//let todayDateTime = (new Date()).toISOString().substr(0,19);",
									"//todayDateTime = todayDateTime.replace(\"-\",\"\").replace(\"-\",\"\").replace(\"T\",\"\").replace(\":\",\"\").replace(\":\",\"\");",
									"//var generatedID = pm.environment.get(\"C-Prefix\") + todayDateTime;",
									"//pm.environment.set(\"B-BusinessPartnerID\", generatedID);",
									"",
									"// Use internal numbering  => initialize environment variable B-BusinessPartnerID",
									"pm.environment.set(\"B-BusinessPartnerID\", \"\");",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"B-BusinessPartnerID\", jsonResponse.d.results.InternalID);",
									"",
									"// Validations",
									"pm.test(\"Business partner \" + jsonResponse.d.results.InternalID + \" (\" + jsonResponse.d.results.BusinessPartnerFormattedName + \") created with role 'Contact Person'\", function () { pm.response.to.have.status(201) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"InternalID\": \"\",\n    \"CategoryCode\": \"1\",\n    \"PersonFormOfAddressCode\": \"0002\",\n    \"PersonAcademicTitleCode\": \"\",\n    \"PersonGivenName\": \"Finn\",\n    \"PersonMiddleName\": \"\",\n    \"PersonFamilyName\": \"Fjällström\",\n    \"PersonGenderCode\": \"1\",\n\t\"PersonOccupationCode\": \"0039\",\n    \"PersonBirthDate\": null,\n    \"PersonMaritalStatusCode\": \"2\",\n    \"Role\": [\n        {\n            \"RoleCode\": \"BUP001\"\n        }\n    ],\n\t\"CurrentDefaultAddressInformation\": \n\t\t{\n    \t\t\"ConventionalPhone\": \n    \t\t\t{\n            \t\t\"FormattedNumberDescription\": \"+1 (716) 482-4863\"\n\t\t\t\t},\n\t\t\t\"MobilePhone\": \n\t\t\t\t{\n            \t\t\"FormattedNumberDescription\": \"+1 (716) 482-4863\"\n                },\n\t\t\t\"Facsimile\": \n\t\t\t\t{\n                \t\"FormattedNumberDescription\": \"+1 (716) 482-4867\"\n\t\t\t\t},\n\t\t\t\"EMail\": \n\t\t\t\t{\n                \t\"URI\": \"finn.fjaellstroem@bydmail.com\"\n\t\t\t\t},\n\t\t\t\"WebSite\": \n\t\t\t\t{\n                \t\"URI\": \"https://www.sap.com/community/topics/business-bydesign.html\"\n                },\n\t\t\t\"PostalAddress\": \n\t\t\t\t{\n                \t\"CountryCode\": \"US\",\n                    \"CareOfName\": \"\",\n                    \"StreetPostalCode\": \"14204\",\n                    \"StreetPrefixName\": \"\",\n                    \"StreetName\": \"Seneca Street\",\n                    \"StreetSuffixName\": \"\",\n                    \"HouseID\": \"145\",\n                    \"CityName\": \"Buffalo\",\n                    \"DifferentCityName\": \"\",\n                    \"RegionCode\": \"NY\",\n                    \"CountyName\": \"\",\n                    \"DistrictName\": \"\",\n                    \"TaxJurisdictionCode\": \"NY\",\n                    \"CompanyPostalCode\": \"\",\n                    \"POBoxID\": \"\",\n                    \"POBoxPostalCode\": \"\",\n                    \"POBoxDeviatingCountryCode\": \"\",\n                    \"POBoxDeviatingRegionCode\": \"\",\n                    \"POBoxDeviatingCityName\": \"\"\n\t\t\t\t}\n\t\t}\n}"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khbusinesspartner/BusinessPartnerCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khbusinesspartner",
								"BusinessPartnerCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get business partner",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"pm.test(\"Cross site request forgery token: received\", function () { pm.response.to.have.status(200); pm.response.to.have.header(\"x-csrf-token\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khbusinesspartner/BusinessPartnerCollection?$format=json&$expand=Role,Identification,Note,AttachmentFolder,CurrentDefaultAddressInformation/FormattedAddress,CurrentDefaultAddressInformation/PostalAddress,CurrentDefaultAddressInformation/ConventionalPhone,CurrentDefaultAddressInformation/MobilePhone,CurrentDefaultAddressInformation/Facsimile,CurrentDefaultAddressInformation/EMail,CurrentDefaultAddressInformation/WebSite&$filter=InternalID eq '{{B-BusinessPartnerID}}'&$inlinecount=allpages&$top=10",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khbusinesspartner",
								"BusinessPartnerCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "Role,Identification,Note,AttachmentFolder,CurrentDefaultAddressInformation/FormattedAddress,CurrentDefaultAddressInformation/PostalAddress,CurrentDefaultAddressInformation/ConventionalPhone,CurrentDefaultAddressInformation/MobilePhone,CurrentDefaultAddressInformation/Facsimile,CurrentDefaultAddressInformation/EMail,CurrentDefaultAddressInformation/WebSite"
								},
								{
									"key": "$filter",
									"value": "InternalID eq '{{B-BusinessPartnerID}}'"
								},
								{
									"key": "$inlinecount",
									"value": "allpages"
								},
								{
									"key": "$top",
									"value": "10"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Customer (read)",
			"item": [
				{
					"name": "Get customer metadata",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"pm.test(\"Customer metadata retrieved\", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Request forgery token received\", function () { pm.response.to.have.header(\"x-csrf-token\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcustomer/$metadata",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcustomer",
								"$metadata"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get customer general data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"pm.environment.set(\"BP-CustomerUUID\", jsonResponse.d.results[0].UUID);",
									"pm.environment.set(\"BP-CustomerObjectID\", jsonResponse.d.results[0].ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Business partner \" + jsonResponse.d.results[0].InternalID + \" received\", function () { pm.response.to.have.status(200); pm.response.to.have.header(\"x-csrf-token\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcustomer/CustomerCollection?$format=json&$expand=Role,Identification,Note&$filter=InternalID eq '{{BP-CustomerID}}'&$inlinecount=allpages&$top=10",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcustomer",
								"CustomerCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "Role,Identification,Note"
								},
								{
									"key": "$filter",
									"value": "InternalID eq '{{BP-CustomerID}}'"
								},
								{
									"key": "$inlinecount",
									"value": "allpages"
								},
								{
									"key": "$top",
									"value": "10"
								},
								{
									"key": "$select",
									"value": "ObjectID,InternalID,BusinessPartnerFormattedName,AddressInformation",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get customer address information",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"pm.environment.set(\"BP-CustomerUUID\", jsonResponse.d.results[0].UUID);",
									"pm.environment.set(\"BP-CustomerObjectID\", jsonResponse.d.results[0].ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Business partner \" + jsonResponse.d.results[0].InternalID + \" received\", function () { pm.response.to.have.status(200); pm.response.to.have.header(\"x-csrf-token\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcustomer/CustomerCollection?$format=json&$expand=Role,Identification,AddressInformation/AddressUsage,AddressInformation/FormattedAddress,AddressInformation/PostalAddress,AddressInformation/ConventionalPhone,AddressInformation/MobilePhone,AddressInformation/Facsimile,AddressInformation/EMail,AddressInformation/WebSite,AddressInformation/CommunicationPreference&$filter=InternalID eq '{{BP-CustomerID}}'&$inlinecount=allpages&$top=10&$select=ObjectID,UUID,InternalID,BusinessPartnerFormattedName,AddressInformation",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcustomer",
								"CustomerCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "Role,Identification,AddressInformation/AddressUsage,AddressInformation/FormattedAddress,AddressInformation/PostalAddress,AddressInformation/ConventionalPhone,AddressInformation/MobilePhone,AddressInformation/Facsimile,AddressInformation/EMail,AddressInformation/WebSite,AddressInformation/CommunicationPreference"
								},
								{
									"key": "$filter",
									"value": "InternalID eq '{{BP-CustomerID}}'"
								},
								{
									"key": "$inlinecount",
									"value": "allpages"
								},
								{
									"key": "$top",
									"value": "10"
								},
								{
									"key": "$select",
									"value": "ObjectID,UUID,InternalID,BusinessPartnerFormattedName,AddressInformation"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get customer tax data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"pm.environment.set(\"BP-CustomerUUID\", jsonResponse.d.results[0].UUID);",
									"pm.environment.set(\"BP-CustomerObjectID\", jsonResponse.d.results[0].ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Business partner \" + jsonResponse.d.results[0].InternalID + \" received\", function () { pm.response.to.have.status(200); pm.response.to.have.header(\"x-csrf-token\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcustomer/CustomerCollection?$format=json&$expand=TaxNumber,TaxExemption&$filter=InternalID eq '{{BP-CustomerID}}'&$inlinecount=allpages&$top=10&$select=ObjectID,UUID,InternalID,BusinessPartnerFormattedName,TaxNumber,TaxExemption",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcustomer",
								"CustomerCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "TaxNumber,TaxExemption"
								},
								{
									"key": "$filter",
									"value": "InternalID eq '{{BP-CustomerID}}'"
								},
								{
									"key": "$inlinecount",
									"value": "allpages"
								},
								{
									"key": "$top",
									"value": "10"
								},
								{
									"key": "$select",
									"value": "ObjectID,UUID,InternalID,BusinessPartnerFormattedName,TaxNumber,TaxExemption"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get customer bank data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"pm.environment.set(\"BP-CustomerUUID\", jsonResponse.d.results[0].UUID);",
									"pm.environment.set(\"BP-CustomerObjectID\", jsonResponse.d.results[0].ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Business partner \" + jsonResponse.d.results[0].InternalID + \" received\", function () { pm.response.to.have.status(200); pm.response.to.have.header(\"x-csrf-token\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcustomer/CustomerCollection?$format=json&$expand=BankDetails/NationalBankIdentification&$filter=InternalID eq '{{BP-CustomerID}}'&$inlinecount=allpages&$top=10&$select=ObjectID,UUID,InternalID,BusinessPartnerFormattedName,BankDetails",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcustomer",
								"CustomerCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "BankDetails/NationalBankIdentification"
								},
								{
									"key": "$filter",
									"value": "InternalID eq '{{BP-CustomerID}}'"
								},
								{
									"key": "$inlinecount",
									"value": "allpages"
								},
								{
									"key": "$top",
									"value": "10"
								},
								{
									"key": "$select",
									"value": "ObjectID,UUID,InternalID,BusinessPartnerFormattedName,BankDetails"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get customer responsible employees",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"pm.environment.set(\"BP-CustomerUUID\", jsonResponse.d.results[0].UUID);",
									"pm.environment.set(\"BP-CustomerObjectID\", jsonResponse.d.results[0].ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Business partner \" + jsonResponse.d.results[0].InternalID + \" received\", function () { pm.response.to.have.status(200); pm.response.to.have.header(\"x-csrf-token\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcustomer/CustomerCollection?$format=json&$expand=EmployeeResponsible&$filter=InternalID eq '{{BP-CustomerID}}'&$inlinecount=allpages&$top=10&$select=ObjectID,UUID,InternalID,BusinessPartnerFormattedName,EmployeeResponsible",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcustomer",
								"CustomerCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "EmployeeResponsible"
								},
								{
									"key": "$filter",
									"value": "InternalID eq '{{BP-CustomerID}}'"
								},
								{
									"key": "$inlinecount",
									"value": "allpages"
								},
								{
									"key": "$top",
									"value": "10"
								},
								{
									"key": "$select",
									"value": "ObjectID,UUID,InternalID,BusinessPartnerFormattedName,EmployeeResponsible"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get customer sales data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"pm.test(\"Cross site request forgery token: received\", function () { pm.response.to.have.status(200); pm.response.to.have.header(\"x-csrf-token\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khsalesarrangement/SalesArrangementCollection?$format=json&$expand=SalesOrganisationNameByValidity&$filter=CustomerUUID eq guid'{{BP-CustomerUUID}}'&$inlinecount=allpages&$top=100",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khsalesarrangement",
								"SalesArrangementCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "SalesOrganisationNameByValidity"
								},
								{
									"key": "$filter",
									"value": "CustomerUUID eq guid'{{BP-CustomerUUID}}'"
								},
								{
									"key": "$inlinecount",
									"value": "allpages"
								},
								{
									"key": "$top",
									"value": "100"
								},
								{
									"key": "$select",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get cross-account sales data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"pm.test(\"Cross site request forgery token: received\", function () { pm.response.to.have.status(200); pm.response.to.have.header(\"x-csrf-token\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khsalesarrangement/SalesArrangementCollection?$format=json&$expand=SalesOrganisationNameByValidity&$filter=CustomerUUID eq null&$inlinecount=allpages&$top=100",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khsalesarrangement",
								"SalesArrangementCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "SalesOrganisationNameByValidity"
								},
								{
									"key": "$filter",
									"value": "CustomerUUID eq null",
									"description": "CustomerUUID eq guid'00000000-0000-0000-0000-000000000000'"
								},
								{
									"key": "$inlinecount",
									"value": "allpages"
								},
								{
									"key": "$top",
									"value": "100"
								},
								{
									"key": "$select",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get customer relationships and contact persons",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"pm.test(\"Cross site request forgery token: received\", function () { pm.response.to.have.status(200); pm.response.to.have.header(\"x-csrf-token\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khbusinesspartnerrelationship/BusinessPartnerRelationshipCollection?$format=json&$expand=FirstBusinessPartnerIdentification,SecondBusinessPartnerIdentification,ContactPerson/ContactPersonBusinessAddressInformation/ContactPersonOrganisationFormattedAddress,ContactPerson/ContactPersonBusinessAddressInformation/ContactPersonBusinessAddress,ContactPerson/ContactPersonBusinessAddressInformation/ContactPersonBusinessCommunicationPreference,ContactPerson/ContactPersonBusinessAddressInformation/ContactPersonBusinessPhone,ContactPerson/ContactPersonBusinessAddressInformation/ContactPersonBusinessMobilePhone,ContactPerson/ContactPersonBusinessAddressInformation/ContactPersonBusinessEMail&$filter=FirstBusinessPartnerInternalID eq '{{BP-CustomerID}}'&$inlinecount=allpages&$top=20",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khbusinesspartnerrelationship",
								"BusinessPartnerRelationshipCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "FirstBusinessPartnerIdentification,SecondBusinessPartnerIdentification,ContactPerson/ContactPersonBusinessAddressInformation/ContactPersonOrganisationFormattedAddress,ContactPerson/ContactPersonBusinessAddressInformation/ContactPersonBusinessAddress,ContactPerson/ContactPersonBusinessAddressInformation/ContactPersonBusinessCommunicationPreference,ContactPerson/ContactPersonBusinessAddressInformation/ContactPersonBusinessPhone,ContactPerson/ContactPersonBusinessAddressInformation/ContactPersonBusinessMobilePhone,ContactPerson/ContactPersonBusinessAddressInformation/ContactPersonBusinessEMail"
								},
								{
									"key": "$filter",
									"value": "FirstBusinessPartnerInternalID eq '{{BP-CustomerID}}'"
								},
								{
									"key": "$inlinecount",
									"value": "allpages"
								},
								{
									"key": "$top",
									"value": "20"
								},
								{
									"key": "$select",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Customer (write)",
			"item": [
				{
					"name": "Get metadata and xsrf-token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"pm.test(\"Cross-site request forgery token received\", function () { pm.response.to.have.header(\"x-csrf-token\") });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcustomer/$metadata?sap-language=en&sap-label=true",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcustomer",
								"$metadata"
							],
							"query": [
								{
									"key": "sap-language",
									"value": "en"
								},
								{
									"key": "sap-label",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get employee UUID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"BP-EmployeeUUID\", jsonResponse.d.results[0].UUID);",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"pm.test(\"Employee UUID received\", function () { pm.response.to.have.status(200); pm.response.to.have.header(\"x-csrf-token\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khemployee/EmployeeCollection?$format=json&$filter=EmployeeID eq '{{BP-EmployeeID}}'&$inlinecount=allpages&$top=10&$select=ObjectID,UUID,InternalID,EmployeeID,FormattedName",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khemployee",
								"EmployeeCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "",
									"description": "AttachmentFolder contains the employee image",
									"disabled": true
								},
								{
									"key": "$filter",
									"value": "EmployeeID eq '{{BP-EmployeeID}}'"
								},
								{
									"key": "$inlinecount",
									"value": "allpages"
								},
								{
									"key": "$top",
									"value": "10"
								},
								{
									"key": "$select",
									"value": "ObjectID,UUID,InternalID,EmployeeID,FormattedName"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create customer (corporate account)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Set Business partner ID of pattern <Prefix>-<UTC datetime>",
									"//let todayDateTime = (new Date()).toISOString().substr(0,19);",
									"//todayDateTime = todayDateTime.replace(\"-\",\"\").replace(\"-\",\"\").replace(\"T\",\"\").replace(\":\",\"\").replace(\":\",\"\");",
									"//var generatedID = pm.environment.get(\"C-Prefix\") + todayDateTime;",
									"//pm.environment.set(\"C-CustomerID\", generatedID);",
									"",
									"// Use internal numbering  => initialize environment variable C-CustomerID",
									"pm.environment.set(\"C-CustomerID\", \"\");",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"C-CustomerID\", jsonResponse.d.results.InternalID);",
									"pm.environment.set(\"C-CustomerUUID\", jsonResponse.d.results.UUID);",
									"pm.environment.set(\"C-CustomerObjectID\", jsonResponse.d.results.ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Customer \" + jsonResponse.d.results.InternalID + \" created\", function () { pm.response.to.have.status(201) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"InternalID\": \"{{C-CustomerID}}\",\n    \"CategoryCode\": \"2\",\n    \"LifeCycleStatusCode\": \"2\",\n    \"ABCClassificationCode\": \"A\",\n    \"IndustrialSectorCode\": \"51\",\n    \"NielsenID\": \"01\",\n    \"OrderBlockingReasonCode\": \"\",\n    \"FulfilmentBlockingReasonCode\": \"\",\n    \"InvoicingBlockingReasonCode\": \"\",\n    \"ContactAllowedCode\": \"1\",\n    \"LegalCompetenceIndicator\": true,\n    \"CompanyLegalFormCode\": \"55\",\n    \"OrganisationFirstLineName\": \"SAP SE\",\n    \"OrganisationSecondLineName\": \"Walldorf\",\n    \"Role\": [\n        {\n            \"RoleCode\": \"CRM000\"\n        }\n    ],\n    \"AddressInformation\": [\n        {\n            \"PostalAddress\": {\n                \"CountryCode\": \"DE\",\n                \"StreetPostalCode\": \"69190\",\n                \"StreetName\": \"Dietmar-Hopp-Allee\",\n                \"HouseID\": \"16\",\n                \"CityName\": \"Walldorf\",\n                \"RegionCode\": \"08\"\n            },\n            \"ConventionalPhone\": {\n                \"FormattedNumberDescription\": \"+49 6227 7-47474\"\n            },\n            \"EMail\": {\n                \"URI\": \"info@sap.com\"\n            },\n            \"WebSite\": {\n                \"URI\": \"https://www.sap.com/\"\n            },\n            \"CommunicationPreference\": {\n                \"CorrespondenceLanguageCode\": \"EN\"\n            },\n            \"AddressUsage\": [\n                {\n                    \"AddressUsageCode\": \"XXDEFAULT\",\n                    \"DefaultIndicator\": false,\n                    \"ValidityStartDate\": \"0001-01-01T00:00:00\",\n                    \"ValidityEndDate\": \"9999-12-31T00:00:00\"\n                }\n            ]\n        },\n        {\n            \"PostalAddress\": {\n                \"CountryCode\": \"DE\",\n                \"CareOfName\": \"Service Center Rot\",\n                \"StreetPostalCode\": \"68789\",\n                \"StreetName\": \"SAP-Allee\",\n                \"HouseID\": \"29\",\n                \"CityName\": \"St.Leon-Rot\",\n                \"RegionCode\": \"08\"\n            },\n            \"ConventionalPhone\": {\n                \"FormattedNumberDescription\": \"+49 6227 7-47474\"\n            },\n            \"AddressUsage\": [\n                {\n                    \"AddressUsageCode\": \"SHIP_TO\",\n                    \"DefaultIndicator\": true,\n                    \"ValidityStartDate\": \"0001-01-01T00:00:00\",\n                    \"ValidityEndDate\": \"9999-12-31T00:00:00\"\n                }\n            ]\n        }\n    ],\n    \"TaxNumber\": [\n        {\n            \"CountryCode\": \"DE\",\n            \"TaxNumberTypeCode\": \"1\",\n            \"TaxNumberID\": \"DE210157578\"\n        }\n    ],\n    \"TaxExemption\": [\n        {\n            \"CountryCode\": \"DE\",\n            \"RegionCode\": \"08\",\n            \"TaxTypeCode\": \"1\",\n            \"ReasonCode\": \"1\"\n        }\n    ],\n    \"BankDetails\": [\n        {\n            \"BankInternalID\": \"28\",\n            \"BankAccountID\": \"123456\",\n            \"BankAccountIDCheckDigitValue\": \"12\",\n            \"BankAccountHolderName\": \"SAP SE\",\n            \"BankAccountStandardID\": \"DE12500105178628711512\"\n        }\n    ],\n    \"EmployeeResponsible\": [\n        {\n            \"EmployeeUUID\": \"{{BP-EmployeeUUID}}\",\n            \"PartyRoleCode\": \"142\"\n        }\n    ],\n    \"Note\": [\n        {\n            \"Text\": \"Some account note...\",\n            \"TypeCode\": \"10034\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcustomer/CustomerCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcustomer",
								"CustomerCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create prospect (corporate account)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Set Business partner ID of pattern <Prefix>-<UTC datetime>",
									"//let todayDateTime = (new Date()).toISOString().substr(0,19);",
									"//todayDateTime = todayDateTime.replace(\"-\",\"\").replace(\"-\",\"\").replace(\"T\",\"\").replace(\":\",\"\").replace(\":\",\"\");",
									"//var generatedID = pm.environment.get(\"C-Prefix\") + todayDateTime;",
									"//pm.environment.set(\"C-CustomerID\", generatedID);",
									"",
									"// Use internal numbering  => initialize environment variable C-CustomerID",
									"pm.environment.set(\"C-CustomerID\", \"\");",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"C-CustomerID\", jsonResponse.d.results.InternalID);",
									"pm.environment.set(\"C-CustomerUUID\", jsonResponse.d.results.UUID);",
									"pm.environment.set(\"C-CustomerObjectID\", jsonResponse.d.results.ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Customer \" + jsonResponse.d.results.InternalID + \" created\", function () { pm.response.to.have.status(201) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"InternalID\": \"{{C-CustomerID}}\",\n    \"CategoryCode\": \"2\",\n    \"LifeCycleStatusCode\": \"2\",\n    \"ABCClassificationCode\": \"A\",\n    \"IndustrialSectorCode\": \"51\",\n    \"NielsenID\": \"01\",\n    \"OrderBlockingReasonCode\": \"\",\n    \"FulfilmentBlockingReasonCode\": \"\",\n    \"InvoicingBlockingReasonCode\": \"\",\n    \"ContactAllowedCode\": \"1\",\n    \"LegalCompetenceIndicator\": true,\n    \"CompanyLegalFormCode\": \"55\",\n    \"OrganisationFirstLineName\": \"SAP SE\",\n    \"OrganisationSecondLineName\": \"(Prospect)\",\n    \"Role\": [\n        {\n            \"RoleCode\": \"BUP002\"\n        }\n    ],\n    \"AddressInformation\": [\n        {\n            \"PostalAddress\": {\n                \"CountryCode\": \"DE\",\n                \"StreetPostalCode\": \"69190\",\n                \"StreetName\": \"Dietmar-Hopp-Allee\",\n                \"HouseID\": \"16\",\n                \"CityName\": \"Walldorf\",\n                \"RegionCode\": \"08\"\n            },\n            \"ConventionalPhone\": {\n                \"FormattedNumberDescription\": \"+49 6227 7-47474\"\n            },\n            \"EMail\": {\n                \"URI\": \"info@sap.com\"\n            },\n            \"WebSite\": {\n                \"URI\": \"https://www.sap.com/\"\n            },\n            \"CommunicationPreference\": {\n                \"CorrespondenceLanguageCode\": \"EN\"\n            },\n            \"AddressUsage\": [\n                {\n                    \"AddressUsageCode\": \"XXDEFAULT\",\n                    \"DefaultIndicator\": false,\n                    \"ValidityStartDate\": \"0001-01-01T00:00:00\",\n                    \"ValidityEndDate\": \"9999-12-31T00:00:00\"\n                }\n            ]\n        },\n        {\n            \"PostalAddress\": {\n                \"CountryCode\": \"DE\",\n                \"CareOfName\": \"Service Center Rot\",\n                \"StreetPostalCode\": \"68789\",\n                \"StreetName\": \"SAP-Allee\",\n                \"HouseID\": \"29\",\n                \"CityName\": \"St.Leon-Rot\",\n                \"RegionCode\": \"08\"\n            },\n            \"ConventionalPhone\": {\n                \"FormattedNumberDescription\": \"+49 6227 7-47474\"\n            },\n            \"AddressUsage\": [\n                {\n                    \"AddressUsageCode\": \"SHIP_TO\",\n                    \"DefaultIndicator\": true,\n                    \"ValidityStartDate\": \"0001-01-01T00:00:00\",\n                    \"ValidityEndDate\": \"9999-12-31T00:00:00\"\n                }\n            ]\n        }\n    ],\n    \"TaxNumber\": [\n        {\n            \"CountryCode\": \"DE\",\n            \"TaxNumberTypeCode\": \"1\",\n            \"TaxNumberID\": \"DE210157578\"\n        }\n    ],\n    \"TaxExemption\": [\n        {\n            \"CountryCode\": \"DE\",\n            \"RegionCode\": \"08\",\n            \"TaxTypeCode\": \"1\",\n            \"ReasonCode\": \"1\"\n        }\n    ],\n    \"BankDetails\": [\n        {\n            \"BankInternalID\": \"28\",\n            \"BankAccountID\": \"123456\",\n            \"BankAccountIDCheckDigitValue\": \"12\",\n            \"BankAccountHolderName\": \"SAP SE\",\n            \"BankAccountStandardID\": \"DE12500105178628711512\"\n        }\n    ],\n    \"EmployeeResponsible\": [\n        {\n            \"EmployeeUUID\": \"{{BP-EmployeeUUID}}\",\n            \"PartyRoleCode\": \"142\"\n        }\n    ],\n    \"Note\": [\n        {\n            \"Text\": \"Some account note...\",\n            \"TypeCode\": \"10034\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcustomer/CustomerCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcustomer",
								"CustomerCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create customer (private account)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Set Business partner ID of pattern <Prefix>-<UTC datetime>",
									"//let todayDateTime = (new Date()).toISOString().substr(0,19);",
									"//todayDateTime = todayDateTime.replace(\"-\",\"\").replace(\"-\",\"\").replace(\"T\",\"\").replace(\":\",\"\").replace(\":\",\"\");",
									"//var generatedID = pm.environment.get(\"C-Prefix\") + todayDateTime;",
									"//pm.environment.set(\"C-CustomerID\", generatedID);",
									"",
									"// Use internal numbering  => initialize environment variable C-CustomerID",
									"pm.environment.set(\"C-CustomerID\", \"\");",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"C-CustomerID\", jsonResponse.d.results.InternalID);",
									"pm.environment.set(\"C-CustomerUUID\", jsonResponse.d.results.UUID);",
									"pm.environment.set(\"C-CustomerObjectID\", jsonResponse.d.results.ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Customer \" + jsonResponse.d.results.InternalID + \" created\", function () { pm.response.to.have.status(201) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"InternalID\": \"{{C-CustomerID}}\",\n    \"CategoryCode\": \"1\",\n    \"LifeCycleStatusCode\": \"2\",\n    \"ABCClassificationCode\": \"A\",\n    \"IndustrialSectorCode\": \"11\",\n    \"NielsenID\": \"01\",\n    \"OrderBlockingReasonCode\": \"\",\n    \"FulfilmentBlockingReasonCode\": \"\",\n    \"InvoicingBlockingReasonCode\": \"\",\n    \"ContactAllowedCode\": \"1\",\n    \"LegalCompetenceIndicator\": true,\n    \"PersonFormOfAddressCode\": \"0001\",\n    \"PersonAcademicTitleCode\": \"0005\",\n    \"PersonGivenName\": \"Luise\",\n    \"PersonMiddleName\": \"\",\n    \"PersonFamilyName\": \"Fjällström\",\n    \"PersonBirthName\": \"\",\n    \"PersonNickName\": \"Liz\",\n    \"PersonGenderCode\": \"2\",\n    \"PersonProfessionCode\": \"0017\",\n    \"PersonCommunicationLanguageCode\": \"EN\",\n    \"PersonBirthDate\": \"/Date(144115200000)/\",\n    \"Role\": [\n        {\n            \"RoleCode\": \"CRM000\"\n        }\n    ],\n    \"AddressInformation\": [\n        {\n            \"PostalAddress\": {\n                \"CountryCode\": \"DE\",\n                \"StreetPostalCode\": \"69115\",\n                \"StreetName\": \"Neckarstaden\",\n                \"HouseID\": \"42\",\n                \"CityName\": \"Heidelberg\",\n                \"RegionCode\": \"08\"\n            },\n            \"ConventionalPhone\": {\n                \"FormattedNumberDescription\": \"+49 6221 123456\"\n            },\n            \"MobilePhone\": {\n                \"FormattedNumberDescription\": \"+49 (123) 456-7890\"\n            },\n            \"EMail\": {\n                \"URI\": \"info@sap.com\"\n            },\n            \"AddressUsage\": [\n                {\n                    \"AddressUsageCode\": \"XXDEFAULT\",\n                    \"DefaultIndicator\": false,\n                    \"ValidityStartDate\": \"0001-01-01T00:00:00\",\n                    \"ValidityEndDate\": \"9999-12-31T00:00:00\"\n                }\n            ]\n        }\n    ],\n    \"TaxNumber\": [\n        {\n            \"CountryCode\": \"DE\",\n            \"TaxNumberTypeCode\": \"1\",\n            \"TaxNumberID\": \"DE210157578\"\n        }\n    ],\n    \"TaxExemption\": [\n        {\n            \"CountryCode\": \"DE\",\n            \"RegionCode\": \"08\",\n            \"TaxTypeCode\": \"1\",\n            \"ReasonCode\": \"1\"\n        }\n    ],\n    \"BankDetails\": [\n        {\n            \"BankInternalID\": \"28\",\n            \"BankAccountID\": \"123456\",\n            \"BankAccountIDCheckDigitValue\": \"12\",\n            \"BankAccountHolderName\": \"SAP SE\",\n            \"BankAccountStandardID\": \"DE12500105178628711512\"\n        }\n    ],\n    \"EmployeeResponsible\": [\n        {\n            \"EmployeeUUID\": \"{{BP-EmployeeUUID}}\",\n            \"PartyRoleCode\": \"142\"\n        }\n    ],\n    \"Note\": [\n        {\n            \"Text\": \"Some account note...\",\n            \"TypeCode\": \"10034\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcustomer/CustomerCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcustomer",
								"CustomerCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create prospect (private account)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Set Business partner ID of pattern <Prefix>-<UTC datetime>",
									"//let todayDateTime = (new Date()).toISOString().substr(0,19);",
									"//todayDateTime = todayDateTime.replace(\"-\",\"\").replace(\"-\",\"\").replace(\"T\",\"\").replace(\":\",\"\").replace(\":\",\"\");",
									"//var generatedID = pm.environment.get(\"C-Prefix\") + todayDateTime;",
									"//pm.environment.set(\"C-CustomerID\", generatedID);",
									"",
									"// Use internal numbering  => initialize environment variable C-CustomerID",
									"pm.environment.set(\"C-CustomerID\", \"\");",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"C-CustomerID\", jsonResponse.d.results.InternalID);",
									"pm.environment.set(\"C-CustomerUUID\", jsonResponse.d.results.UUID);",
									"pm.environment.set(\"C-CustomerObjectID\", jsonResponse.d.results.ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Customer \" + jsonResponse.d.results.InternalID + \" created\", function () { pm.response.to.have.status(201) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"InternalID\": \"{{C-CustomerID}}\",\n    \"CategoryCode\": \"1\",\n    \"LifeCycleStatusCode\": \"2\",\n    \"ABCClassificationCode\": \"A\",\n    \"IndustrialSectorCode\": \"11\",\n    \"NielsenID\": \"01\",\n    \"OrderBlockingReasonCode\": \"\",\n    \"FulfilmentBlockingReasonCode\": \"\",\n    \"InvoicingBlockingReasonCode\": \"\",\n    \"ContactAllowedCode\": \"1\",\n    \"LegalCompetenceIndicator\": true,\n    \"PersonFormOfAddressCode\": \"0001\",\n    \"PersonAcademicTitleCode\": \"0005\",\n    \"PersonGivenName\": \"Selma\",\n    \"PersonMiddleName\": \"\",\n    \"PersonFamilyName\": \"Fjällström\",\n    \"PersonBirthName\": \"\",\n    \"PersonNickName\": \"Prospect Sella\",\n    \"PersonGenderCode\": \"2\",\n    \"PersonProfessionCode\": \"0017\",\n    \"PersonCommunicationLanguageCode\": \"DE\",\n    \"PersonBirthDate\": \"/Date(144115200000)/\",\n    \"Role\": [\n        {\n            \"RoleCode\": \"BUP002\"\n        }\n    ],\n    \"AddressInformation\": [\n        {\n            \"PostalAddress\": {\n                \"CountryCode\": \"DE\",\n                \"StreetPostalCode\": \"69115\",\n                \"StreetName\": \"Neckarstaden\",\n                \"HouseID\": \"42\",\n                \"CityName\": \"Heidelberg\",\n                \"RegionCode\": \"08\"\n            },\n            \"ConventionalPhone\": {\n                \"FormattedNumberDescription\": \"+49 6221 123456\"\n            },\n            \"MobilePhone\": {\n                \"FormattedNumberDescription\": \"+49 (123) 456-7890\"\n            },\n            \"EMail\": {\n                \"URI\": \"info@sap.com\"\n            },\n            \"AddressUsage\": [\n                {\n                    \"AddressUsageCode\": \"XXDEFAULT\",\n                    \"DefaultIndicator\": false,\n                    \"ValidityStartDate\": \"0001-01-01T00:00:00\",\n                    \"ValidityEndDate\": \"9999-12-31T00:00:00\"\n                }\n            ]\n        }\n    ],\n    \"TaxNumber\": [\n        {\n            \"CountryCode\": \"DE\",\n            \"TaxNumberTypeCode\": \"1\",\n            \"TaxNumberID\": \"DE210157578\"\n        }\n    ],\n    \"TaxExemption\": [\n        {\n            \"CountryCode\": \"DE\",\n            \"RegionCode\": \"08\",\n            \"TaxTypeCode\": \"1\",\n            \"ReasonCode\": \"1\"\n        }\n    ],\n    \"BankDetails\": [\n        {\n            \"BankInternalID\": \"28\",\n            \"BankAccountID\": \"123456\",\n            \"BankAccountIDCheckDigitValue\": \"12\",\n            \"BankAccountHolderName\": \"SAP SE\",\n            \"BankAccountStandardID\": \"DE12500105178628711512\"\n        }\n    ],\n    \"EmployeeResponsible\": [\n        {\n            \"EmployeeUUID\": \"{{BP-EmployeeUUID}}\",\n            \"PartyRoleCode\": \"142\"\n        }\n    ],\n    \"Note\": [\n        {\n            \"Text\": \"Some account note...\",\n            \"TypeCode\": \"10034\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcustomer/CustomerCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcustomer",
								"CustomerCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get customers by creation date",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"//pm.environment.set(\"C-CustomerUUID\", jsonResponse.d.results[0].UUID);",
									"//pm.environment.set(\"C-CustomerObjectID\", jsonResponse.d.results[0].ObjectID);",
									"",
									"// Validations:",
									"",
									"pm.test(jsonResponse.d.__count + \" records found\", function () { ",
									"    pm.response.to.have.status(200); ",
									"    pm.response.to.have.header(\"x-csrf-token\") ",
									"});",
									"",
									"// Loop response items",
									"console.log(\"- Start loop -\");",
									"let numberOfItems = Number(jsonResponse.d.__count);",
									"for (let index = 0; index < numberOfItems; index++) {",
									"    ",
									"    pm.test(jsonResponse.d.results[index].CategoryCodeText + \": \" + jsonResponse.d.results[index].InternalID + \" - \" + jsonResponse.d.results[index].BusinessPartnerFormattedName, function () { pm.response.to.have.status(200) });",
									"    ",
									"    console.log(\"Customer: \" + jsonResponse.d.results[index].InternalID + \" - \" + jsonResponse.d.results[index].InternalID);",
									"}",
									"console.log(\"- End loop -\");",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Set key date with pattern <Prefix>-<UTC datetime>, e.g. 2021-10-22T23:46:31.8752110Z\r",
									"let todayDateTime = (new Date()).toISOString().substr(0,10) + \"T00:00:00.0000000Z\";\r",
									"//todayDateTime = todayDateTime.replace(\"-\",\"\").replace(\"-\",\"\").replace(\"T\",\"\").replace(\":\",\"\").replace(\":\",\"\");\r",
									"//var generatedID = pm.environment.get(\"C-Prefix\") + todayDateTime;\r",
									"pm.environment.set(\"TodayDateTime\", todayDateTime);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcustomer/CustomerCollection?$format=json&$expand=Role,Identification,Note,AddressInformation/PostalAddress,AddressInformation/ConventionalPhone,AddressInformation/MobilePhone,AddressInformation/EMail,AddressInformation/WebSite,AddressInformation/CommunicationPreference,AddressInformation/AddressUsage,TaxNumber,TaxExemption,BankDetails,EmployeeResponsible&$filter=CreationDateTime ge datetimeoffset'{{TodayDateTime}}'&$inlinecount=allpages&$top=10&sap-language=en",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcustomer",
								"CustomerCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "Role,Identification,Note,AddressInformation/PostalAddress,AddressInformation/ConventionalPhone,AddressInformation/MobilePhone,AddressInformation/EMail,AddressInformation/WebSite,AddressInformation/CommunicationPreference,AddressInformation/AddressUsage,TaxNumber,TaxExemption,BankDetails,EmployeeResponsible"
								},
								{
									"key": "$filter",
									"value": "CreationDateTime ge datetimeoffset'{{TodayDateTime}}'",
									"description": "InternalID eq '{{C-CustomerID}}'"
								},
								{
									"key": "$inlinecount",
									"value": "allpages"
								},
								{
									"key": "$top",
									"value": "10"
								},
								{
									"key": "$select",
									"value": "ObjectID,InternalID,BusinessPartnerFormattedName,AddressInformation",
									"disabled": true
								},
								{
									"key": "sap-language",
									"value": "en"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get customer by business partner ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"//pm.environment.set(\"C-CustomerUUID\", jsonResponse.d.results[0].UUID);",
									"//pm.environment.set(\"C-CustomerObjectID\", jsonResponse.d.results[0].ObjectID);",
									"",
									"// Validations:",
									"",
									"pm.test(jsonResponse.d.__count + \" records found\", function () { ",
									"    pm.response.to.have.status(200); ",
									"    pm.response.to.have.header(\"x-csrf-token\") ",
									"});",
									"",
									"// Loop response items",
									"console.log(\"- Start loop -\");",
									"let numberOfItems = Number(jsonResponse.d.__count);",
									"for (let index = 0; index < numberOfItems; index++) {",
									"    ",
									"    pm.test(jsonResponse.d.results[index].CategoryCodeText + \": \" + jsonResponse.d.results[index].InternalID + \" - \" + jsonResponse.d.results[index].BusinessPartnerFormattedName, function () { pm.response.to.have.status(200) });",
									"    ",
									"    console.log(\"Customer: \" + jsonResponse.d.results[index].InternalID + \" - \" + jsonResponse.d.results[index].InternalID);",
									"}",
									"console.log(\"- End loop -\");",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Set key date with pattern <Prefix>-<UTC datetime>, e.g. 2021-10-22T23:46:31.8752110Z\r",
									"//let todayDateTime = (new Date()).toISOString().substr(0,10) + \"T00:00:00.0000000Z\";\r",
									"//todayDateTime = todayDateTime.replace(\"-\",\"\").replace(\"-\",\"\").replace(\"T\",\"\").replace(\":\",\"\").replace(\":\",\"\");\r",
									"//var generatedID = pm.environment.get(\"C-Prefix\") + todayDateTime;\r",
									"//pm.environment.set(\"TodayDateTime\", todayDateTime);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcustomer/CustomerCollection?$format=json&$expand=Role,Identification,Note,AddressInformation/PostalAddress,AddressInformation/ConventionalPhone,AddressInformation/MobilePhone,AddressInformation/EMail,AddressInformation/WebSite,AddressInformation/CommunicationPreference,AddressInformation/AddressUsage,TaxNumber,TaxExemption,BankDetails,EmployeeResponsible&$filter=InternalID eq '{{C-CustomerID}}'&$inlinecount=allpages&$top=10&sap-language=en",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcustomer",
								"CustomerCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "Role,Identification,Note,AddressInformation/PostalAddress,AddressInformation/ConventionalPhone,AddressInformation/MobilePhone,AddressInformation/EMail,AddressInformation/WebSite,AddressInformation/CommunicationPreference,AddressInformation/AddressUsage,TaxNumber,TaxExemption,BankDetails,EmployeeResponsible"
								},
								{
									"key": "$filter",
									"value": "InternalID eq '{{C-CustomerID}}'"
								},
								{
									"key": "$inlinecount",
									"value": "allpages"
								},
								{
									"key": "$top",
									"value": "10"
								},
								{
									"key": "$select",
									"value": "ObjectID,InternalID,BusinessPartnerFormattedName,AddressInformation",
									"disabled": true
								},
								{
									"key": "sap-language",
									"value": "en"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Customer from Business Partner (write)",
			"item": [
				{
					"name": "Get metadata and xsrf-token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"pm.test(\"Cross-site request forgery token received\", function () { pm.response.to.have.header(\"x-csrf-token\") });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcustomer/$metadata?sap-language=en&sap-label=true",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcustomer",
								"$metadata"
							],
							"query": [
								{
									"key": "sap-language",
									"value": "en"
								},
								{
									"key": "sap-label",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create business partner (organisation) with main address",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Set Business partner ID of pattern <Prefix>-<UTC datetime>",
									"//let todayDateTime = (new Date()).toISOString().substr(0,19);",
									"//todayDateTime = todayDateTime.replace(\"-\",\"\").replace(\"-\",\"\").replace(\"T\",\"\").replace(\":\",\"\").replace(\":\",\"\");",
									"//var generatedID = pm.environment.get(\"C-Prefix\") + todayDateTime;",
									"//pm.environment.set(\"C-CustomerID\", generatedID);",
									"",
									"// Use internal numbering  => initialize environment variable C-CustomerID",
									"pm.environment.set(\"C-CustomerID\", \"\");",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"C-CustomerID\", jsonResponse.d.results.InternalID);",
									"pm.environment.set(\"C-CustomerUUID\", jsonResponse.d.results.UUID);",
									"pm.environment.set(\"C-CustomerObjectID\", jsonResponse.d.results.ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Business partner \" + jsonResponse.d.results.InternalID + \" created\", function () { pm.response.to.have.status(201) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"InternalID\": \"\",\n\t\"CategoryCode\": \"2\",\n\t\"CompanyLegalFormCode\": \"01\",\n    \"OrganisationFirstLineName\": \"OData Hands-on Corp\",\n    \"OrganisationSecondLineName\": \"\",\n\t\"CurrentDefaultAddressInformation\": \n\t\t{\n    \t\t\"ConventionalPhone\": \n    \t\t\t{\n            \t\t\"FormattedNumberDescription\": \"+1 (716) 482-4863\"\n\t\t\t\t},\n\t\t\t\"MobilePhone\": \n\t\t\t\t{\n            \t\t\"FormattedNumberDescription\": \"+1 (716) 482-4863\"\n                },\n\t\t\t\"Facsimile\": \n\t\t\t\t{\n                \t\"FormattedNumberDescription\": \"+1 (716) 482-4867\"\n\t\t\t\t},\n\t\t\t\"EMail\": \n\t\t\t\t{\n                \t\"URI\": \"customerOAC@bydmail.com\"\n\t\t\t\t},\n\t\t\t\"WebSite\": \n\t\t\t\t{\n                \t\"URI\": \"https://www.sap.com/community/topics/business-bydesign.html\"\n                },\n\t\t\t\"PostalAddress\": \n\t\t\t\t{\n                \t\"CountryCode\": \"US\",\n                    \"CareOfName\": \"\",\n                    \"StreetPostalCode\": \"14204\",\n                    \"StreetPrefixName\": \"\",\n                    \"StreetName\": \"Seneca Street\",\n                    \"StreetSuffixName\": \"\",\n                    \"HouseID\": \"145\",\n                    \"CityName\": \"Buffalo\",\n                    \"DifferentCityName\": \"\",\n                    \"RegionCode\": \"NY\",\n                    \"CountyName\": \"\",\n                    \"DistrictName\": \"\",\n                    \"TaxJurisdictionCode\": \"NY\",\n                    \"CompanyPostalCode\": \"\",\n                    \"POBoxID\": \"\",\n                    \"POBoxPostalCode\": \"\",\n                    \"POBoxDeviatingCountryCode\": \"\",\n                    \"POBoxDeviatingRegionCode\": \"\",\n                    \"POBoxDeviatingCityName\": \"\"\n\t\t\t\t}\n\t\t}\n}"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khbusinesspartner/BusinessPartnerCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khbusinesspartner",
								"BusinessPartnerCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get business partner",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"pm.test(\"Business partner \" + jsonResponse.d.results.InternalID + \" (\" + jsonResponse.d.results.BusinessPartnerFormattedName + \") received\", function () { pm.response.to.have.status(200) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khbusinesspartner/BusinessPartnerCollection('{{C-CustomerObjectID}}')?$format=json&$expand=Role,Identification,CurrentDefaultAddressInformation/FormattedAddress,CurrentDefaultAddressInformation/PostalAddress,CurrentDefaultAddressInformation/ConventionalPhone,CurrentDefaultAddressInformation/MobilePhone,CurrentDefaultAddressInformation/Facsimile,CurrentDefaultAddressInformation/EMail,CurrentDefaultAddressInformation/WebSite",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khbusinesspartner",
								"BusinessPartnerCollection('{{C-CustomerObjectID}}')"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "Role,Identification,CurrentDefaultAddressInformation/FormattedAddress,CurrentDefaultAddressInformation/PostalAddress,CurrentDefaultAddressInformation/ConventionalPhone,CurrentDefaultAddressInformation/MobilePhone,CurrentDefaultAddressInformation/Facsimile,CurrentDefaultAddressInformation/EMail,CurrentDefaultAddressInformation/WebSite"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create customer from business partner",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Customer created from business partner \" + jsonResponse.d.results.InternalID, function () { pm.response.to.have.status(200) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcustomer/CreateCustomerFromExistingBusinessPartner?ObjectID='{{C-CustomerObjectID}}'&InternalID='{{C-CustomerID}}'&RoleCode='CRM000'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcustomer",
								"CreateCustomerFromExistingBusinessPartner"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{C-CustomerObjectID}}'"
								},
								{
									"key": "InternalID",
									"value": "'{{C-CustomerID}}'"
								},
								{
									"key": "UUID",
									"value": null,
									"disabled": true
								},
								{
									"key": "RoleCode",
									"value": "'CRM000'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"pm.environment.set(\"C-CustomerID\", jsonResponse.d.results[0].InternalID);",
									"pm.environment.set(\"C-CustomerUUID\", jsonResponse.d.results[0].UUID);",
									"pm.environment.set(\"C-CustomerObjectID\", jsonResponse.d.results[0].ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Customer \" + jsonResponse.d.results[0].InternalID + \" (\" + jsonResponse.d.results[0].BusinessPartnerFormattedName + \") received\", function () { pm.response.to.have.status(200) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcustomer/CustomerCollection?$format=json&$expand=Role,Identification,Note,AddressInformation/AddressUsage,AddressInformation/FormattedAddress,AddressInformation/PostalAddress,AddressInformation/ConventionalPhone,AddressInformation/MobilePhone,AddressInformation/Facsimile,AddressInformation/EMail,AddressInformation/WebSite,AddressInformation/CommunicationPreference&$filter=InternalID eq '{{C-CustomerID}}'&$inlinecount=allpages&$top=10",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcustomer",
								"CustomerCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "Role,Identification,Note,AddressInformation/AddressUsage,AddressInformation/FormattedAddress,AddressInformation/PostalAddress,AddressInformation/ConventionalPhone,AddressInformation/MobilePhone,AddressInformation/Facsimile,AddressInformation/EMail,AddressInformation/WebSite,AddressInformation/CommunicationPreference"
								},
								{
									"key": "$filter",
									"value": "InternalID eq '{{C-CustomerID}}'"
								},
								{
									"key": "$inlinecount",
									"value": "allpages"
								},
								{
									"key": "$top",
									"value": "10"
								},
								{
									"key": "$select",
									"value": "ObjectID,InternalID,BusinessPartnerFormattedName,AddressInformation",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update customer general data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Validations",
									"pm.test(\"Customer general data updated\", function () { pm.response.to.have.status(204) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ObjectID\": \"{{C-CustomerObjectID}}\",\n    \"ABCClassificationCode\": \"A\",\n    \"IndustrialSectorCode\": \"42\",\n    \"NielsenID\": \"01\",\n    \"OrderBlockingReasonCode\": \"02\",\n    \"FulfilmentBlockingReasonCode\": \"91\",\n    \"InvoicingBlockingReasonCode\": \"03\",\n    \"ContactAllowedCode\": \"1\"\n}"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcustomer/CustomerCollection('{{C-CustomerObjectID}}')",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcustomer",
								"CustomerCollection('{{C-CustomerObjectID}}')"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create additional address",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"P-CustomerAddressInfoObjectID\", jsonResponse.d.results.ObjectID);",
									"pm.environment.set(\"P-CustomerAddressInfoUUID\", jsonResponse.d.results.UUID);",
									"",
									"// Validations",
									"pm.test(\"Address information created\", function () { pm.response.to.have.status(201) });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ParentObjectID\": \"{{C-CustomerObjectID}}\",\n    \"ConventionalPhone\": {\n        \"FormattedNumberDescription\": \"+1 (716) 482-4864\"\n    },\n    \"MobilePhone\": {\n        \"FormattedNumberDescription\": \"+1 (716) 482-4865\"\n    },\n    \"Facsimile\": {\n        \"FormattedNumberDescription\": \"+1 (716) 482-4866\"\n    },\n    \"EMail\": {\n        \"URI\": \"customerOAC-service@bydmail.com\"\n    },\n    \"WebSite\": {\n        \"URI\": \"https://www.sap.com/community/topics/business-bydesign.html\"\n    },\n    \"PostalAddress\": {\n        \"CountryCode\": \"US\",\n        \"CareOfName\": \"\",\n        \"StreetPostalCode\": \"14204\",\n        \"StreetPrefixName\": \"\",\n        \"StreetName\": \"Seneca Street\",\n        \"StreetSuffixName\": \"\",\n        \"HouseID\": \"146\",\n        \"CityName\": \"Buffalo\",\n        \"DifferentCityName\": \"\",\n        \"RegionCode\": \"NY\",\n        \"CountyName\": \"\",\n        \"DistrictName\": \"\",\n        \"TaxJurisdictionCode\": \"NY\",\n        \"CompanyPostalCode\": \"\",\n        \"POBoxID\": \"\",\n        \"POBoxPostalCode\": \"\",\n        \"POBoxDeviatingCountryCode\": \"\",\n        \"POBoxDeviatingRegionCode\": \"\",\n        \"POBoxDeviatingCityName\": \"\"\n    }\n}"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcustomer/AddressInformationCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcustomer",
								"AddressInformationCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create account note",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Customer account note created\", function () { pm.response.to.have.status(201) });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ParentObjectID\": \"{{C-CustomerObjectID}}\",\n    \"Text\": \"Some account note...\",\n    \"TypeCode\": \"10034\"\n}"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcustomer/NoteCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcustomer",
								"NoteCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"pm.environment.set(\"C-CustomerID\", jsonResponse.d.results[0].InternalID);",
									"pm.environment.set(\"C-CustomerUUID\", jsonResponse.d.results[0].UUID);",
									"pm.environment.set(\"C-CustomerObjectID\", jsonResponse.d.results[0].ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Customer \" + jsonResponse.d.results[0].InternalID + \" (\" + jsonResponse.d.results[0].BusinessPartnerFormattedName + \") received\", function () { pm.response.to.have.status(200) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcustomer/CustomerCollection?$format=json&$expand=Role,Identification,Note,AddressInformation/AddressUsage,AddressInformation/FormattedAddress,AddressInformation/PostalAddress,AddressInformation/ConventionalPhone,AddressInformation/MobilePhone,AddressInformation/Facsimile,AddressInformation/EMail,AddressInformation/WebSite,AddressInformation/CommunicationPreference&$filter=InternalID eq '{{C-CustomerID}}'&$inlinecount=allpages&$top=10",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcustomer",
								"CustomerCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "Role,Identification,Note,AddressInformation/AddressUsage,AddressInformation/FormattedAddress,AddressInformation/PostalAddress,AddressInformation/ConventionalPhone,AddressInformation/MobilePhone,AddressInformation/Facsimile,AddressInformation/EMail,AddressInformation/WebSite,AddressInformation/CommunicationPreference"
								},
								{
									"key": "$filter",
									"value": "InternalID eq '{{C-CustomerID}}'"
								},
								{
									"key": "$inlinecount",
									"value": "allpages"
								},
								{
									"key": "$top",
									"value": "10"
								},
								{
									"key": "$select",
									"value": "ObjectID,InternalID,BusinessPartnerFormattedName,AddressInformation",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create business partner with role \"Contact Person\"",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Set Business partner ID of pattern <Prefix>-<UTC datetime>",
									"//let todayDateTime = (new Date()).toISOString().substr(0,19);",
									"//todayDateTime = todayDateTime.replace(\"-\",\"\").replace(\"-\",\"\").replace(\"T\",\"\").replace(\":\",\"\").replace(\":\",\"\");",
									"//var generatedID = pm.environment.get(\"C-Prefix\") + todayDateTime;",
									"//pm.environment.set(\"C-CustomerID\", generatedID);",
									"",
									"// Use internal numbering  => initialize environment variable C-CustomerID",
									"pm.environment.set(\"C-ContactPersonID\", \"\");",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"C-ContactPersonID\", jsonResponse.d.results.InternalID);",
									"pm.environment.set(\"C-ContactPersonUUID\", jsonResponse.d.results.UUID);",
									"pm.environment.set(\"C-ContactPersonObjectID\", jsonResponse.d.results.ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Business partner \" + jsonResponse.d.results.InternalID + \" (\" + jsonResponse.d.results.BusinessPartnerFormattedName + \") created with role 'Contact Person'\", function () { pm.response.to.have.status(201) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"InternalID\": \"\",\n    \"CategoryCode\": \"1\",\n    \"PersonFormOfAddressCode\": \"0002\",\n    \"PersonAcademicTitleCode\": \"\",\n    \"PersonGivenName\": \"Marc\",\n    \"PersonMiddleName\": \"\",\n    \"PersonFamilyName\": \"Fjällström\",\n    \"PersonGenderCode\": \"1\",\n    \"Role\": [\n        {\n            \"RoleCode\": \"BUP001\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khbusinesspartner/BusinessPartnerCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khbusinesspartner",
								"BusinessPartnerCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Activate contact person",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Contact person \" + jsonResponse.d.results.InternalID + \" activated\", function () { pm.response.to.have.status(200) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khbusinesspartner/Activate?ObjectID='{{C-ContactPersonObjectID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khbusinesspartner",
								"Activate"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{C-ContactPersonObjectID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get contact person",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"pm.environment.set(\"C-ContactPersonID\", jsonResponse.d.results[0].InternalID);",
									"pm.environment.set(\"C-ContactPersonUUID\", jsonResponse.d.results[0].UUID);",
									"pm.environment.set(\"C-ContactPersonObjectID\", jsonResponse.d.results[0].ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Contact person \" + jsonResponse.d.results[0].InternalID + \" (\" + jsonResponse.d.results[0].BusinessPartnerFormattedName + \") received\", function () { pm.response.to.have.status(200) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khbusinesspartner/BusinessPartnerCollection?$format=json&$expand=Role&$filter=InternalID eq '{{C-ContactPersonID}}'&$inlinecount=allpages&$top=10",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khbusinesspartner",
								"BusinessPartnerCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "Role"
								},
								{
									"key": "$filter",
									"value": "InternalID eq '{{C-ContactPersonID}}'"
								},
								{
									"key": "$inlinecount",
									"value": "allpages"
								},
								{
									"key": "$top",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create contact person relationship",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"C-BuPaRelationshipUUID\", jsonResponse.d.results.UUID);",
									"pm.environment.set(\"C-BuPaRelationshipObjectID\", jsonResponse.d.results.ObjectID);",
									"",
									"// Validations",
									"pm.test(jsonResponse.d.results.CategoryCodeText + \" between \" + jsonResponse.d.results.FirstBusinessPartnerInternalID + \" (\" + jsonResponse.d.results.FirstBusinessPartnerFormattedName + \") and \" + jsonResponse.d.results.SecondBusinessPartnerInternalID + \" (\" + jsonResponse.d.results.SecondBusinessPartnerFormattedName + \") created\", function () { pm.response.to.have.status(201) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"CategoryCode\": \"BUR001\",\n    \"MainIndicator\": true,\n    \"ReverseDefaultIndicator\": true,\n    \"FirstBusinessPartnerUUID\": \"{{C-CustomerUUID}}\",\n    \"SecondBusinessPartnerUUID\": \"{{C-ContactPersonUUID}}\",\n    \"ContactPerson\": {\n        \"BusinessFunctionTypeCode\": \"0015\",\n        \"BusinessDepartmentCode\": \"0002\",\n        \"VIPReasonCode\": \"A\",\n        \"ContactPersonBusinessAddressInformation\": {\n            \"OrganisationAddressUUID\": \"{{P-CustomerAddressInfoUUID}}\",\n            \"ContactPersonBusinessAddress\": {\n                \"DepartmentName\": \"Sales Department\",\n                \"FunctionalTitleName\": \"Sales Representative\"\n            },\n            \"ContactPersonBusinessPhone\": {\n                \"FormattedNumberDescription\": \"+1 (716) 482-4895\"\n            },\n            \"ContactPersonBusinessEMail\": {\n                \"URI\": \"marc.fjaellstroem.customerOAC@bydmail.com\"\n            }\n        }\n    }\n}"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khbusinesspartnerrelationship/BusinessPartnerRelationshipCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khbusinesspartnerrelationship",
								"BusinessPartnerRelationshipCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get contact person relationship",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"pm.environment.set(\"C-BuPaRelationshipUUID\", jsonResponse.d.results[0].UUID);",
									"pm.environment.set(\"C-BuPaRelationshipObjectID\", jsonResponse.d.results[0].ObjectID);",
									"",
									"// Validations",
									"pm.test(jsonResponse.d.results[0].CategoryCodeText + \" between \" + jsonResponse.d.results[0].FirstBusinessPartnerInternalID + \" (\" + jsonResponse.d.results[0].FirstBusinessPartnerFormattedName + \") and \" + jsonResponse.d.results[0].SecondBusinessPartnerInternalID + \" (\" + jsonResponse.d.results[0].SecondBusinessPartnerFormattedName + \") created\", function () { pm.response.to.have.status(200) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khbusinesspartnerrelationship/BusinessPartnerRelationshipCollection?$format=json&$filter=CategoryCode eq 'BUR001' and FirstBusinessPartnerInternalID eq '{{C-CustomerID}}' and SecondBusinessPartnerInternalID eq '{{C-ContactPersonID}}'&$inlinecount=allpages&$top=10&$expand=FirstBusinessPartnerIdentification,SecondBusinessPartnerIdentification,ContactPerson/ContactPersonBusinessAddressInformation/ContactPersonOrganisationFormattedAddress,ContactPerson/ContactPersonBusinessAddressInformation/ContactPersonBusinessAddress,ContactPerson/ContactPersonBusinessAddressInformation/ContactPersonBusinessCommunicationPreference,ContactPerson/ContactPersonBusinessAddressInformation/ContactPersonBusinessPhone,ContactPerson/ContactPersonBusinessAddressInformation/ContactPersonBusinessMobilePhone,ContactPerson/ContactPersonBusinessAddressInformation/ContactPersonBusinessEMail",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khbusinesspartnerrelationship",
								"BusinessPartnerRelationshipCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$filter",
									"value": "CategoryCode eq 'BUR001' and FirstBusinessPartnerInternalID eq '{{C-CustomerID}}' and SecondBusinessPartnerInternalID eq '{{C-ContactPersonID}}'",
									"description": "CategoryCode eq 'BUR001' and FirstBusinessPartnerInternalID eq '{{BP-CustomerID}}'"
								},
								{
									"key": "$inlinecount",
									"value": "allpages"
								},
								{
									"key": "$top",
									"value": "10"
								},
								{
									"key": "$expand",
									"value": "FirstBusinessPartnerIdentification,SecondBusinessPartnerIdentification,ContactPerson/ContactPersonBusinessAddressInformation/ContactPersonOrganisationFormattedAddress,ContactPerson/ContactPersonBusinessAddressInformation/ContactPersonBusinessAddress,ContactPerson/ContactPersonBusinessAddressInformation/ContactPersonBusinessCommunicationPreference,ContactPerson/ContactPersonBusinessAddressInformation/ContactPersonBusinessPhone,ContactPerson/ContactPersonBusinessAddressInformation/ContactPersonBusinessMobilePhone,ContactPerson/ContactPersonBusinessAddressInformation/ContactPersonBusinessEMail"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get employee UUID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"BP-EmployeeUUID\", jsonResponse.d.results[0].UUID);",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"pm.test(\"Employee UUID received\", function () { pm.response.to.have.status(200); pm.response.to.have.header(\"x-csrf-token\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khemployee/EmployeeCollection?$format=json&$filter=EmployeeID eq '{{BP-EmployeeID}}'&$inlinecount=allpages&$top=10&$select=ObjectID,UUID,InternalID,EmployeeID,FormattedName",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khemployee",
								"EmployeeCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "",
									"description": "AttachmentFolder contains the employee image",
									"disabled": true
								},
								{
									"key": "$filter",
									"value": "EmployeeID eq '{{BP-EmployeeID}}'"
								},
								{
									"key": "$inlinecount",
									"value": "allpages"
								},
								{
									"key": "$top",
									"value": "10"
								},
								{
									"key": "$select",
									"value": "ObjectID,UUID,InternalID,EmployeeID,FormattedName"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create customer employee responsible",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Employee \" + jsonResponse.d.results.EmployeeID + \" (\" + jsonResponse.d.results.EmployeeFormattedName + \") assigned as responsible employee\", function () { pm.response.to.have.status(201) });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ParentObjectID\": \"{{C-CustomerObjectID}}\",\n    \"EmployeeUUID\": \"{{BP-EmployeeUUID}}\",\n    \"PartyRoleCode\": \"142\"\n}"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcustomer/EmployeeResponsibleCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcustomer",
								"EmployeeResponsibleCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create tax data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Tax number created for country \" + jsonResponse.d.results.CountryCode, function () { pm.response.to.have.status(201) });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ParentObjectID\": \"{{C-CustomerObjectID}}\",\n\t\"CountryCode\": \"US\",\n\t\"TaxNumberTypeCode\": \"4\",\n    \"TaxNumberID\": \"12345678\"\n}"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcustomer/TaxNumberCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcustomer",
								"TaxNumberCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create tax exemption",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Tax exemption created for country \" + jsonResponse.d.results.CountryCode, function () { pm.response.to.have.status(201) });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ParentObjectID\": \"{{C-CustomerObjectID}}\",\n\t\"CountryCode\": \"US\",\n\t\"RegionCode\": \"\",\n\t\"TaxTypeCode\": \"1\",\n    \"ReasonCode\": \"M\"\n}"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcustomer/TaxExemptionCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcustomer",
								"TaxExemptionCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create bank data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Bank details created\", function () { pm.response.to.have.status(201) });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ParentObjectID\": \"{{C-CustomerObjectID}}\",\n\t\"BankInternalID\": \"67\",\n    \"BankAccountID\": \"12345678\",\n    \"BankAccountIDCheckDigitValue\": \"12\",\n    \"BankAccountHolderName\": \"OData Analytics Corp\",\n\t\"BankAccountStandardID\": \"\"\n}"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcustomer/BankDetailsCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcustomer",
								"BankDetailsCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Activate customer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Customer \" + jsonResponse.d.results.InternalID + \" activated\", function () { pm.response.to.have.status(200) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcustomer/CustomerActivate?ObjectID='{{C-CustomerObjectID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcustomer",
								"CustomerActivate"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{C-CustomerObjectID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"pm.environment.set(\"C-CustomerID\", jsonResponse.d.results[0].InternalID);",
									"pm.environment.set(\"C-CustomerUUID\", jsonResponse.d.results[0].UUID);",
									"pm.environment.set(\"C-CustomerObjectID\", jsonResponse.d.results[0].ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Customer \" + jsonResponse.d.results[0].InternalID + \" (\" + jsonResponse.d.results[0].BusinessPartnerFormattedName + \") received\", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Status: \" + jsonResponse.d.results[0].LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results[0].LifeCycleStatusCode).to.be.oneOf([\"2\"]) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcustomer/CustomerCollection?$format=json&$expand=EmployeeResponsible,TaxNumber,TaxExemption,BankDetails/NationalBankIdentification&$filter=InternalID eq '{{C-CustomerID}}'&$inlinecount=allpages&$top=10",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcustomer",
								"CustomerCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "EmployeeResponsible,TaxNumber,TaxExemption,BankDetails/NationalBankIdentification"
								},
								{
									"key": "$filter",
									"value": "InternalID eq '{{C-CustomerID}}'"
								},
								{
									"key": "$inlinecount",
									"value": "allpages"
								},
								{
									"key": "$top",
									"value": "10"
								},
								{
									"key": "$select",
									"value": "ObjectID,InternalID,BusinessPartnerFormattedName,AddressInformation",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get sales organization UUID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set environment variables for subsequent OData requests",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"C-SalesOrgUUID\", jsonResponse.d.results[0].UUID);",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"pm.test(\"Sales organisation UUID received\", function () { pm.response.to.have.status(200); pm.response.to.have.header(\"x-csrf-token\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khfunctionalunit/FunctionalUnitCollection?$format=json&$expand=Name,Function/FunctionalRole,Definition&$filter=ID eq '{{C-SalesOrgID}}'&$inlinecount=allpages&$top=10",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khfunctionalunit",
								"FunctionalUnitCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "Name,Function/FunctionalRole,Definition"
								},
								{
									"key": "$filter",
									"value": "ID eq '{{C-SalesOrgID}}'"
								},
								{
									"key": "$inlinecount",
									"value": "allpages"
								},
								{
									"key": "$top",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create customer sales data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Sales data created\", function () { pm.response.to.have.status(201) });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"CustomerUUID\": \"{{C-CustomerUUID}}\",\n    \"SalesOrganisationUUID\": \"{{C-SalesOrgUUID}}\",\n    \"DistributionChannelCode\": \"01\",\n    \"LifeCycleStatusCode\": \"1\",\n    \"DeliveryPriorityCode\": \"3\",\n    \"CompleteDeliveryRequestedIndicator\": false,\n    \"IncotermsCode\": \"EXW\",\n    \"IncotermsLocationName\": \"Cleveland\",\n    \"CustomerGroupCode\": \"\",\n    \"CurrencyCode\": \"USD\",\n    \"PaymentTermsCode\": \"1002\"\n}"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khsalesarrangement/SalesArrangementCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khsalesarrangement",
								"SalesArrangementCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get customer sales data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"pm.test(\"Customer sales data received\", function () { pm.response.to.have.status(200) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khsalesarrangement/SalesArrangementCollection?$format=json&$expand=SalesOrganisationNameByValidity&$filter=CustomerUUID eq guid'{{C-CustomerUUID}}'&$inlinecount=allpages&$top=100",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khsalesarrangement",
								"SalesArrangementCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "SalesOrganisationNameByValidity"
								},
								{
									"key": "$filter",
									"value": "CustomerUUID eq guid'{{C-CustomerUUID}}'"
								},
								{
									"key": "$inlinecount",
									"value": "allpages"
								},
								{
									"key": "$top",
									"value": "100"
								},
								{
									"key": "$select",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Customer (SOAP Web Service APIs)",
			"item": [
				{
					"name": "Create private account (Soap 1.1)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonResponse = xml2Json(responseBody);",
									"",
									"pm.environment.set(\"C-CustomerID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:CustomerBundleMaintainConfirmation_sync_V1'].Customer.InternalID);",
									"",
									"// Validations",
									"pm.test(\"Private Account \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:CustomerBundleMaintainConfirmation_sync_V1'].Customer.InternalID + \" created\", function () { pm.response.to.have.status(200) });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Set Business partner ID of pattern <Prefix>-<UTC datetime>",
									"//let todayDateTime = (new Date()).toISOString().substr(0,19);",
									"//todayDateTime = todayDateTime.replace(\"-\",\"\").replace(\"-\",\"\").replace(\"T\",\"\").replace(\":\",\"\").replace(\":\",\"\");",
									"//var generatedID = pm.environment.get(\"C-Prefix\") + todayDateTime;",
									"//pm.environment.set(\"C-CustomerID\", generatedID);",
									"",
									"// Use internal numbering  => initialize environment variable C-CustomerID",
									"pm.environment.set(\"C-CustomerID\", \"\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{CommunicationUserPW}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{CommunicationUser}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\n    <soapenv:Header/>\n    <soapenv:Body>\n        <glob:CustomerBundleMaintainRequest_sync_V1>\n            <BasicMessageHeader>\n                <!--<UUID></UUID>-->\n            </BasicMessageHeader>\n            <Customer actionCode=\"01\" textListCompleteTransmissionIndicator=\"true\">\n                <!--<InternalID>{{C-CustomerID}}</InternalID-->\n                <CategoryCode>1</CategoryCode>\n                <ProspectIndicator>false</ProspectIndicator>\n                <CustomerIndicator>true</CustomerIndicator>\n                <LifeCycleStatusCode>2</LifeCycleStatusCode>\n                <!-- set the status during Create -->\n                <!-- General data -->\n                <Person>\n                    <FormOfAddressCode>0002</FormOfAddressCode>\n                    <AcademicTitleCode>0003</AcademicTitleCode>\n                    <GivenName>Carl</GivenName>\n                    <MiddleName></MiddleName>\n                    <FamilyName>Fjällström</FamilyName>\n                    <BirthName></BirthName>\n                    <NickName></NickName>\n                    <NameFormatCountryCode>US</NameFormatCountryCode>\n                    <GenderCode>1</GenderCode>\n                    <BirthDate>1974-07-27</BirthDate>\n                    <NonVerbalCommunicationLanguageCode>EN</NonVerbalCommunicationLanguageCode>\n                    <OccupationCode>0017</OccupationCode>\n                </Person>\n                <VerbalCommunicationLanguageCode>EN</VerbalCommunicationLanguageCode>\n                <ContactAllowedCode>3</ContactAllowedCode>\n                <LegalCompetenceIndicator>true</LegalCompetenceIndicator>\n                <ABCClassificationCode>A</ABCClassificationCode>\n                <NielsenRegionCode>01</NielsenRegionCode>\n                <IndustrialSectorCode>11</IndustrialSectorCode>\n                <!-- Maintain adress -->\n                <AddressInformation actionCode=\"01\" addressUsageListCompleteTransmissionIndicator=\"true\">\n                    <ObjectNodeSenderTechnicalID>002</ObjectNodeSenderTechnicalID>\n                    <AddressUsage actionCode=\"01\">\n                        <ObjectNodeSenderTechnicalID>003</ObjectNodeSenderTechnicalID>\n                        <AddressUsageCode>XXDEFAULT</AddressUsageCode>\n                        <DefaultIndicator>false</DefaultIndicator>\n                    </AddressUsage>\n                    <Address actionCode=\"01\" telephoneListCompleteTransmissionIndicator=\"true\">\n                        <PreferredCommunicationMediumTypeCode>LET</PreferredCommunicationMediumTypeCode>\n                        <EmailURI>carl.fjaellstroem@bydmail.com</EmailURI>\n                        <FacsimileFormattedNumberDescription>+1 (716) 482-48100</FacsimileFormattedNumberDescription>\n                        <PostalAddress>\n                            <CountryCode>US</CountryCode>\n                            <RegionCode listID=\"US\">NY</RegionCode>\n                            <CityName>Buffalo</CityName>\n                            <StreetPostalCode>14204</StreetPostalCode>\n                            <StreetName>Seneca Street</StreetName>\n                            <HouseID>147</HouseID>\n                            <TaxJurisdictionCode listID=\"US\">NY</TaxJurisdictionCode>\n                            <TimeZoneCode>EST</TimeZoneCode>\n                        </PostalAddress>\n                        <Telephone>\n                            <FormattedNumberDescription>+1 (716) 482-48101</FormattedNumberDescription>\n                            <MobilePhoneNumberIndicator>true</MobilePhoneNumberIndicator>\n                        </Telephone>\n                        <Telephone>\n                            <FormattedNumberDescription>+1 (716) 482-48103</FormattedNumberDescription>\n                            <MobilePhoneNumberIndicator>false</MobilePhoneNumberIndicator>\n                        </Telephone>\n                        <WebURI>https://www.sap.com/community/topics/business-bydesign.html</WebURI>\n                    </Address>\n                </AddressInformation>\n                <!-- Create relations to existing business partners -->\n                <Relationship actionCode=\"01\">\n                    <RelationshipBusinessPartnerInternalID>CP100110</RelationshipBusinessPartnerInternalID>\n                    <RoleCode>BURC01-1</RoleCode>\n                    <!-- \"is Shareholder of\" -->\n        \n                </Relationship>\n                <Relationship actionCode=\"01\">\n                    <RelationshipBusinessPartnerInternalID>CP100110</RelationshipBusinessPartnerInternalID>\n                    <RoleCode>CRMH20-2</RoleCode>\n                    <!-- \"Is Contract Release Authorized Party For of\" -->\n        \n                </Relationship>\n                <!-- Add account notes, financial data notes or internal/external sales notes -->\n                <Text actionCode=\"01\">\n                    <ObjectNodeSenderTechnicalID>019</ObjectNodeSenderTechnicalID>\n                    <TypeCode>10034</TypeCode>\n                    <!-- Account note -->\n                    <ContentText>Some text...</ContentText>\n                </Text>\n                <!-- Maintain customer attachmens like documents, images, links... -->\n                <AttachmentFolder DocumentListCompleteTransmissionIndicator=\"true\" ActionCode=\"01\">\n                    <!-- Link attachment-->\n                    <Document ActionCode=\"01\">\n                        <VisibleIndicator>true</VisibleIndicator>\n                        <CategoryCode>3</CategoryCode>\n                        <TypeCode>10001</TypeCode>\n                        <Name>SAP ByDesign Community</Name>\n                        <AlternativeName>SAP ByDesign Community</AlternativeName>\n                        <Description>SAP Community for SAP Business ByDesign</Description>\n                        <ExternalLinkWebURI>https://www.sap.com/community/topics/business-bydesign.html</ExternalLinkWebURI>\n                        <FileContentURI></FileContentURI>\n                    </Document>\n                </AttachmentFolder>\n                <DuplicateCheckApplyIndicator>false</DuplicateCheckApplyIndicator>\n            </Customer>\n        </glob:CustomerBundleMaintainRequest_sync_V1>\n    </soapenv:Body>\n</soapenv:Envelope>"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managecustomerin1",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"bc",
								"srt",
								"scs",
								"sap",
								"managecustomerin1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Query private account (Soap 1.1)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonResponse = xml2Json(responseBody);",
									"",
									"//pm.environment.set(\"PrivateAccountInternalID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:CustomerByElementsResponse_sync'].Customer.InternalID);",
									"",
									"// Validations",
									"pm.test(\"Private Account: \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:CustomerByElementsResponse_sync'].Customer.InternalID + \" found and retrieved\", function () { pm.response.to.have.status(200) });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{CommunicationUserPW}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{CommunicationUser}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/xml",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\n    <soapenv:Header/>\n    <soapenv:Body>\n        <glob:CustomerByElementsQuery_sync>\n            <CustomerSelectionByElements>\n                <SelectionByInternalID>\n                    <InclusionExclusionCode>I</InclusionExclusionCode>\n                    <IntervalBoundaryTypeCode>1</IntervalBoundaryTypeCode>\n                    <LowerBoundaryInternalID>{{C-CustomerID}}</LowerBoundaryInternalID>\n                </SelectionByInternalID>\n            </CustomerSelectionByElements>\n            <ProcessingConditions>\n                <QueryHitsMaximumNumberValue>10</QueryHitsMaximumNumberValue>\n                <QueryHitsUnlimitedIndicator>false</QueryHitsUnlimitedIndicator>\n                <LastReturnedObjectID></LastReturnedObjectID>\n            </ProcessingConditions>\n            <RequestedElements customerTransmissionRequestCode=\"1\">\n                <Customer \n            \t\taddressInformationTransmissionRequestCode=\"1\" \n            \t\trelationshipTransmissionRequestCode=\"1\" \n            \t\tcontactPersonTransmissionRequestCode=\"4\" \n            \t\tcommunicationArrangementTransmissionRequestCode=\"4\" \n            \t\tdirectResponsibilityTransmissionRequestCode=\"4\" \n            \t\tsalesArrangementTransmissionRequestCode=\"1\" \n            \t\tbankDetailsTransmissionRequestCode=\"1\" \n            \t\tpaymentCardDetailsTransmissionRequestCode=\"4\" \n            \t\tpaymentDataTransmissionRequestCode=\"1\" \n            \t\tpersonTransmissionRequestCode=\"1\" \n            \t\ttaxNumberTransmissionRequestCode=\"4\" \n            \t\tgeneralProductTaxExemptionTransmissionRequestCode=\"4\" \n            \t\toperatingHoursInfoTransmissionRequestCode=\"4\" \n            \t\torganisationTransmissionRequestCode=\"4\" \n            \t\ttextTransmissionRequestCode=\"1\" \n            \t\tattachmentFolderTransmissionRequestCode=\"1\">\n            \t</Customer>\n            </RequestedElements>\n        </glob:CustomerByElementsQuery_sync>\n    </soapenv:Body>\n</soapenv:Envelope>"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/querycustomerin1",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"bc",
								"srt",
								"scs",
								"sap",
								"querycustomerin1"
							]
						},
						"description": "Query Account ( Soap )"
					},
					"response": []
				},
				{
					"name": "Create Corporate Account (Soap 1.1)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonResponse = xml2Json(responseBody);",
									"",
									"pm.environment.set(\"C-CustomerID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:CustomerBundleMaintainConfirmation_sync_V1'].Customer.InternalID);",
									"",
									"// Validations",
									"pm.test(\"Corporate Account \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:CustomerBundleMaintainConfirmation_sync_V1'].Customer.InternalID + \" created\", function () { pm.response.to.have.status(200) });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Set Business partner ID of pattern <Prefix>-<UTC datetime>",
									"//let todayDateTime = (new Date()).toISOString().substr(0,19);",
									"//todayDateTime = todayDateTime.replace(\"-\",\"\").replace(\"-\",\"\").replace(\"T\",\"\").replace(\":\",\"\").replace(\":\",\"\");",
									"//var generatedID = pm.environment.get(\"C-Prefix\") + todayDateTime;",
									"//pm.environment.set(\"C-CustomerID\", generatedID);",
									"",
									"// Use internal numbering  => initialize environment variable C-CustomerID",
									"pm.environment.set(\"C-CustomerID\", \"\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{CommunicationUserPW}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{CommunicationUser}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\n    <soapenv:Header/>\n    <soapenv:Body>\n        <glob:CustomerBundleMaintainRequest_sync_V1>\n            <BasicMessageHeader>\n                <!--<UUID></UUID>-->\n            </BasicMessageHeader>\n            <Customer actionCode=\"01\" textListCompleteTransmissionIndicator=\"true\">\n                <!-- <InternalID>{{C-CustomerID}}</InternalID> -->\n                <!-- Enter a Unique ID -->\n                <CategoryCode>2</CategoryCode>\n                <!-- Code 2 marks as coorperate account -->\n                <ProspectIndicator>false</ProspectIndicator>\n                <CustomerIndicator>true</CustomerIndicator>\n                <LifeCycleStatusCode>2</LifeCycleStatusCode>\n                <!-- set the status during Create -->\n                <!-- General information -->\n                <Organisation>\n                    <CompanyLegalFormCode>14</CompanyLegalFormCode>\n                    <FirstLineName>SOAP Hands-on Corp</FirstLineName>\n                    <SecondLineName></SecondLineName>\n                </Organisation>\n                <ContactAllowedCode>1</ContactAllowedCode>\n                <LegalCompetenceIndicator>true</LegalCompetenceIndicator>\n                <!--  Enter a Unique DunAndBradstreetNumberID & GlobalLocationNumberID -->\n                <!--  <DunAndBradstreetNumberID>111164758</DunAndBradstreetNumberID><GlobalLocationNumberID>111164758</GlobalLocationNumberID> -->\n                <ABCClassificationCode>A</ABCClassificationCode>\n                <NielsenRegionCode>01</NielsenRegionCode>\n                <IndustrialSectorCode>11</IndustrialSectorCode>\n                <!-- Maintain company adress information-->\n                <AddressInformation actionCode=\"01\" addressUsageListCompleteTransmissionIndicator=\"true\">\n                    <ObjectNodeSenderTechnicalID>02</ObjectNodeSenderTechnicalID>\n                    <AddressUsage actionCode=\"01\">\n                        <ObjectNodeSenderTechnicalID>03</ObjectNodeSenderTechnicalID>\n                        <AddressUsageCode>XXDEFAULT</AddressUsageCode>\n                        <DefaultIndicator>false</DefaultIndicator>\n                    </AddressUsage>\n                    <Address actionCode=\"01\" telephoneListCompleteTransmissionIndicator=\"true\">\n                        <CorrespondenceLanguageCode>EN</CorrespondenceLanguageCode>\n                        <PreferredCommunicationMediumTypeCode>LET</PreferredCommunicationMediumTypeCode>\n                        <EmailURI>customerSHC@bydmail.com</EmailURI>\n                        <FacsimileFormattedNumberDescription>+1 7164824900</FacsimileFormattedNumberDescription>\n                        <PostalAddress>\n                            <CountryCode>US</CountryCode>\n                            <RegionCode listID=\"US\">NY</RegionCode>\n                            <CityName>Buffalo</CityName>\n                            <StreetPostalCode>14204</StreetPostalCode>\n                            <StreetName>Seneca Street</StreetName>\n                            <HouseID>150</HouseID>\n                            <TaxJurisdictionCode listID=\"US\">NY</TaxJurisdictionCode>\n                            <TimeZoneCode>EST</TimeZoneCode>\n                        </PostalAddress>\n                        <Telephone>\n                            <ObjectNodeSenderTechnicalID>04</ObjectNodeSenderTechnicalID>\n                            <FormattedNumberDescription>+1 7164824901</FormattedNumberDescription>\n                            <MobilePhoneNumberIndicator>true</MobilePhoneNumberIndicator>\n                        </Telephone>\n                        <Telephone>\n                            <ObjectNodeSenderTechnicalID>05</ObjectNodeSenderTechnicalID>\n                            <FormattedNumberDescription>+1 7164824902</FormattedNumberDescription>\n                            <MobilePhoneNumberIndicator>false</MobilePhoneNumberIndicator>\n                        </Telephone>\n                        <WebURI>https://www.sap.com/community/topics/business-bydesign.html</WebURI>\n                    </Address>\n                </AddressInformation>\n                <!-- Maintain relations to existing business partners -->\n                <Relationship actionCode=\"01\">\n                    <RelationshipBusinessPartnerInternalID>CP100110</RelationshipBusinessPartnerInternalID>\n                    <RoleCode>BURC01-2</RoleCode>\n                </Relationship>\n                <!-- Manage account contact person relations -->\n                <ContactPerson actionCode=\"01\" workplaceTelephoneListCompleteTransmissionIndicator=\"true\">\n                    <ObjectNodeSenderTechnicalID>07</ObjectNodeSenderTechnicalID>\n                    <DefaultContactPersonIndicator>true</DefaultContactPersonIndicator>\n                    <FormOfAddressCode>0001</FormOfAddressCode>\n                    <AcademicTitleCode>0002</AcademicTitleCode>\n                    <GivenName>Emilia</GivenName>\n                    <MiddleName></MiddleName>\n                    <FamilyName>Fjällström</FamilyName>\n                    <BirthName></BirthName>\n                    <NickName></NickName>\n                    <GenderCode>2</GenderCode>\n                    <BirthDate>1999-01-24</BirthDate>\n                    <NonVerbalCommunicationLanguageCode>DE</NonVerbalCommunicationLanguageCode>\n                    <OccupationCode>0004</OccupationCode>\n                    <BusinessPartnerFunctionTypeCode>0028</BusinessPartnerFunctionTypeCode>\n                    <BusinessPartnerFunctionalAreaCode>0003</BusinessPartnerFunctionalAreaCode>\n                    <VIPReasonCode>A</VIPReasonCode>\n                    <MaritalStatusCode>1</MaritalStatusCode>\n                    <WorkplacePreferredCommunicationMediumTypeCode>INT</WorkplacePreferredCommunicationMediumTypeCode>\n                    <WorkplaceEmailURI>emilia.fjaellstroem.customerSHC@bydmail.com</WorkplaceEmailURI>\n                    <WorkplaceFacsimileFormattedNumberDescription>+1 7164824903</WorkplaceFacsimileFormattedNumberDescription>\n                    <WorkplaceTelephone>\n                        <ObjectNodeSenderTechnicalID>08</ObjectNodeSenderTechnicalID>\n                        <FormattedNumberDescription>+1 7164824904</FormattedNumberDescription>\n                        <MobilePhoneNumberIndicator>false</MobilePhoneNumberIndicator>\n                    </WorkplaceTelephone>\n                    <WorkplaceWebURI>https://www.sap.com/community/topics/business-bydesign.html</WorkplaceWebURI>\n                    <WorkplaceFunctionalTitleName>Manager</WorkplaceFunctionalTitleName>\n                    <WorkplaceDepartmentName>Contact Department</WorkplaceDepartmentName>\n                    <WorkplaceBuildingID>Buff01</WorkplaceBuildingID>\n                    <WorkplaceFloorID>100</WorkplaceFloorID>\n                    <WorkplaceRoomID>R101</WorkplaceRoomID>\n                    <!--Private Address-->\n                    <AddressInformation actionCode=\"01\">\n                        <Address actionCode=\"01\" telephoneListCompleteTransmissionIndicator=\"true\">\n                            <ObjectNodeSenderTechnicalID>09</ObjectNodeSenderTechnicalID>\n                            <EmailURI>emilia.fjaellstroem@bydmail.com</EmailURI>\n                            <FacsimileFormattedNumberDescription>+1 7164824905</FacsimileFormattedNumberDescription>\n                            <PostalAddress>\n                                <CountryCode>US</CountryCode>\n                                <RegionCode listID=\"US\">NY</RegionCode>\n                                <CityName>Buffalo</CityName>\n                                <StreetPostalCode>14204</StreetPostalCode>\n                                <StreetName>Seneca Street</StreetName>\n                                <HouseID>160</HouseID>\n                                <TaxJurisdictionCode listID=\"US\">NY</TaxJurisdictionCode>\n                                <TimeZoneCode>EST</TimeZoneCode>\n                            </PostalAddress>\n                            <Telephone>\n                                <FormattedNumberDescription>+1 7164824863</FormattedNumberDescription>\n                                <MobilePhoneNumberIndicator>false</MobilePhoneNumberIndicator>\n                            </Telephone>\n                        </Address>\n                        <AddressUsage actionCode=\"01\">\n                            <ObjectNodeSenderTechnicalID>11</ObjectNodeSenderTechnicalID>\n                            <AddressUsageCode>XXDEFAULT</AddressUsageCode>\n                            <DefaultIndicator>false</DefaultIndicator>\n                        </AddressUsage>\n                    </AddressInformation>\n                </ContactPerson>\n                <!-- Assign employees as directly responsible for the account-->\n                <DirectResponsibility actionCode=\"01\">\n                    <ObjectNodeSenderTechnicalID>15</ObjectNodeSenderTechnicalID>\n                    <PartyRoleCode>145</PartyRoleCode>\n                    <EmployeeID>{{BP-EmployeeID}}</EmployeeID>\n                </DirectResponsibility>\n                <!-- Maintain account sales data -->\n                <SalesArrangement>\n                    <ObjectNodeSenderTechnicalID>16</ObjectNodeSenderTechnicalID>\n                    <SalesOrganisationID>{{C-SalesOrgID}}</SalesOrganisationID>\n                    <DistributionChannelCode>01</DistributionChannelCode>\n                    <Incoterms>\n                        <ClassificationCode>CFR</ClassificationCode>\n                        <TransferLocationName>FRA</TransferLocationName>\n                    </Incoterms>\n                    <DeliveryPriorityCode>1</DeliveryPriorityCode>\n                    <CompleteDeliveryRequestedIndicator>true</CompleteDeliveryRequestedIndicator>\n                    <CurrencyCode>USD</CurrencyCode>\n                    <CustomerGroupCode>01</CustomerGroupCode>\n                    <CashDiscountTermsCode>1001</CashDiscountTermsCode>\n                </SalesArrangement>\n                <InvoicingBlockingReasonCode>03</InvoicingBlockingReasonCode>\n                <!-- 03: Pricing incomplete -->\n                <CustomerTransactionDocumentFulfilmentBlockingReasonCode>91</CustomerTransactionDocumentFulfilmentBlockingReasonCode>\n                <!-- 91: Customer request -->\n                <CustomerBlockingReasonCode>05</CustomerBlockingReasonCode>\n                <!-- 05: Always Prospect -->\n                <!-- Maintain account tax numbers -->\n                <TaxNumber actionCode=\"01\">\n                    <ObjectNodeSenderTechnicalID>21</ObjectNodeSenderTechnicalID>\n                    <CountryCode>US</CountryCode>\n                    <TaxIdentificationNumberTypeCode>1</TaxIdentificationNumberTypeCode>\n                    <PartyTaxID>12124444</PartyTaxID>\n                </TaxNumber>\n                <!-- Maintain account contact hours -->\n                <OperatingHoursInformation actionCode=\"01\" recurringDayProgrammeListCompleteTransmissionIndicator=\"true\">\n                    <ObjectNodeSenderTechnicalID>23</ObjectNodeSenderTechnicalID>\n                    <RoleCode>A</RoleCode>\n                    <RecurringDayProgramme operatingHoursListCompleteTransmissionIndicator=\"true\">\n                        <ObjectNodeSenderTechnicalID>22</ObjectNodeSenderTechnicalID>\n                        <WeekdaySelection>\n                            <MondayIndicator>true</MondayIndicator>\n                            <TuesdayIndicator>true</TuesdayIndicator>\n                            <WednesdayIndicator>true</WednesdayIndicator>\n                            <ThursdayIndicator>true</ThursdayIndicator>\n                            <FridayIndicator>true</FridayIndicator>\n                            <SaturdayIndicator>false</SaturdayIndicator>\n                            <SundayIndicator>false</SundayIndicator>\n                        </WeekdaySelection>\n                        <OperatingHours>\n                            <ObjectNodeSenderTechnicalID>23</ObjectNodeSenderTechnicalID>\n                            <TimePeriod>\n                                <StartTime>09:00:00</StartTime>\n                                <EndTime>18:00:00</EndTime>\n                            </TimePeriod>\n                        </OperatingHours>\n                    </RecurringDayProgramme>\n                </OperatingHoursInformation>\n                <!-- Maintain customer attachmens like documents, images, links... -->\n                <AttachmentFolder DocumentListCompleteTransmissionIndicator=\"true\" ActionCode=\"01\">\n                    <!-- Link attachment-->\n                    <Document ActionCode=\"01\">\n                        <VisibleIndicator>true</VisibleIndicator>\n                        <CategoryCode>3</CategoryCode>\n                        <TypeCode>10001</TypeCode>\n                        <Name>SAP ByDesign Community</Name>\n                        <AlternativeName>SAP ByDesign Community</AlternativeName>\n                        <Description>SAP Community for SAP Business ByDesign</Description>\n                        <ExternalLinkWebURI>https://www.sap.com/community/topics/business-bydesign.html</ExternalLinkWebURI>\n                        <FileContentURI></FileContentURI>\n                    </Document>\n                </AttachmentFolder>\n                <!-- Add account notes, financial data notes or internal/external sales notes -->\n                <Text actionCode=\"01\">\n                    <ObjectNodeSenderTechnicalID>24</ObjectNodeSenderTechnicalID>\n                    <TypeCode>10034</TypeCode>\n                    <ContentText>Some account note ...</ContentText>\n                </Text>\n                <DuplicateCheckApplyIndicator>false</DuplicateCheckApplyIndicator>\n            </Customer>\n        </glob:CustomerBundleMaintainRequest_sync_V1>\n    </soapenv:Body>\n</soapenv:Envelope>"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managecustomerin1",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"bc",
								"srt",
								"scs",
								"sap",
								"managecustomerin1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Query corporate account (Soap 1.1)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonResponse = xml2Json(responseBody);",
									"",
									"//pm.environment.set(\"PrivateAccountInternalID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:CustomerByElementsResponse_sync'].Customer.InternalID);",
									"",
									"// Validations",
									"pm.test(\"Coporate Account: \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:CustomerByElementsResponse_sync'].Customer.InternalID + \" found and retrieved\", function () { pm.response.to.have.status(200) });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{CommunicationUserPW}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{CommunicationUser}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "text/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\n    <soapenv:Header/>\n    <soapenv:Body>\n        <glob:CustomerByElementsQuery_sync>\n            <CustomerSelectionByElements>\n                <SelectionByInternalID>\n                    <InclusionExclusionCode>I</InclusionExclusionCode>\n                    <IntervalBoundaryTypeCode>1</IntervalBoundaryTypeCode>\n                    <LowerBoundaryInternalID>{{C-CustomerID}}</LowerBoundaryInternalID>\n                </SelectionByInternalID>\n            </CustomerSelectionByElements>\n            <ProcessingConditions>\n                <QueryHitsMaximumNumberValue>10</QueryHitsMaximumNumberValue>\n                <QueryHitsUnlimitedIndicator>false</QueryHitsUnlimitedIndicator>\n                <LastReturnedObjectID></LastReturnedObjectID>\n            </ProcessingConditions>\n            <RequestedElements customerTransmissionRequestCode=\"1\">\n                <Customer \n            \t\taddressInformationTransmissionRequestCode=\"1\" \n            \t\trelationshipTransmissionRequestCode=\"1\" \n            \t\tcontactPersonTransmissionRequestCode=\"1\" \n            \t\tcommunicationArrangementTransmissionRequestCode=\"4\" \n            \t\tdirectResponsibilityTransmissionRequestCode=\"4\" \n            \t\tsalesArrangementTransmissionRequestCode=\"1\" \n            \t\tbankDetailsTransmissionRequestCode=\"1\" \n            \t\tpaymentCardDetailsTransmissionRequestCode=\"4\" \n            \t\tpaymentDataTransmissionRequestCode=\"1\" \n            \t\tpersonTransmissionRequestCode=\"1\" \n            \t\ttaxNumberTransmissionRequestCode=\"4\" \n            \t\tgeneralProductTaxExemptionTransmissionRequestCode=\"4\" \n            \t\toperatingHoursInfoTransmissionRequestCode=\"4\" \n            \t\torganisationTransmissionRequestCode=\"4\" \n            \t\ttextTransmissionRequestCode=\"1\" \n            \t\tattachmentFolderTransmissionRequestCode=\"1\">\n            \t</Customer>\n            </RequestedElements>\n        </glob:CustomerByElementsQuery_sync>\n    </soapenv:Body>\n</soapenv:Envelope>"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/querycustomerin1",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"bc",
								"srt",
								"scs",
								"sap",
								"querycustomerin1"
							]
						},
						"description": "Query Account ( Soap )"
					},
					"response": []
				}
			]
		},
		{
			"name": "Supplier (read)",
			"item": [
				{
					"name": "Get supplier general data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"var jsonResponse = pm.response.json();",
									"pm.test(\"Cross site request forgery token received\", function () { pm.response.to.have.status(200); pm.response.to.have.header(\"x-csrf-token\") });",
									"pm.test(\"Supplier \" + jsonResponse.d.results[0].InternalID + \" returned\", function () { pm.response.to.have.status(200) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khsupplier/SupplierCollection?$format=json&$expand=Role,Identification,Note,TaxNumber&$filter=InternalID eq '{{BP-SupplierID}}'&$inlinecount=allpages&$top=10",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khsupplier",
								"SupplierCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "Role,Identification,Note,TaxNumber"
								},
								{
									"key": "$filter",
									"value": "InternalID eq '{{BP-SupplierID}}'"
								},
								{
									"key": "$inlinecount",
									"value": "allpages"
								},
								{
									"key": "$top",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get supplier address information",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"var jsonResponse = pm.response.json();",
									"pm.test(\"Cross site request forgery token received\", function () { pm.response.to.have.status(200); pm.response.to.have.header(\"x-csrf-token\") });",
									"pm.test(\"Supplier \" + jsonResponse.d.results[0].InternalID + \" returned\", function () { pm.response.to.have.status(200) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khsupplier/SupplierCollection?$format=json&$expand=Role,Identification,CurrentDefaultAddressInformation/CurrentDefaultFormattedAddress,CurrentDefaultAddressInformation/CurrentDefaultPostalAddress,CurrentDefaultAddressInformation/CurrentDefaultConventionalPhone,CurrentDefaultAddressInformation/CurrentDefaultMobilePhone,CurrentDefaultAddressInformation/CurrentDefaultFacsimile,CurrentDefaultAddressInformation/CurrentDefaultEMail,CurrentDefaultAddressInformation/CurrentDefaultWebSite,CurrentDefaultAddressInformation/CurrentDefaultCommunicationPreference&$filter=InternalID eq '{{BP-SupplierID}}'&$inlinecount=allpages&$top=10&$select=ObjectID,InternalID,BusinessPartnerFormattedName,CurrentDefaultAddressInformation",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khsupplier",
								"SupplierCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "Role,Identification,CurrentDefaultAddressInformation/CurrentDefaultFormattedAddress,CurrentDefaultAddressInformation/CurrentDefaultPostalAddress,CurrentDefaultAddressInformation/CurrentDefaultConventionalPhone,CurrentDefaultAddressInformation/CurrentDefaultMobilePhone,CurrentDefaultAddressInformation/CurrentDefaultFacsimile,CurrentDefaultAddressInformation/CurrentDefaultEMail,CurrentDefaultAddressInformation/CurrentDefaultWebSite,CurrentDefaultAddressInformation/CurrentDefaultCommunicationPreference"
								},
								{
									"key": "$filter",
									"value": "InternalID eq '{{BP-SupplierID}}'"
								},
								{
									"key": "$inlinecount",
									"value": "allpages"
								},
								{
									"key": "$top",
									"value": "10"
								},
								{
									"key": "$select",
									"value": "ObjectID,InternalID,BusinessPartnerFormattedName,CurrentDefaultAddressInformation"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get supplier bank data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"var jsonResponse = pm.response.json();",
									"pm.test(\"Cross site request forgery token received\", function () { pm.response.to.have.status(200); pm.response.to.have.header(\"x-csrf-token\") });",
									"pm.test(\"Supplier \" + jsonResponse.d.results[0].InternalID + \" returned\", function () { pm.response.to.have.status(200) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khsupplier/SupplierCollection?$format=json&$expand=BankDetails/NationalBankIdentification&$filter=InternalID eq '{{BP-SupplierID}}'&$inlinecount=allpages&$top=10&$select=ObjectID,InternalID,BusinessPartnerFormattedName,BankDetails",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khsupplier",
								"SupplierCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "BankDetails/NationalBankIdentification"
								},
								{
									"key": "$filter",
									"value": "InternalID eq '{{BP-SupplierID}}'"
								},
								{
									"key": "$inlinecount",
									"value": "allpages"
								},
								{
									"key": "$top",
									"value": "10"
								},
								{
									"key": "$select",
									"value": "ObjectID,InternalID,BusinessPartnerFormattedName,BankDetails"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get supplier tax data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"var jsonResponse = pm.response.json();",
									"pm.test(\"Cross site request forgery token received\", function () { pm.response.to.have.status(200); pm.response.to.have.header(\"x-csrf-token\") });",
									"pm.test(\"Supplier \" + jsonResponse.d.results[0].InternalID + \" returned\", function () { pm.response.to.have.status(200) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khsupplier/SupplierCollection?$format=json&$expand=TaxNumber,TaxExemption,WithholdingTaxClassification&$filter=InternalID eq '{{BP-SupplierID}}'&$inlinecount=allpages&$top=10&$select=ObjectID,InternalID,BusinessPartnerFormattedName,TaxNumber,TaxExemption,WithholdingTaxClassification",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khsupplier",
								"SupplierCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "TaxNumber,TaxExemption,WithholdingTaxClassification"
								},
								{
									"key": "$filter",
									"value": "InternalID eq '{{BP-SupplierID}}'"
								},
								{
									"key": "$inlinecount",
									"value": "allpages"
								},
								{
									"key": "$top",
									"value": "10"
								},
								{
									"key": "$select",
									"value": "ObjectID,InternalID,BusinessPartnerFormattedName,TaxNumber,TaxExemption,WithholdingTaxClassification"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get supplier purchasing data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"var jsonResponse = pm.response.json();",
									"pm.test(\"Cross site request forgery token received\", function () { pm.response.to.have.status(200); pm.response.to.have.header(\"x-csrf-token\") });",
									"pm.test(\"Supplier \" + jsonResponse.d.results[0].InternalID + \" returned\", function () { pm.response.to.have.status(200) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khsupplier/SupplierCollection?$format=json&$expand=PurchasingData&$filter=InternalID eq '{{BP-SupplierID}}'&$inlinecount=allpages&$top=10&$select=ObjectID,InternalID,BusinessPartnerFormattedName,PurchasingData",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khsupplier",
								"SupplierCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "PurchasingData"
								},
								{
									"key": "$filter",
									"value": "InternalID eq '{{BP-SupplierID}}'"
								},
								{
									"key": "$inlinecount",
									"value": "allpages"
								},
								{
									"key": "$top",
									"value": "10"
								},
								{
									"key": "$select",
									"value": "ObjectID,InternalID,BusinessPartnerFormattedName,PurchasingData"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Query supplier by tax number",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"var jsonResponse = pm.response.json();",
									"pm.test(\"Cross site request forgery token received\", function () { pm.response.to.have.status(200); pm.response.to.have.header(\"x-csrf-token\") });",
									"pm.test(\"Supplier \" + jsonResponse.d.results[0].InternalID + \" returned\", function () { pm.response.to.have.status(200) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khsupplier/QuerySupplier?NumberOfRows='20'&PartyTaxID='SE999999999901'&TaxCountryCode='SE'&TaxIdentificationNumberTypeCode='1'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khsupplier",
								"QuerySupplier"
							],
							"query": [
								{
									"key": "NumberOfRows",
									"value": "'20'"
								},
								{
									"key": "StartRow",
									"value": "'5'",
									"disabled": true
								},
								{
									"key": "CreatedSinceDate",
									"value": "",
									"disabled": true
								},
								{
									"key": "InternalID",
									"value": null,
									"disabled": true
								},
								{
									"key": "LifeCycleStatusCode",
									"value": null,
									"disabled": true
								},
								{
									"key": "PartyTaxID",
									"value": "'SE999999999901'"
								},
								{
									"key": "TaxCountryCode",
									"value": "'SE'",
									"description": "Sweden"
								},
								{
									"key": "TaxIdentificationNumberTypeCode",
									"value": "'1'",
									"description": "VAT Registration Number"
								},
								{
									"key": "UUID",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search supplier by tax number",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"var jsonResponse = pm.response.json();",
									"pm.test(\"Cross site request forgery token received\", function () { pm.response.to.have.status(200); pm.response.to.have.header(\"x-csrf-token\") });",
									"pm.test(\"Supplier \" + jsonResponse.d.results[0].Supplier.InternalID + \" returned\", function () { pm.response.to.have.status(200) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khsupplier/TaxNumberCollection?$format=json&$expand=Supplier&$search=SE999999999901",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khsupplier",
								"TaxNumberCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "Supplier"
								},
								{
									"key": "$search",
									"value": "SE999999999901"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get supplier tax data by tax number",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Set variables",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"BP-BusinessPartnerObjectID\", jsonResponse.d.results[0].ObjectID);",
									"pm.environment.set(\"BP-BusinessPartnerUUID\", jsonResponse.d.results[0].UUID);",
									"",
									"// Validations",
									"pm.test(\"Cross site request forgery token received\", function () { pm.response.to.have.status(200); pm.response.to.have.header(\"x-csrf-token\") });",
									"pm.test(\"Supplier \" + jsonResponse.d.results[0].Supplier.InternalID + \" returned\", function () { pm.response.to.have.status(200) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khsupplier/TaxNumberCollection?$format=json&$expand=Supplier&$filter=CountryCode eq 'SE' and PartyTaxID eq 'SE999999999901'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khsupplier",
								"TaxNumberCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "Supplier"
								},
								{
									"key": "$filter",
									"value": "CountryCode eq 'SE' and PartyTaxID eq 'SE999999999901'"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Supplier (SOAP Web Service APIs)",
			"item": [
				{
					"name": "Create supplier (Soap 1.1)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonResponse = xml2Json(responseBody);",
									"",
									"pm.environment.set(\"S-SupplierID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SupplierBundleMaintainConfirmation_sync_V1'].Supplier.InternalID);",
									"",
									"// Validations",
									"pm.test(\"Supplier \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SupplierBundleMaintainConfirmation_sync_V1'].Supplier.InternalID + \" created\", function () { pm.response.to.have.status(200) });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Set Business partner ID of pattern <Prefix>-<UTC datetime>",
									"//let todayDateTime = (new Date()).toISOString().substr(0,19);",
									"//todayDateTime = todayDateTime.replace(\"-\",\"\").replace(\"-\",\"\").replace(\"T\",\"\").replace(\":\",\"\").replace(\":\",\"\");",
									"//var generatedID = pm.environment.get(\"C-Prefix\") + todayDateTime;",
									"//pm.environment.set(\"S-SupplierID\", generatedID);",
									"",
									"// Use internal numbering  => initialize environment variable S-SupplierID",
									"pm.environment.set(\"S-SupplierID\", \"\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{CommunicationUserPW}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{CommunicationUser}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\n    <soapenv:Header/>\n    <soapenv:Body>\n        <glob:SupplierBundleMaintainRequest_sync_V1>\n            <BasicMessageHeader>\n                <!--<UUID></UUID>-->\n            </BasicMessageHeader>\n            <Supplier actionCode=\"01\" textListCompleteTransmissionIndicator=\"true\">\n                <!-- General information -->\n                <!-- <InternalID>{{SupplierInternalID}}</InternalID>-->\n                <FirstLineName>SOAP Hands-on Purchasing Corp</FirstLineName>\n                <SecondLineName></SecondLineName>\n                <SupplierIndicator>true</SupplierIndicator>\n                <ABCClassificationCode>A</ABCClassificationCode>\n                <IndustrialSectorCode>11</IndustrialSectorCode>\n                <MinimumOrderValue currencyCode=\"EUR\">3</MinimumOrderValue>\n                <!--  <QualityManagementISOStandardCode>Z01</QualityManagementISOStandardCode><QualityManagementValidToDate>2999-01-24</QualityManagementValidToDate> -->\n                <!-- Maintain company adress information-->\n                <AddressInformation actionCode=\"01\" addressUsageListCompleteTransmissionIndicator=\"true\">\n                    <ObjectNodeSenderTechnicalID>02</ObjectNodeSenderTechnicalID>\n                    <AddressUsage actionCode=\"01\">\n                        <ObjectNodeSenderTechnicalID>03</ObjectNodeSenderTechnicalID>\n                        <AddressUsageCode>XXDEFAULT</AddressUsageCode>\n                        <DefaultIndicator>false</DefaultIndicator>\n                    </AddressUsage>\n                    <Address actionCode=\"01\">\n                        <PostalAddress>\n                            <CountryCode>US</CountryCode>\n                            <RegionCode listID=\"US\">NY</RegionCode>\n                            <CityName>Buffalo</CityName>\n                            <StreetPostalCode>14204</StreetPostalCode>\n                            <StreetName>Seneca Street</StreetName>\n                            <HouseID>170</HouseID>\n                            <TaxJurisdictionCode listID=\"US\">NY</TaxJurisdictionCode>\n                            <TimeZoneCode>EST</TimeZoneCode>\n                        </PostalAddress>\n                        <PhoneFormattedNumberDescription>+1 7164824950</PhoneFormattedNumberDescription>\n                        <FacsimileFormattedNumberDescription>+1 7164824951</FacsimileFormattedNumberDescription>\n                        <EMailURI>supplierSHPC@bydmail.com</EMailURI>\n                        <WebURI>https://www.sap.com/community/topics/business-bydesign.html</WebURI>\n                        <CorrespondenceLanguageCode>EN</CorrespondenceLanguageCode>\n                    </Address>\n                </AddressInformation>\n                <!-- Manage account contact person relations -->\n                <ContactPerson actionCode=\"01\" workplaceTelephoneListCompleteTransmissionIndicator=\"true\">\n                    <ObjectNodeSenderTechnicalID>04</ObjectNodeSenderTechnicalID>\n                    <DefaultContactPersonIndicator>true</DefaultContactPersonIndicator>\n                    <FormOfAddressCode>0001</FormOfAddressCode>\n                    <AcademicTitleCode>0002</AcademicTitleCode>\n                    <GivenName>Laurie</GivenName>\n                    <MiddleName></MiddleName>\n                    <FamilyName>Fjällström</FamilyName>\n                    <BirthName></BirthName>\n                    <NickName></NickName>\n                    <GenderCode>2</GenderCode>\n                    <BirthDate>1997-12-12</BirthDate>\n                    <NonVerbalCommunicationLanguageCode>DE</NonVerbalCommunicationLanguageCode>\n                    <OccupationCode>0004</OccupationCode>\n                    <BusinessPartnerFunctionTypeCode>0028</BusinessPartnerFunctionTypeCode>\n                    <BusinessPartnerFunctionalAreaCode>0003</BusinessPartnerFunctionalAreaCode>\n                    <VIPReasonCode>A</VIPReasonCode>\n                    <MaritalStatusCode>1</MaritalStatusCode>\n                    <LifeCycleStatusCode>2</LifeCycleStatusCode>\n                    <WorkplacePreferredCommunicationMediumTypeCode>LET</WorkplacePreferredCommunicationMediumTypeCode>\n                    <WorkplaceEMailURI>emilia.fjaellstroem.supplierSHPC@bydmail.com</WorkplaceEMailURI>\n                    <WorkplaceFacsimileFormattedNumberDescription>+1 7164824952</WorkplaceFacsimileFormattedNumberDescription>\n                    <WorkplaceTelephone>\n                        <ObjectNodeSenderTechnicalID>05</ObjectNodeSenderTechnicalID>\n                        <FormattedNumberDescription>+1 7164824953</FormattedNumberDescription>\n                        <MobilePhoneNumberIndicator>true</MobilePhoneNumberIndicator>\n                    </WorkplaceTelephone>\n                    <WorkplaceTelephone>\n                        <ObjectNodeSenderTechnicalID>06</ObjectNodeSenderTechnicalID>\n                        <FormattedNumberDescription>+1 7164824954</FormattedNumberDescription>\n                        <MobilePhoneNumberIndicator>false</MobilePhoneNumberIndicator>\n                    </WorkplaceTelephone>\n                    <WorkplaceWebURI>https://www.sap.com/community/topics/business-bydesign.html</WorkplaceWebURI>\n                    <WorkplaceFunctionalTitleName>Manager</WorkplaceFunctionalTitleName>\n                    <WorkplaceDepartmentName>Test Department</WorkplaceDepartmentName>\n                    <WorkplaceBuildingID>BUF42</WorkplaceBuildingID>\n                    <WorkplaceFloorID>250</WorkplaceFloorID>\n                    <WorkplaceRoomID>R341</WorkplaceRoomID>\n                    <AddressInformation actionCode=\"01\">\n                        <Address actionCode=\"01\" telephoneListCompleteTransmissionIndicator=\"true\">\n                            <ObjectNodeSenderTechnicalID>10</ObjectNodeSenderTechnicalID>\n                            <EmailURI>laurie.fjaellstroem@bydmail.com</EmailURI>\n                            <FacsimileFormattedNumberDescription>987</FacsimileFormattedNumberDescription>\n                            <PostalAddress>\n                                <CountryCode>US</CountryCode>\n                                <RegionCode>NY</RegionCode>\n                                <CountyName></CountyName>\n                                <CityName>Buffalo</CityName>\n                                <AdditionalCityName></AdditionalCityName>\n                                <DistrictName></DistrictName>\n                                <StreetPostalCode>14204</StreetPostalCode>\n                                <POBoxPostalCode></POBoxPostalCode>\n                                <CompanyPostalCode/>\n                                <StreetPrefixName></StreetPrefixName>\n                                <AdditionalStreetPrefixName></AdditionalStreetPrefixName>\n                                <StreetName>Seneca Street</StreetName>\n                                <StreetSuffixName></StreetSuffixName>\n                                <AdditionalStreetSuffixName></AdditionalStreetSuffixName>\n                                <HouseID>98</HouseID>\n                                <CareOfName></CareOfName>\n                                <POBoxDeviatingCountryCode></POBoxDeviatingCountryCode>\n                                <POBoxDeviatingRegionCode></POBoxDeviatingRegionCode>\n                                <POBoxDeviatingCityName></POBoxDeviatingCityName>\n                                <POBoxID></POBoxID>\n                                <POBoxIndicator></POBoxIndicator>\n                                <TaxJurisdictionCode>NY</TaxJurisdictionCode>\n                                <TimeZoneCode>EST</TimeZoneCode>\n                            </PostalAddress>\n                            <Telephone>\n                                <ObjectNodeSenderTechnicalID>11</ObjectNodeSenderTechnicalID>\n                                <FormattedNumberDescription>+1 7164824955</FormattedNumberDescription>\n                                <MobilePhoneNumberIndicator>true</MobilePhoneNumberIndicator>\n                            </Telephone>\n                            <Telephone>\n                                <ObjectNodeSenderTechnicalID>12</ObjectNodeSenderTechnicalID>\n                                <FormattedNumberDescription>+1 7164824956</FormattedNumberDescription>\n                                <MobilePhoneNumberIndicator>false</MobilePhoneNumberIndicator>\n                            </Telephone>\n                        </Address>\n                        <AddressUsage actionCode=\"01\">\n                            <ObjectNodeSenderTechnicalID>13</ObjectNodeSenderTechnicalID>\n                            <AddressUsageCode>XXDEFAULT</AddressUsageCode>\n                            <DefaultIndicator>false</DefaultIndicator>\n                        </AddressUsage>\n                    </AddressInformation>\n                </ContactPerson>\n                <!-- Add purchasing data -->\n                <PurchasingData actionCode=\"01\">\n                    <ObjectNodeSenderTechnicalID>16</ObjectNodeSenderTechnicalID>\n                    <CashDiscountTermsCode>0004</CashDiscountTermsCode>\n                    <IncotermsCode>FCA</IncotermsCode>\n                    <IncotermsLocationName>Company Site</IncotermsLocationName>\n                    <PurchaseOrderCurrencyCode>EUR</PurchaseOrderCurrencyCode>\n                    <PurchasingBlockIndicator>true</PurchasingBlockIndicator>\n                    <CustomerIDAtSupplier>SUPPLIER01</CustomerIDAtSupplier>\n                    <PurchaseOrderConfirmationRequiredCode>02</PurchaseOrderConfirmationRequiredCode>\n                    <EvaluatedReceiptSettlementIndicator>true</EvaluatedReceiptSettlementIndicator>\n                </PurchasingData>\n                <!--  Add supplier notes or financial data notes -->\n                <Text actionCode=\"01\">\n                    <ObjectNodeSenderTechnicalID>24</ObjectNodeSenderTechnicalID>\n                    <TypeCode>10035</TypeCode>\n                    <ContentText>Some supplier note...</ContentText>\n                </Text>\n                <!-- Maintain customer attachmens like documents, images, links... -->\n                <AttachmentFolder>\n                    <!-- Link attachment-->\n                    <Document ActionCode=\"01\">\n                        <VisibleIndicator>true</VisibleIndicator>\n                        <CategoryCode>3</CategoryCode>\n                        <TypeCode>10001</TypeCode>\n                        <Name>SAP ByDesign Community</Name>\n                        <AlternativeName>SAP ByDesign Community</AlternativeName>\n                        <Description>SAP Community for SAP Business ByDesign</Description>\n                        <ExternalLinkWebURI>https://www.sap.com/community/topics/business-bydesign.html</ExternalLinkWebURI>\n                        <FileContentURI></FileContentURI>\n                    </Document>\n                </AttachmentFolder>\n            </Supplier>\n        </glob:SupplierBundleMaintainRequest_sync_V1>\n    </soapenv:Body>\n</soapenv:Envelope>"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managesupplierin1",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"bc",
								"srt",
								"scs",
								"sap",
								"managesupplierin1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Query supplier (Soap 1.1)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonResponse = xml2Json(responseBody);",
									"",
									"//pm.environment.set(\"SupplierInternalID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SupplierByElementsResponse_sync'].Supplier.InternalID);",
									"",
									"// Validations",
									"pm.test(\"Supplier: \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SupplierByElementsResponse_sync'].Supplier.InternalID + \" found\", function () { pm.response.to.have.status(200) });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{CommunicationUserPW}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{CommunicationUser}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "text/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\n    <soapenv:Header/>\n    <soapenv:Body>\n        <glob:SupplierByElementsQuery_sync>\n            <SupplierSelectionByElements>\n                <SelectionByInternalID>\n                    <InclusionExclusionCode>I</InclusionExclusionCode>\n                    <IntervalBoundaryTypeCode>1</IntervalBoundaryTypeCode>\n                    <LowerBoundaryIdentifier>{{S-SupplierID}}</LowerBoundaryIdentifier>\n                </SelectionByInternalID>\n            </SupplierSelectionByElements>\n            <ProcessingConditions>\n                <QueryHitsMaximumNumberValue>10</QueryHitsMaximumNumberValue>\n                <QueryHitsUnlimitedIndicator>false</QueryHitsUnlimitedIndicator>\n                <LastReturnedObjectID></LastReturnedObjectID>\n            </ProcessingConditions>\n            <RequestedElements supplierTransmissionRequestCode=\"1\">\n                <Supplier \n                \taddressInformationTransmissionRequestCode=\"1\" \n                \tcommunicationArrangementTransmissionRequestCode=\"4\" \n                \trelationshipTransmissionRequestCode=\"1\" \n                \tcontactPersonTransmissionRequestCode=\"1\" \n                \tpurchasingDataTransmissionRequestCode=\"1\" \n                \tpaymentDataTransmissionRequestCode=\"4\" \n                \tbankDetailsTransmissionRequestCode=\"4\" \n                \tdeviantTaxClassificationTransmissionRequestCode=\"4\" \n                \twithholdingTaxClassificationTransmissionRequestCode=\"4\" \n                \tgeneralProductTaxExemptionTransmissionRequestCode=\"4\" \n                \ttextTransmissionRequestCode=\"1\" \n                \tattachmentFolderTransmissionRequestCode=\"1\">\n                </Supplier>\n            </RequestedElements>\n        </glob:SupplierByElementsQuery_sync>\n    </soapenv:Body>\n</soapenv:Envelope>"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/querysupplierin1",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"bc",
								"srt",
								"scs",
								"sap",
								"querysupplierin1"
							]
						},
						"description": "Query Account ( Soap )"
					},
					"response": []
				}
			]
		},
		{
			"name": "Employee and Position",
			"item": [
				{
					"name": "Get employee",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(jsonResponse.d.__count + \" records returned\", function () { pm.response.to.have.status(200) });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khemployee/EmployeeCollection?$format=json&$expand=EmployeeType,AssignedIdentity,AttachmentFolder,WorkplaceAddressInformation/WorkplaceAddress/WorkplaceAddressFormattedAddress&$filter=EmployeeID eq '{{BP-EmployeeID}}'&$inlinecount=allpages&$top=10",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khemployee",
								"EmployeeCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "EmployeeType,AssignedIdentity,AttachmentFolder,WorkplaceAddressInformation/WorkplaceAddress/WorkplaceAddressFormattedAddress",
									"description": "AttachmentFolder contains the employee image"
								},
								{
									"key": "$filter",
									"value": "EmployeeID eq '{{BP-EmployeeID}}'"
								},
								{
									"key": "$inlinecount",
									"value": "allpages"
								},
								{
									"key": "$top",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get employee assignment and position",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(jsonResponse.d.__count + \" records returned\", function () { pm.response.to.have.status(200) });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khemployee/EmployeeAssignmentCollection?$format=json&$expand=Position/CurrentCompany/CompanyName,Position/CurrentBusinessResidence/BusinessResidenceName,Position/CurrentReportingLineUnit/ReportingLineUnitNameByValidity,Position/JobAssignment/JobNameByValidity,Position/CurrentResponsibleManager&$filter=EmployeeID eq '{{BP-EmployeeID}}'&$inlinecount=allpages&$top=10",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khemployee",
								"EmployeeAssignmentCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "Position/CurrentCompany/CompanyName,Position/CurrentBusinessResidence/BusinessResidenceName,Position/CurrentReportingLineUnit/ReportingLineUnitNameByValidity,Position/JobAssignment/JobNameByValidity,Position/CurrentResponsibleManager",
									"description": "AttachmentFolder contains the employee image"
								},
								{
									"key": "$filter",
									"value": "EmployeeID eq '{{BP-EmployeeID}}'"
								},
								{
									"key": "$inlinecount",
									"value": "allpages"
								},
								{
									"key": "$top",
									"value": "10"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Codelists",
			"item": [
				{
					"name": "Get business character role codes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(jsonResponse.d.__count + \" records returned\", function () { pm.response.to.have.status(200) });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khbusinesspartner/RoleBusinessCharacterCodeCollection?$format=json&$inlinecount=allpages&$top=50&sap-language=en",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khbusinesspartner",
								"RoleBusinessCharacterCodeCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$filter",
									"value": "Code eq 'BUP001'",
									"description": "Contact Person",
									"disabled": true
								},
								{
									"key": "$inlinecount",
									"value": "allpages"
								},
								{
									"key": "$top",
									"value": "50"
								},
								{
									"key": "sap-language",
									"value": "en",
									"description": "Language ISO codes"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get relationship category codes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(jsonResponse.d.__count + \" records returned\", function () { pm.response.to.have.status(200) });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khbusinesspartnerrelationship/BusinessPartnerRelationshipCategoryCodeCollection?$format=json&$inlinecount=allpages&$top=30&sap-language=en",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khbusinesspartnerrelationship",
								"BusinessPartnerRelationshipCategoryCodeCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$filter",
									"value": "Code eq 'BUR001'",
									"description": "BUR001 - Contact person, BUR025 - Service performer, CRMH02 - Ship-to party, CRMH04 - Bill-to party, ...",
									"disabled": true
								},
								{
									"key": "$inlinecount",
									"value": "allpages"
								},
								{
									"key": "$top",
									"value": "30"
								},
								{
									"key": "sap-language",
									"value": "en",
									"description": "Language ISO codes"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get address usage codes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(jsonResponse.d.__count + \" records returned\", function () { pm.response.to.have.status(200) });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcustomer/CustomerAddressUsageAddressUsageCodeCollection?$format=json&$inlinecount=allpages&$top=30&sap-language=en",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcustomer",
								"CustomerAddressUsageAddressUsageCodeCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$filter",
									"value": "Code eq 'BUR001'",
									"description": "BUR001 - Contact person, BUR025 - Service performer, CRMH02 - Ship-to party, CRMH04 - Bill-to party, ...",
									"disabled": true
								},
								{
									"key": "$inlinecount",
									"value": "allpages"
								},
								{
									"key": "$top",
									"value": "30"
								},
								{
									"key": "sap-language",
									"value": "en",
									"description": "Language ISO codes"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "{{Password}}",
				"type": "string"
			},
			{
				"key": "username",
				"value": "{{User}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}