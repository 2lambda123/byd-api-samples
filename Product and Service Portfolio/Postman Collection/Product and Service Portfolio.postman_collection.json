{
	"info": {
		"_postman_id": "45037517-5bd1-46a9-a285-9f563c7768aa",
		"name": "Product and Service Portfolio",
		"description": "Product and Service Portfolio - OData Examples\n===============================================\n\nExamples to create and change Price Lists and Discount Lists business objects using SAP Business ByDesign Custom OData Services and SOAP Services.\n\nPrice List and Discount List types:\n- Price List \n\t-\tbase price list\n\t-\tbase price list product category\n\t-\tdistribution chain price list\n\t-\tdistribution chain price list by product category\n\t-\tcustomer group price list\n\t-\tcustomer specific price list\n\t-\tcampaign specific price list\n\t-\tcompany specific price list\n\n- Discount List \n\t-\toverall customer discount\n\t-\tcustomer hierarchy specific discount\n\t-\tcustomer specific discount\n\t-\tcustomer specific discount product category\n\n- Price List (*Gross*)\n\t-\tbase price list\n\t-\tbase price list product category\n\t-\tdistribution chain price list\n\t-\tdistribution chain price list by product category\n\t-\tcustomer group price list\n\t-\tcustomer specific price list\n\t-\tcampaign specific price list\n\t-\tcompany specific price list\n\t\n- Discount List (*Gross*)\n\t-\toverall customer discount\n\t-\toverall customer group discount\n\t-\tcustomer hierarchy specific discount\n\t-\tcustomer specific discount\n\t-\tcustomer specific discount product category\n\n&nbsp;\n\nPricing: Creates price lists and discount list along with relevant information\n------------------------------------------------------------------------------\n\nRequired user authorizations (ByD Work Center Views):\n- *Product and Service Portfolio - Pricing*\n- *Product and Service Portfolio - Pricing (Gross)*\n\nSetup:\nThis scenario requires to configure SOAP web service APIs:\n1. Work center view *Application and User Management - Communication Systems*: Create a communication system using work center view\n2. Work center view *Application and User Management - Communication Scenarios*: Create a communication scenario with the following web service APIs: \n\t- *Manage Price Lists*\n\t- *Query Price Lists*\n3. Work center view *Application and User Management - Communication Arrangements*: Create communication arrangement for your scenario of step 2, the communication system of step 1 and enter the credentials\n\n\nScenario: Pricing - Price Lists\n-------------------------------\n1. Create price list  of type *Net* pricing which are used in CRM documents like Sales Order, Service Order, Invoice documents...\n2. Creates price lists with general information like Name, Valid From/To, Description, Currency along with Item information like Product ID, Amount and Price Unit data\n3. Release the price list\n4. Read the created price list , which gives general , item and scales data\n5. Note : different types of price lists are created based on header and item keys passed during creation , example types of price list include base price list, base price list product category, distribution chain price list,distribution chain price list by product category, customer group price list, customer specific price list, campaign specific price list, company specific price list ...\n6. Note : user can create custom price lists based in extension fields ( Key user / Partner extension fields ), in that case user has to pass the extension field as the key\n\n&nbsp;\n\nScenario: Pricing - Discount Lists\n----------------------------------\n1. Create discount list of type *Net* pricing which are used in CRM documents like Sales Order, Service Order, Invoice documents...\n2. Creates discount lists with general information like Name, Valid From/To, Description along with Item information like Product ID, disoucnt Percentage data\n3. Release the discount list\n4. Read the created discoutn list , which gives general , item data\n5. Note : different types of price lists are created based on header and item keys passed during creation , example types of discount list include overall customer discount, customer hierarchy specific discount, customer specific discount, customer specific discount product category ...\n6. Note : user can create custom price lists based in extension fields ( Key user / Partner extension fields ), in that case user has to pass the extension field as the key\n&nbsp;\n\nScenario: Pricing - Price Lists (*Gross*)\n-----------------------------------------\n1. Create price list  of type *Gross* pricing which are used in CRM documents like Sales Order, Service Order, Invoice documents...\n2. Creates price lists with general information like Name, Valid From/To, Description, Currency along with Item information like Product ID, Amount and Price Unit data\n3. Release the price list\n4. Read the created price list , which gives general , item and scales data\n5. Note : different types of price lists are created based on header and item keys passed during creation , example types of price list include base price list, base price list product category, distribution chain price list,distribution chain price list by product category, customer group price list, customer specific price list, campaign specific price list, company specific price list ...\n6. Note : user can create custom price lists based in extension fields ( Key user / Partner extension fields ), in that case user has to pass the extension field as the key\n\n&nbsp;\n\nScenario: Pricing - Discount Lists (*Gross*)\n--------------------------------------------\n1. Create discount list of type *Gross* pricing which are used in CRM documents like Sales Order, Service Order, Invoice documents...\n2. Creates discount lists with general information like Name, Valid From/To, Description along with Item information like Product ID, disoucnt Percentage data\n3. Release the discount list\n4. Read the created discoutn list , which gives general , item data\n5. Note : different types of price lists are created based on header and item keys passed during creation , example types of discount list includeoverall customer discount, customer hierarchy specific discount, customer specific discount, customer specific discount product category ...\n6. Note : user can create custom price lists based in extension fields ( Key user / Partner extension fields ), in that case user has to pass the extension field as the key\n&nbsp;\n\n&nbsp;",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Pricing",
			"item": [
				{
					"name": "Price Lists",
					"item": [
						{
							"name": "Create/Update base price list (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "691edeb4-7bfd-4e5f-8c75-c140cf9f04a2",
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"",
											"pm.environment.set(\"BasePriceListID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.ID);",
											"",
											"pm.environment.set(\"PriceListUUID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.UUID);",
											"",
											"",
											"// Validations",
											"pm.test(\"Base Price List \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.ID + \" created / updated \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3e65b165-9326-4ac2-9a90-37c0ed7a5612",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:SalesPriceListBundleMaintainRequest_sync>\r\n \t\t<SalesPriceList ActionCode=\"04\">\r\n\t\t  <TypeCode>{{PriceListTypeCode}}</TypeCode>  <!-- 7PL0 for Price List -->\r\n\t\t  <ID>{{BasePriceListID}}</ID>\r\n\t\t  <Description languageCode=\"EN\">{{PriceListDescription}}</Description>\r\n\t\t  \r\n\t\t  <!-- No Header Keys -->\r\n\t\t  \r\n\t\t  <StartDate>2000-02-02</StartDate>\r\n\t\t  <EndDate>2000-02-02</EndDate>\r\n\t\t  <CurrencyCode>USD</CurrencyCode>\t\t  \r\n\t\t  <PriceSpecification>\r\n\t\t\t   <TypeCode>{{PriceListItemTypeCode}}</TypeCode>  <!-- 7PR1 for Price -->\r\n\t\t\t   <Amount currencyCode=\"EUR\">200.00</Amount>\r\n\t\t\t   <BaseQuantity unitCode=\"EA\">1</BaseQuantity>\r\n\t\t\t   <BaseQuantityTypeCode>EA</BaseQuantityTypeCode>\r\n\t\t\t   <ProductID>{{ProductID}}</ProductID>\r\n\t\t\t   <ProductTypeCode>1</ProductTypeCode>   <!-- 1 means Material , 2 Means Service Product -->\r\n\t\t  </PriceSpecification>\r\n\t\t </SalesPriceList>\r\n\r\n      </glob:SalesPriceListBundleMaintainRequest_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managesalespricelistin2",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managesalespricelistin2"
									]
								}
							},
							"response": [
								{
									"name": "Create production proposal (Soap 1.1)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:CreateProductionProposal>\r\n         <CreateProductionPlanningOrder>\r\n            <SequenceNumber>1</SequenceNumber>\r\n            <SupplyPlanningAreaID>P1100</SupplyPlanningAreaID>\r\n            <MaterialID>P100101</MaterialID>\r\n            <!-- <ProductRequirementSpecificationID>?</ProductRequirementSpecificationID> -->\r\n            <MaterialAvailabilityDateTime timeZoneCode=\"CET\">2019-02-05T12:00:00.0000000Z</MaterialAvailabilityDateTime>\r\n            <Quantity unitCode=\"EA\">1</Quantity>\r\n            <QuantityTypeCode>EA</QuantityTypeCode>\r\n         </CreateProductionPlanningOrder>\r\n      </glob:CreateProductionProposal>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
										},
										"url": {
											"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/manageproductionproposalin",
											"protocol": "https",
											"host": [
												"{{TenantHostname}}"
											],
											"path": [
												"sap",
												"bc",
												"srt",
												"scs",
												"sap",
												"manageproductionproposalin"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "html",
									"header": [
										{
											"key": "content-type",
											"value": "text/html; charset=utf-8"
										},
										{
											"key": "content-encoding",
											"value": "gzip"
										},
										{
											"key": "content-length",
											"value": "505"
										},
										{
											"key": "sap-system",
											"value": "KHL"
										},
										{
											"key": "www-authenticate",
											"value": "Basic realm=\"SAP NetWeaver Application Server [KHL/171][alias]\""
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=31536000; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "<html>\n    <head>\n        <title>Logon Error Message</title>\n        <META http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\">\n        <style type=\"text/css\">body { font-family:tahoma,helvetica,sans-serif;color:#333333;background-color:#FFFFFF; }td { font-family:tahoma,helvetica,sans-serif;font-size:70%;color:#333333; }h1 { font-family:tahoma,helvetica,sans-serif;font-size:160%;font-weight:bold;margin-top:15px;margin-bottom:3px;color:#003366; }h2 { font-family:verdana,helvetica,sans-serif;font-size:120%;font-style:italic;font-weight:bold;margin-top:6px;margin-bottom:6px;color:#999900; }p { font-family:tahoma,helvetica,sans-serif;color:#333333;margin-top:4px;margin-bottom:4px; }ul { font-family:tahoma,helvetica,sans-serif;color:#333333;list-style-type:square;margin-top:8px;margin-bottom:8px; }li { font-family:tahoma,helvetica,sans-serif;color:#33333;margin-top:4px; }.emphasize { color:#333333;background-color:#C8E3FF;padding:5px;}.note { color:#CC6600; }a { font-family:tahoma,helvetica,sans-serif;text-decoration:underline;color:#336699; }a:visited { color:#001166; }a:hover { text-decoration:none; }</style>\n    </head>\n    <body>\n        <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\">\n            <tr>\n                <td>\n                    <h1>Logon failed</h1>\n                </td>\n            </tr>\n        </table>\n    </body>\n</html>"
								}
							]
						},
						{
							"name": "Get base price list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "13783b8f-a601-492f-8b16-481c2a8417ff",
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"Get Base Price List  - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"// Get workplace address object ID and parten object ID",
											"var jsonResponse = pm.response.json();",
											"pm.environment.set(\"ObjectID\", jsonResponse.d.results[0].ObjectID);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmupricelist/PriceListCollection?$filter=UUID eq guid'{{PriceListUUID}}'&$expand=PriceListKeys,Items,Items/ItemKeys,Items/Scales&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmupricelist",
										"PriceListCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "UUID eq guid'{{PriceListUUID}}'"
										},
										{
											"key": "$expand",
											"value": "PriceListKeys,Items,Items/ItemKeys,Items/Scales"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create/Update base price list product category (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "691edeb4-7bfd-4e5f-8c75-c140cf9f04a2",
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"",
											"",
											"",
											"// Validations",
											"pm.test(\"Base price list product category \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.ID + \" created / updated \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3e65b165-9326-4ac2-9a90-37c0ed7a5612",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:SalesPriceListBundleMaintainRequest_sync>\r\n \t\t<SalesPriceList ActionCode=\"04\">\r\n\t\t  <TypeCode>{{PriceListTypeCode}}</TypeCode>  <!-- 7PL0 for Price List -->\r\n\t\t  <ID>{{BaseProductCategoryPriceListID}}</ID>\r\n\t\t  <Description languageCode=\"EN\">{{PriceListDescription}}</Description>\r\n\t\t  \r\n\t\t  <!--Header Keys: ProductCategoryID --> \r\n\t\t  <ProductCategoryID>{{ProductCategoryID}}</ProductCategoryID>\r\n\t\t  \r\n\t\t  <StartDate>2000-02-02</StartDate>\r\n\t\t  <EndDate>2000-02-02</EndDate>\r\n\t\t  <CurrencyCode>USD</CurrencyCode>\t\t  \r\n\t\t  <PriceSpecification>\r\n\t\t\t   <TypeCode>{{PriceListItemTypeCode}}</TypeCode>  <!-- 7PR1 for Price -->\r\n\t\t\t   <Amount currencyCode=\"EUR\">200.00</Amount>\r\n\t\t\t   <BaseQuantity unitCode=\"EA\">1</BaseQuantity>\r\n\t\t\t   <BaseQuantityTypeCode>EA</BaseQuantityTypeCode>\r\n\t\t\t   <ProductID>{{ProductID}}</ProductID>\r\n\t\t\t   <ProductTypeCode>1</ProductTypeCode>   <!-- 1 means Material , 2 Means Service Product -->\r\n\t\t  </PriceSpecification>\r\n\t\t </SalesPriceList>\r\n\r\n      </glob:SalesPriceListBundleMaintainRequest_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managesalespricelistin2",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managesalespricelistin2"
									]
								}
							},
							"response": [
								{
									"name": "Create production proposal (Soap 1.1)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:CreateProductionProposal>\r\n         <CreateProductionPlanningOrder>\r\n            <SequenceNumber>1</SequenceNumber>\r\n            <SupplyPlanningAreaID>P1100</SupplyPlanningAreaID>\r\n            <MaterialID>P100101</MaterialID>\r\n            <!-- <ProductRequirementSpecificationID>?</ProductRequirementSpecificationID> -->\r\n            <MaterialAvailabilityDateTime timeZoneCode=\"CET\">2019-02-05T12:00:00.0000000Z</MaterialAvailabilityDateTime>\r\n            <Quantity unitCode=\"EA\">1</Quantity>\r\n            <QuantityTypeCode>EA</QuantityTypeCode>\r\n         </CreateProductionPlanningOrder>\r\n      </glob:CreateProductionProposal>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
										},
										"url": {
											"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/manageproductionproposalin",
											"protocol": "https",
											"host": [
												"{{TenantHostname}}"
											],
											"path": [
												"sap",
												"bc",
												"srt",
												"scs",
												"sap",
												"manageproductionproposalin"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "html",
									"header": [
										{
											"key": "content-type",
											"value": "text/html; charset=utf-8"
										},
										{
											"key": "content-encoding",
											"value": "gzip"
										},
										{
											"key": "content-length",
											"value": "505"
										},
										{
											"key": "sap-system",
											"value": "KHL"
										},
										{
											"key": "www-authenticate",
											"value": "Basic realm=\"SAP NetWeaver Application Server [KHL/171][alias]\""
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=31536000; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "<html>\n    <head>\n        <title>Logon Error Message</title>\n        <META http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\">\n        <style type=\"text/css\">body { font-family:tahoma,helvetica,sans-serif;color:#333333;background-color:#FFFFFF; }td { font-family:tahoma,helvetica,sans-serif;font-size:70%;color:#333333; }h1 { font-family:tahoma,helvetica,sans-serif;font-size:160%;font-weight:bold;margin-top:15px;margin-bottom:3px;color:#003366; }h2 { font-family:verdana,helvetica,sans-serif;font-size:120%;font-style:italic;font-weight:bold;margin-top:6px;margin-bottom:6px;color:#999900; }p { font-family:tahoma,helvetica,sans-serif;color:#333333;margin-top:4px;margin-bottom:4px; }ul { font-family:tahoma,helvetica,sans-serif;color:#333333;list-style-type:square;margin-top:8px;margin-bottom:8px; }li { font-family:tahoma,helvetica,sans-serif;color:#33333;margin-top:4px; }.emphasize { color:#333333;background-color:#C8E3FF;padding:5px;}.note { color:#CC6600; }a { font-family:tahoma,helvetica,sans-serif;text-decoration:underline;color:#336699; }a:visited { color:#001166; }a:hover { text-decoration:none; }</style>\n    </head>\n    <body>\n        <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\">\n            <tr>\n                <td>\n                    <h1>Logon failed</h1>\n                </td>\n            </tr>\n        </table>\n    </body>\n</html>"
								}
							]
						},
						{
							"name": "Get base price list product category",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "13783b8f-a601-492f-8b16-481c2a8417ff",
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"Get Base price list product category  - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"// Get workplace address object ID and parten object ID",
											"var jsonResponse = pm.response.json();",
											"pm.environment.set(\"ObjectID\", jsonResponse.d.results[0].ObjectID);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmupricelist/PriceListCollection?$filter=UUID eq guid'{{PriceListUUID}}'&$expand=PriceListKeys,Items,Items/ItemKeys,Items/Scales&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmupricelist",
										"PriceListCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "UUID eq guid'{{PriceListUUID}}'"
										},
										{
											"key": "$expand",
											"value": "PriceListKeys,Items,Items/ItemKeys,Items/Scales"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create/Update distribution chain price list (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "691edeb4-7bfd-4e5f-8c75-c140cf9f04a2",
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"",
											"pm.environment.set(\"PriceListUUID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.UUID);",
											"",
											"",
											"// Validations",
											"pm.test(\"Distribution chain price list \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.ID + \" created / updated \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3e65b165-9326-4ac2-9a90-37c0ed7a5612",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:SalesPriceListBundleMaintainRequest_sync>\r\n \t\t<SalesPriceList ActionCode=\"04\">\r\n\t\t  <TypeCode>{{PriceListTypeCode}}</TypeCode>  <!-- 7PL0 for Price List -->\r\n\t\t  <ID>{{DistributionChainPriceListID}}</ID>\r\n\t\t  <Description languageCode=\"EN\">{{PriceListDescription}}</Description>\r\n\t\t  \r\n\t\t  <!-- Header Keys: SalesOrgID,DistributionChannelCode -->\r\n\t\t  \r\n\t\t  <SalesOrgID>{{SalesOrgID}}</SalesOrgID>\r\n\t\t  <DistributionChannelCode>{{DistributionChannel}}</DistributionChannelCode>\r\n\t\t  \r\n\t\t  <StartDate>2000-02-02</StartDate>\r\n\t\t  <EndDate>2000-02-02</EndDate>\r\n\t\t  <CurrencyCode>USD</CurrencyCode>\t\t  \r\n\t\t  <PriceSpecification>\r\n\t\t\t   <TypeCode>{{PriceListItemTypeCode}}</TypeCode>  <!-- 7PR1 for Price -->\r\n\t\t\t   <Amount currencyCode=\"EUR\">200.00</Amount>\r\n\t\t\t   <BaseQuantity unitCode=\"EA\">1</BaseQuantity>\r\n\t\t\t   <BaseQuantityTypeCode>EA</BaseQuantityTypeCode>\r\n\t\t\t   <ProductID>{{ProductID}}</ProductID>\r\n\t\t\t   <ProductTypeCode>1</ProductTypeCode>   <!-- 1 means Material , 2 Means Service Product -->\r\n\t\t  </PriceSpecification>\r\n\t\t </SalesPriceList>\r\n\r\n      </glob:SalesPriceListBundleMaintainRequest_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managesalespricelistin2",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managesalespricelistin2"
									]
								}
							},
							"response": [
								{
									"name": "Create production proposal (Soap 1.1)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:CreateProductionProposal>\r\n         <CreateProductionPlanningOrder>\r\n            <SequenceNumber>1</SequenceNumber>\r\n            <SupplyPlanningAreaID>P1100</SupplyPlanningAreaID>\r\n            <MaterialID>P100101</MaterialID>\r\n            <!-- <ProductRequirementSpecificationID>?</ProductRequirementSpecificationID> -->\r\n            <MaterialAvailabilityDateTime timeZoneCode=\"CET\">2019-02-05T12:00:00.0000000Z</MaterialAvailabilityDateTime>\r\n            <Quantity unitCode=\"EA\">1</Quantity>\r\n            <QuantityTypeCode>EA</QuantityTypeCode>\r\n         </CreateProductionPlanningOrder>\r\n      </glob:CreateProductionProposal>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
										},
										"url": {
											"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/manageproductionproposalin",
											"protocol": "https",
											"host": [
												"{{TenantHostname}}"
											],
											"path": [
												"sap",
												"bc",
												"srt",
												"scs",
												"sap",
												"manageproductionproposalin"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "html",
									"header": [
										{
											"key": "content-type",
											"value": "text/html; charset=utf-8"
										},
										{
											"key": "content-encoding",
											"value": "gzip"
										},
										{
											"key": "content-length",
											"value": "505"
										},
										{
											"key": "sap-system",
											"value": "KHL"
										},
										{
											"key": "www-authenticate",
											"value": "Basic realm=\"SAP NetWeaver Application Server [KHL/171][alias]\""
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=31536000; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "<html>\n    <head>\n        <title>Logon Error Message</title>\n        <META http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\">\n        <style type=\"text/css\">body { font-family:tahoma,helvetica,sans-serif;color:#333333;background-color:#FFFFFF; }td { font-family:tahoma,helvetica,sans-serif;font-size:70%;color:#333333; }h1 { font-family:tahoma,helvetica,sans-serif;font-size:160%;font-weight:bold;margin-top:15px;margin-bottom:3px;color:#003366; }h2 { font-family:verdana,helvetica,sans-serif;font-size:120%;font-style:italic;font-weight:bold;margin-top:6px;margin-bottom:6px;color:#999900; }p { font-family:tahoma,helvetica,sans-serif;color:#333333;margin-top:4px;margin-bottom:4px; }ul { font-family:tahoma,helvetica,sans-serif;color:#333333;list-style-type:square;margin-top:8px;margin-bottom:8px; }li { font-family:tahoma,helvetica,sans-serif;color:#33333;margin-top:4px; }.emphasize { color:#333333;background-color:#C8E3FF;padding:5px;}.note { color:#CC6600; }a { font-family:tahoma,helvetica,sans-serif;text-decoration:underline;color:#336699; }a:visited { color:#001166; }a:hover { text-decoration:none; }</style>\n    </head>\n    <body>\n        <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\">\n            <tr>\n                <td>\n                    <h1>Logon failed</h1>\n                </td>\n            </tr>\n        </table>\n    </body>\n</html>"
								}
							]
						},
						{
							"name": "Get distribution chain price list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "13783b8f-a601-492f-8b16-481c2a8417ff",
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"Get Distribution chain price list - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"// Get workplace address object ID and parten object ID",
											"var jsonResponse = pm.response.json();",
											"pm.environment.set(\"ObjectID\", jsonResponse.d.results[0].ObjectID);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmupricelist/PriceListCollection?$filter=UUID eq guid'{{PriceListUUID}}'&$expand=PriceListKeys,Items,Items/ItemKeys,Items/Scales&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmupricelist",
										"PriceListCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "UUID eq guid'{{PriceListUUID}}'"
										},
										{
											"key": "$expand",
											"value": "PriceListKeys,Items,Items/ItemKeys,Items/Scales"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create/Update distribution chain price list by product category (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "691edeb4-7bfd-4e5f-8c75-c140cf9f04a2",
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"",
											"pm.environment.set(\"PriceListUUID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.UUID);",
											"",
											"",
											"// Validations",
											"pm.test(\"Distribution chain price list by product category \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.ID + \" created / updated \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3e65b165-9326-4ac2-9a90-37c0ed7a5612",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:SalesPriceListBundleMaintainRequest_sync>\r\n \t\t<SalesPriceList ActionCode=\"04\">\r\n\t\t  <TypeCode>{{PriceListTypeCode}}</TypeCode>  <!-- 7PL0 for Price List -->\r\n\t\t  <ID>{{DistributionChainProductCategoryPriceListID}}</ID>\r\n\t\t  <Description languageCode=\"EN\">{{PriceListDescription}}</Description>\r\n\t\t  \r\n\t\t  <!-- Header Keys: SalesOrgID,DistributionChannelCode,ProductCategoryID -->\r\n\t\t  \r\n\t\t  <SalesOrgID>{{SalesOrgID}}</SalesOrgID>\r\n\t\t  <DistributionChannelCode>{{DistributionChannel}}</DistributionChannelCode>\r\n\t\t  <ProductCategoryID>{{ProductCategoryID}}</ProductCategoryID>\r\n\t\t  \r\n\t\t  <StartDate>2000-01-01</StartDate>\r\n\t\t  <EndDate>2000-01-01</EndDate>\r\n\t\t  <CurrencyCode>USD</CurrencyCode>\t\t  \r\n\t\t  <PriceSpecification>\r\n\t\t\t   <TypeCode>{{PriceListItemTypeCode}}</TypeCode>  <!-- 7PR1 for Price -->\r\n\t\t\t   <Amount currencyCode=\"EUR\">200.00</Amount>\r\n\t\t\t   <BaseQuantity unitCode=\"EA\">1</BaseQuantity>\r\n\t\t\t   <BaseQuantityTypeCode>EA</BaseQuantityTypeCode>\r\n\t\t\t   <ProductID>{{ProductID}}</ProductID>\r\n\t\t\t   <ProductTypeCode>1</ProductTypeCode>   <!-- 1 means Material , 2 Means Service Product -->\r\n\t\t  </PriceSpecification>\r\n\t\t </SalesPriceList>\r\n\r\n      </glob:SalesPriceListBundleMaintainRequest_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managesalespricelistin2",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managesalespricelistin2"
									]
								}
							},
							"response": [
								{
									"name": "Create production proposal (Soap 1.1)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:CreateProductionProposal>\r\n         <CreateProductionPlanningOrder>\r\n            <SequenceNumber>1</SequenceNumber>\r\n            <SupplyPlanningAreaID>P1100</SupplyPlanningAreaID>\r\n            <MaterialID>P100101</MaterialID>\r\n            <!-- <ProductRequirementSpecificationID>?</ProductRequirementSpecificationID> -->\r\n            <MaterialAvailabilityDateTime timeZoneCode=\"CET\">2019-02-05T12:00:00.0000000Z</MaterialAvailabilityDateTime>\r\n            <Quantity unitCode=\"EA\">1</Quantity>\r\n            <QuantityTypeCode>EA</QuantityTypeCode>\r\n         </CreateProductionPlanningOrder>\r\n      </glob:CreateProductionProposal>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
										},
										"url": {
											"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/manageproductionproposalin",
											"protocol": "https",
											"host": [
												"{{TenantHostname}}"
											],
											"path": [
												"sap",
												"bc",
												"srt",
												"scs",
												"sap",
												"manageproductionproposalin"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "html",
									"header": [
										{
											"key": "content-type",
											"value": "text/html; charset=utf-8"
										},
										{
											"key": "content-encoding",
											"value": "gzip"
										},
										{
											"key": "content-length",
											"value": "505"
										},
										{
											"key": "sap-system",
											"value": "KHL"
										},
										{
											"key": "www-authenticate",
											"value": "Basic realm=\"SAP NetWeaver Application Server [KHL/171][alias]\""
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=31536000; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "<html>\n    <head>\n        <title>Logon Error Message</title>\n        <META http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\">\n        <style type=\"text/css\">body { font-family:tahoma,helvetica,sans-serif;color:#333333;background-color:#FFFFFF; }td { font-family:tahoma,helvetica,sans-serif;font-size:70%;color:#333333; }h1 { font-family:tahoma,helvetica,sans-serif;font-size:160%;font-weight:bold;margin-top:15px;margin-bottom:3px;color:#003366; }h2 { font-family:verdana,helvetica,sans-serif;font-size:120%;font-style:italic;font-weight:bold;margin-top:6px;margin-bottom:6px;color:#999900; }p { font-family:tahoma,helvetica,sans-serif;color:#333333;margin-top:4px;margin-bottom:4px; }ul { font-family:tahoma,helvetica,sans-serif;color:#333333;list-style-type:square;margin-top:8px;margin-bottom:8px; }li { font-family:tahoma,helvetica,sans-serif;color:#33333;margin-top:4px; }.emphasize { color:#333333;background-color:#C8E3FF;padding:5px;}.note { color:#CC6600; }a { font-family:tahoma,helvetica,sans-serif;text-decoration:underline;color:#336699; }a:visited { color:#001166; }a:hover { text-decoration:none; }</style>\n    </head>\n    <body>\n        <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\">\n            <tr>\n                <td>\n                    <h1>Logon failed</h1>\n                </td>\n            </tr>\n        </table>\n    </body>\n</html>"
								}
							]
						},
						{
							"name": "Get distribution chain price list by product category",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "13783b8f-a601-492f-8b16-481c2a8417ff",
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"Get Distribution chain price list by product category  - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"// Get workplace address object ID and parten object ID",
											"var jsonResponse = pm.response.json();",
											"pm.environment.set(\"ObjectID\", jsonResponse.d.results[0].ObjectID);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmupricelist/PriceListCollection?$filter=UUID eq guid'{{PriceListUUID}}'&$expand=PriceListKeys,Items,Items/ItemKeys,Items/Scales&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmupricelist",
										"PriceListCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "UUID eq guid'{{PriceListUUID}}'"
										},
										{
											"key": "$expand",
											"value": "PriceListKeys,Items,Items/ItemKeys,Items/Scales"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create/Update customer group price list (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "691edeb4-7bfd-4e5f-8c75-c140cf9f04a2",
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"",
											"pm.environment.set(\"PriceListUUID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.UUID);",
											"",
											"",
											"// Validations",
											"pm.test(\"Customer group price list \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.ID + \" created / updated \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3e65b165-9326-4ac2-9a90-37c0ed7a5612",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:SalesPriceListBundleMaintainRequest_sync>\r\n \t\t<SalesPriceList ActionCode=\"04\">\r\n\t\t  <TypeCode>{{PriceListTypeCode}}</TypeCode>  <!-- 7PL0 for Price List -->\r\n\t\t  <ID>{{CustomerGroupSpecificPriceListID}}</ID>\r\n\t\t  <Description languageCode=\"EN\">{{PriceListDescription}}</Description>\r\n\t\t  \r\n\t\t  <!-- Header Keys: SalesOrgID,DistributionChannelCode,ProductCategoryID -->\r\n\t\t  \r\n\t\t  <SalesOrgID>{{SalesOrgID}}</SalesOrgID>\r\n\t\t  <DistributionChannelCode>{{DistributionChannel}}</DistributionChannelCode>\r\n\t\t  <CustomerGroupCode>{{CustomerGroup}}</CustomerGroupCode>\r\n\t\t  \r\n\t\t  <StartDate>2000-01-01</StartDate>\r\n\t\t  <EndDate>2000-01-01</EndDate>\r\n\t\t  <CurrencyCode>USD</CurrencyCode>\t\t  \r\n\t\t  <PriceSpecification>\r\n\t\t\t   <TypeCode>{{PriceListItemTypeCode}}</TypeCode>  <!-- 7PR1 for Price -->\r\n\t\t\t   <Amount currencyCode=\"EUR\">200.00</Amount>\r\n\t\t\t   <BaseQuantity unitCode=\"EA\">1</BaseQuantity>\r\n\t\t\t   <BaseQuantityTypeCode>EA</BaseQuantityTypeCode>\r\n\t\t\t   <ProductID>{{ProductID}}</ProductID>\r\n\t\t\t   <ProductTypeCode>1</ProductTypeCode>   <!-- 1 means Material , 2 Means Service Product -->\r\n\t\t  </PriceSpecification>\r\n\t\t </SalesPriceList>\r\n\r\n      </glob:SalesPriceListBundleMaintainRequest_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managesalespricelistin2",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managesalespricelistin2"
									]
								}
							},
							"response": [
								{
									"name": "Create production proposal (Soap 1.1)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:CreateProductionProposal>\r\n         <CreateProductionPlanningOrder>\r\n            <SequenceNumber>1</SequenceNumber>\r\n            <SupplyPlanningAreaID>P1100</SupplyPlanningAreaID>\r\n            <MaterialID>P100101</MaterialID>\r\n            <!-- <ProductRequirementSpecificationID>?</ProductRequirementSpecificationID> -->\r\n            <MaterialAvailabilityDateTime timeZoneCode=\"CET\">2019-02-05T12:00:00.0000000Z</MaterialAvailabilityDateTime>\r\n            <Quantity unitCode=\"EA\">1</Quantity>\r\n            <QuantityTypeCode>EA</QuantityTypeCode>\r\n         </CreateProductionPlanningOrder>\r\n      </glob:CreateProductionProposal>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
										},
										"url": {
											"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/manageproductionproposalin",
											"protocol": "https",
											"host": [
												"{{TenantHostname}}"
											],
											"path": [
												"sap",
												"bc",
												"srt",
												"scs",
												"sap",
												"manageproductionproposalin"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "html",
									"header": [
										{
											"key": "content-type",
											"value": "text/html; charset=utf-8"
										},
										{
											"key": "content-encoding",
											"value": "gzip"
										},
										{
											"key": "content-length",
											"value": "505"
										},
										{
											"key": "sap-system",
											"value": "KHL"
										},
										{
											"key": "www-authenticate",
											"value": "Basic realm=\"SAP NetWeaver Application Server [KHL/171][alias]\""
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=31536000; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "<html>\n    <head>\n        <title>Logon Error Message</title>\n        <META http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\">\n        <style type=\"text/css\">body { font-family:tahoma,helvetica,sans-serif;color:#333333;background-color:#FFFFFF; }td { font-family:tahoma,helvetica,sans-serif;font-size:70%;color:#333333; }h1 { font-family:tahoma,helvetica,sans-serif;font-size:160%;font-weight:bold;margin-top:15px;margin-bottom:3px;color:#003366; }h2 { font-family:verdana,helvetica,sans-serif;font-size:120%;font-style:italic;font-weight:bold;margin-top:6px;margin-bottom:6px;color:#999900; }p { font-family:tahoma,helvetica,sans-serif;color:#333333;margin-top:4px;margin-bottom:4px; }ul { font-family:tahoma,helvetica,sans-serif;color:#333333;list-style-type:square;margin-top:8px;margin-bottom:8px; }li { font-family:tahoma,helvetica,sans-serif;color:#33333;margin-top:4px; }.emphasize { color:#333333;background-color:#C8E3FF;padding:5px;}.note { color:#CC6600; }a { font-family:tahoma,helvetica,sans-serif;text-decoration:underline;color:#336699; }a:visited { color:#001166; }a:hover { text-decoration:none; }</style>\n    </head>\n    <body>\n        <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\">\n            <tr>\n                <td>\n                    <h1>Logon failed</h1>\n                </td>\n            </tr>\n        </table>\n    </body>\n</html>"
								}
							]
						},
						{
							"name": "Get customer group price list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "13783b8f-a601-492f-8b16-481c2a8417ff",
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"Get Customer group price list - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"// Get workplace address object ID and parten object ID",
											"var jsonResponse = pm.response.json();",
											"pm.environment.set(\"ObjectID\", jsonResponse.d.results[0].ObjectID);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmupricelist/PriceListCollection?$filter=UUID eq guid'{{PriceListUUID}}'&$expand=PriceListKeys,Items,Items/ItemKeys,Items/Scales&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmupricelist",
										"PriceListCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "UUID eq guid'{{PriceListUUID}}'"
										},
										{
											"key": "$expand",
											"value": "PriceListKeys,Items,Items/ItemKeys,Items/Scales"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create/Update customer specific price list (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "691edeb4-7bfd-4e5f-8c75-c140cf9f04a2",
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"",
											"pm.environment.set(\"PriceListUUID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.UUID);",
											"",
											"",
											"// Validations",
											"pm.test(\"Customer specific price list \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.ID + \" created / updated \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3e65b165-9326-4ac2-9a90-37c0ed7a5612",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:SalesPriceListBundleMaintainRequest_sync>\r\n \t\t<SalesPriceList ActionCode=\"04\">\r\n\t\t  <TypeCode>{{PriceListTypeCode}}</TypeCode>  <!-- 7PL0 for Price List -->\r\n\t\t  <ID>{{CustomerSpecificPriceListID}}</ID>\r\n\t\t  <Description languageCode=\"EN\">{{PriceListDescription}}</Description>\r\n\t\t  \r\n\t\t  <!-- Header Keys: SalesOrgID,DistributionChannelCode,ProductCategoryID -->\r\n\t\t  \r\n\t\t  <AccountID>{{AccountID}}</AccountID>\r\n\t\t \r\n\t\t  <StartDate>2000-01-01</StartDate>\r\n\t\t  <EndDate>2000-01-01</EndDate>\r\n\t\t  <CurrencyCode>USD</CurrencyCode>\t\t  \r\n\t\t  <PriceSpecification>\r\n\t\t\t   <TypeCode>{{PriceListItemTypeCode}}</TypeCode>  <!-- 7PR1 for Price -->\r\n\t\t\t   <Amount currencyCode=\"EUR\">200.00</Amount>\r\n\t\t\t   <BaseQuantity unitCode=\"EA\">1</BaseQuantity>\r\n\t\t\t   <BaseQuantityTypeCode>EA</BaseQuantityTypeCode>\r\n\t\t\t   <ProductID>{{ProductID}}</ProductID>\r\n\t\t\t   <ProductTypeCode>1</ProductTypeCode>   <!-- 1 means Material , 2 Means Service Product -->\r\n\t\t  </PriceSpecification>\r\n\t\t </SalesPriceList>\r\n\r\n      </glob:SalesPriceListBundleMaintainRequest_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managesalespricelistin2",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managesalespricelistin2"
									]
								}
							},
							"response": [
								{
									"name": "Create production proposal (Soap 1.1)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:CreateProductionProposal>\r\n         <CreateProductionPlanningOrder>\r\n            <SequenceNumber>1</SequenceNumber>\r\n            <SupplyPlanningAreaID>P1100</SupplyPlanningAreaID>\r\n            <MaterialID>P100101</MaterialID>\r\n            <!-- <ProductRequirementSpecificationID>?</ProductRequirementSpecificationID> -->\r\n            <MaterialAvailabilityDateTime timeZoneCode=\"CET\">2019-02-05T12:00:00.0000000Z</MaterialAvailabilityDateTime>\r\n            <Quantity unitCode=\"EA\">1</Quantity>\r\n            <QuantityTypeCode>EA</QuantityTypeCode>\r\n         </CreateProductionPlanningOrder>\r\n      </glob:CreateProductionProposal>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
										},
										"url": {
											"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/manageproductionproposalin",
											"protocol": "https",
											"host": [
												"{{TenantHostname}}"
											],
											"path": [
												"sap",
												"bc",
												"srt",
												"scs",
												"sap",
												"manageproductionproposalin"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "html",
									"header": [
										{
											"key": "content-type",
											"value": "text/html; charset=utf-8"
										},
										{
											"key": "content-encoding",
											"value": "gzip"
										},
										{
											"key": "content-length",
											"value": "505"
										},
										{
											"key": "sap-system",
											"value": "KHL"
										},
										{
											"key": "www-authenticate",
											"value": "Basic realm=\"SAP NetWeaver Application Server [KHL/171][alias]\""
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=31536000; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "<html>\n    <head>\n        <title>Logon Error Message</title>\n        <META http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\">\n        <style type=\"text/css\">body { font-family:tahoma,helvetica,sans-serif;color:#333333;background-color:#FFFFFF; }td { font-family:tahoma,helvetica,sans-serif;font-size:70%;color:#333333; }h1 { font-family:tahoma,helvetica,sans-serif;font-size:160%;font-weight:bold;margin-top:15px;margin-bottom:3px;color:#003366; }h2 { font-family:verdana,helvetica,sans-serif;font-size:120%;font-style:italic;font-weight:bold;margin-top:6px;margin-bottom:6px;color:#999900; }p { font-family:tahoma,helvetica,sans-serif;color:#333333;margin-top:4px;margin-bottom:4px; }ul { font-family:tahoma,helvetica,sans-serif;color:#333333;list-style-type:square;margin-top:8px;margin-bottom:8px; }li { font-family:tahoma,helvetica,sans-serif;color:#33333;margin-top:4px; }.emphasize { color:#333333;background-color:#C8E3FF;padding:5px;}.note { color:#CC6600; }a { font-family:tahoma,helvetica,sans-serif;text-decoration:underline;color:#336699; }a:visited { color:#001166; }a:hover { text-decoration:none; }</style>\n    </head>\n    <body>\n        <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\">\n            <tr>\n                <td>\n                    <h1>Logon failed</h1>\n                </td>\n            </tr>\n        </table>\n    </body>\n</html>"
								}
							]
						},
						{
							"name": "Get customer specific price list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "13783b8f-a601-492f-8b16-481c2a8417ff",
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"Get Customer specific price list - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"// Get workplace address object ID and parten object ID",
											"var jsonResponse = pm.response.json();",
											"pm.environment.set(\"ObjectID\", jsonResponse.d.results[0].ObjectID);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmupricelist/PriceListCollection?$filter=UUID eq guid'{{PriceListUUID}}'&$expand=PriceListKeys,Items,Items/ItemKeys,Items/Scales&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmupricelist",
										"PriceListCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "UUID eq guid'{{PriceListUUID}}'"
										},
										{
											"key": "$expand",
											"value": "PriceListKeys,Items,Items/ItemKeys,Items/Scales"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create/Update campaign specific price list (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "691edeb4-7bfd-4e5f-8c75-c140cf9f04a2",
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"",
											"pm.environment.set(\"PriceListUUID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.UUID);",
											"",
											"",
											"// Validations",
											"pm.test(\"Campaign specific price list \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.ID + \" created / updated \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3e65b165-9326-4ac2-9a90-37c0ed7a5612",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:SalesPriceListBundleMaintainRequest_sync>\r\n \t\t<SalesPriceList ActionCode=\"04\">\r\n\t\t  <TypeCode>{{PriceListTypeCode}}</TypeCode>  <!-- 7PL0 for Price List -->\r\n\t\t  <ID>{{CampaignSpecificPriceListID}}</ID>\r\n\t\t  <Description languageCode=\"EN\">{{PriceListDescription}}</Description>\r\n\t\t  \r\n\t\t  <!-- Header Keys: SalesOrgID,DistributionChannelCode,ProductCategoryID -->\r\n\t\t  \r\n\t\t  <SalesOrgID>{{SalesOrgID}}</SalesOrgID>\r\n\t\t  <DistributionChannelCode>{{DistributionChannel}}</DistributionChannelCode>\r\n\t\t  <CampaignID>{{CampaignID}}</CampaignID>\r\n\t\t \r\n\t\t  <StartDate>2000-01-01</StartDate>\r\n\t\t  <EndDate>2000-01-01</EndDate>\r\n\t\t  <CurrencyCode>USD</CurrencyCode>\t\t  \r\n\t\t  <PriceSpecification>\r\n\t\t\t   <TypeCode>{{PriceListItemTypeCode}}</TypeCode>  <!-- 7PR1 for Price -->\r\n\t\t\t   <Amount currencyCode=\"EUR\">200.00</Amount>\r\n\t\t\t   <BaseQuantity unitCode=\"EA\">1</BaseQuantity>\r\n\t\t\t   <BaseQuantityTypeCode>EA</BaseQuantityTypeCode>\r\n\t\t\t   <ProductID>{{ProductID}}</ProductID>\r\n\t\t\t   <ProductTypeCode>1</ProductTypeCode>   <!-- 1 means Material , 2 Means Service Product -->\r\n\t\t  </PriceSpecification>\r\n\t\t </SalesPriceList>\r\n\r\n      </glob:SalesPriceListBundleMaintainRequest_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managesalespricelistin2",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managesalespricelistin2"
									]
								}
							},
							"response": [
								{
									"name": "Create production proposal (Soap 1.1)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:CreateProductionProposal>\r\n         <CreateProductionPlanningOrder>\r\n            <SequenceNumber>1</SequenceNumber>\r\n            <SupplyPlanningAreaID>P1100</SupplyPlanningAreaID>\r\n            <MaterialID>P100101</MaterialID>\r\n            <!-- <ProductRequirementSpecificationID>?</ProductRequirementSpecificationID> -->\r\n            <MaterialAvailabilityDateTime timeZoneCode=\"CET\">2019-02-05T12:00:00.0000000Z</MaterialAvailabilityDateTime>\r\n            <Quantity unitCode=\"EA\">1</Quantity>\r\n            <QuantityTypeCode>EA</QuantityTypeCode>\r\n         </CreateProductionPlanningOrder>\r\n      </glob:CreateProductionProposal>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
										},
										"url": {
											"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/manageproductionproposalin",
											"protocol": "https",
											"host": [
												"{{TenantHostname}}"
											],
											"path": [
												"sap",
												"bc",
												"srt",
												"scs",
												"sap",
												"manageproductionproposalin"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "html",
									"header": [
										{
											"key": "content-type",
											"value": "text/html; charset=utf-8"
										},
										{
											"key": "content-encoding",
											"value": "gzip"
										},
										{
											"key": "content-length",
											"value": "505"
										},
										{
											"key": "sap-system",
											"value": "KHL"
										},
										{
											"key": "www-authenticate",
											"value": "Basic realm=\"SAP NetWeaver Application Server [KHL/171][alias]\""
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=31536000; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "<html>\n    <head>\n        <title>Logon Error Message</title>\n        <META http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\">\n        <style type=\"text/css\">body { font-family:tahoma,helvetica,sans-serif;color:#333333;background-color:#FFFFFF; }td { font-family:tahoma,helvetica,sans-serif;font-size:70%;color:#333333; }h1 { font-family:tahoma,helvetica,sans-serif;font-size:160%;font-weight:bold;margin-top:15px;margin-bottom:3px;color:#003366; }h2 { font-family:verdana,helvetica,sans-serif;font-size:120%;font-style:italic;font-weight:bold;margin-top:6px;margin-bottom:6px;color:#999900; }p { font-family:tahoma,helvetica,sans-serif;color:#333333;margin-top:4px;margin-bottom:4px; }ul { font-family:tahoma,helvetica,sans-serif;color:#333333;list-style-type:square;margin-top:8px;margin-bottom:8px; }li { font-family:tahoma,helvetica,sans-serif;color:#33333;margin-top:4px; }.emphasize { color:#333333;background-color:#C8E3FF;padding:5px;}.note { color:#CC6600; }a { font-family:tahoma,helvetica,sans-serif;text-decoration:underline;color:#336699; }a:visited { color:#001166; }a:hover { text-decoration:none; }</style>\n    </head>\n    <body>\n        <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\">\n            <tr>\n                <td>\n                    <h1>Logon failed</h1>\n                </td>\n            </tr>\n        </table>\n    </body>\n</html>"
								}
							]
						},
						{
							"name": "Get campaign specific price list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "13783b8f-a601-492f-8b16-481c2a8417ff",
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"Get Campaign specific price list - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"// Get workplace address object ID and parten object ID",
											"var jsonResponse = pm.response.json();",
											"pm.environment.set(\"ObjectID\", jsonResponse.d.results[0].ObjectID);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmupricelist/PriceListCollection?$filter=UUID eq guid'{{PriceListUUID}}'&$expand=PriceListKeys,Items,Items/ItemKeys,Items/Scales&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmupricelist",
										"PriceListCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "UUID eq guid'{{PriceListUUID}}'"
										},
										{
											"key": "$expand",
											"value": "PriceListKeys,Items,Items/ItemKeys,Items/Scales"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create/Update company specific price list (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "691edeb4-7bfd-4e5f-8c75-c140cf9f04a2",
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"pm.environment.set(\"PriceListUUID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.UUID);",
											"",
											"// Validations",
											"pm.test(\"Company specific price list \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.ID + \" created / updated \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3e65b165-9326-4ac2-9a90-37c0ed7a5612",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:SalesPriceListBundleMaintainRequest_sync>\r\n \t\t<SalesPriceList ActionCode=\"04\">\r\n\t\t  <TypeCode>{{PriceListTypeCode}}</TypeCode>  <!-- 7PL0 for Price List -->\r\n\t\t  <ID>{{CompanySpecificPriceListID}}</ID>\r\n\t\t  <Description languageCode=\"EN\">{{PriceListDescription}}</Description>\r\n\t\t  \r\n\t\t  <!-- Header Keys: SalesOrgID,DistributionChannelCode,ProductCategoryID -->\r\n\t\t  \r\n\t\t  <CompanyID>{{CompanyID}}</CompanyID>\r\n\t\t \r\n\t\t  <StartDate>2000-01-01</StartDate>\r\n\t\t  <EndDate>2000-01-01</EndDate>\r\n\t\t  <CurrencyCode>USD</CurrencyCode>\t\t  \r\n\t\t  <PriceSpecification>\r\n\t\t\t   <TypeCode>{{PriceListItemTypeCode}}</TypeCode>  <!-- 7PR1 for Price -->\r\n\t\t\t   <Amount currencyCode=\"EUR\">200.00</Amount>\r\n\t\t\t   <BaseQuantity unitCode=\"EA\">1</BaseQuantity>\r\n\t\t\t   <BaseQuantityTypeCode>EA</BaseQuantityTypeCode>\r\n\t\t\t   <ProductID>{{ProductID}}</ProductID>\r\n\t\t\t   <ProductTypeCode>1</ProductTypeCode>   <!-- 1 means Material , 2 Means Service Product -->\r\n\t\t  </PriceSpecification>\r\n\t\t </SalesPriceList>\r\n\r\n      </glob:SalesPriceListBundleMaintainRequest_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managesalespricelistin2",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managesalespricelistin2"
									]
								}
							},
							"response": [
								{
									"name": "Create production proposal (Soap 1.1)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:CreateProductionProposal>\r\n         <CreateProductionPlanningOrder>\r\n            <SequenceNumber>1</SequenceNumber>\r\n            <SupplyPlanningAreaID>P1100</SupplyPlanningAreaID>\r\n            <MaterialID>P100101</MaterialID>\r\n            <!-- <ProductRequirementSpecificationID>?</ProductRequirementSpecificationID> -->\r\n            <MaterialAvailabilityDateTime timeZoneCode=\"CET\">2019-02-05T12:00:00.0000000Z</MaterialAvailabilityDateTime>\r\n            <Quantity unitCode=\"EA\">1</Quantity>\r\n            <QuantityTypeCode>EA</QuantityTypeCode>\r\n         </CreateProductionPlanningOrder>\r\n      </glob:CreateProductionProposal>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
										},
										"url": {
											"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/manageproductionproposalin",
											"protocol": "https",
											"host": [
												"{{TenantHostname}}"
											],
											"path": [
												"sap",
												"bc",
												"srt",
												"scs",
												"sap",
												"manageproductionproposalin"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "html",
									"header": [
										{
											"key": "content-type",
											"value": "text/html; charset=utf-8"
										},
										{
											"key": "content-encoding",
											"value": "gzip"
										},
										{
											"key": "content-length",
											"value": "505"
										},
										{
											"key": "sap-system",
											"value": "KHL"
										},
										{
											"key": "www-authenticate",
											"value": "Basic realm=\"SAP NetWeaver Application Server [KHL/171][alias]\""
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=31536000; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "<html>\n    <head>\n        <title>Logon Error Message</title>\n        <META http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\">\n        <style type=\"text/css\">body { font-family:tahoma,helvetica,sans-serif;color:#333333;background-color:#FFFFFF; }td { font-family:tahoma,helvetica,sans-serif;font-size:70%;color:#333333; }h1 { font-family:tahoma,helvetica,sans-serif;font-size:160%;font-weight:bold;margin-top:15px;margin-bottom:3px;color:#003366; }h2 { font-family:verdana,helvetica,sans-serif;font-size:120%;font-style:italic;font-weight:bold;margin-top:6px;margin-bottom:6px;color:#999900; }p { font-family:tahoma,helvetica,sans-serif;color:#333333;margin-top:4px;margin-bottom:4px; }ul { font-family:tahoma,helvetica,sans-serif;color:#333333;list-style-type:square;margin-top:8px;margin-bottom:8px; }li { font-family:tahoma,helvetica,sans-serif;color:#33333;margin-top:4px; }.emphasize { color:#333333;background-color:#C8E3FF;padding:5px;}.note { color:#CC6600; }a { font-family:tahoma,helvetica,sans-serif;text-decoration:underline;color:#336699; }a:visited { color:#001166; }a:hover { text-decoration:none; }</style>\n    </head>\n    <body>\n        <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\">\n            <tr>\n                <td>\n                    <h1>Logon failed</h1>\n                </td>\n            </tr>\n        </table>\n    </body>\n</html>"
								}
							]
						},
						{
							"name": "Get  company specific price list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "13783b8f-a601-492f-8b16-481c2a8417ff",
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"Get Company specific price list  - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"// Get workplace address object ID and parten object ID",
											"var jsonResponse = pm.response.json();",
											"pm.environment.set(\"ObjectID\", jsonResponse.d.results[0].ObjectID);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmupricelist/PriceListCollection?$filter=UUID eq guid'{{PriceListUUID}}'&$expand=PriceListKeys,Items,Items/ItemKeys,Items/Scales&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmupricelist",
										"PriceListCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "UUID eq guid'{{PriceListUUID}}'"
										},
										{
											"key": "$expand",
											"value": "PriceListKeys,Items,Items/ItemKeys,Items/Scales"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Discount Lists",
					"item": [
						{
							"name": "Create/Update overall customer discount (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "691edeb4-7bfd-4e5f-8c75-c140cf9f04a2",
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"",
											"",
											"// Validations",
											"pm.test(\"Overall customer discount \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.ID + \" created / updated \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3e65b165-9326-4ac2-9a90-37c0ed7a5612",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:SalesPriceListBundleMaintainRequest_sync>\r\n \t\t<SalesPriceList ActionCode=\"04\">\r\n\t\t  <TypeCode>7PL1</TypeCode>\r\n\t\t  <ID>OverallCustomerDiscountID</ID>\r\n\t\t  <Description languageCode=\"EN\">{{DiscountListDescription}}</Description>\r\n\t\t  <StartDate>2000-05-05</StartDate>\r\n\t\t  <EndDate>2000-05-05</EndDate>\r\n\t\t    \r\n\t\t  <PriceSpecification>\r\n\t\t\t   <TypeCode>{{DiscountListItemTypeCode}}</TypeCode>\r\n\t\t\t   <Percent>1.00</Percent>\r\n\t\t\t   \r\n\t\t\t   <!-- Item Keys: AccountID -->\r\n\t\t\t   <AccountID>{{AccountID}}</AccountID>\r\n\t\t  </PriceSpecification>\r\n\t\t </SalesPriceList>\r\n\r\n      </glob:SalesPriceListBundleMaintainRequest_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managesalespricelistin2",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managesalespricelistin2"
									]
								}
							},
							"response": [
								{
									"name": "Create production proposal (Soap 1.1)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:CreateProductionProposal>\r\n         <CreateProductionPlanningOrder>\r\n            <SequenceNumber>1</SequenceNumber>\r\n            <SupplyPlanningAreaID>P1100</SupplyPlanningAreaID>\r\n            <MaterialID>P100101</MaterialID>\r\n            <!-- <ProductRequirementSpecificationID>?</ProductRequirementSpecificationID> -->\r\n            <MaterialAvailabilityDateTime timeZoneCode=\"CET\">2019-02-05T12:00:00.0000000Z</MaterialAvailabilityDateTime>\r\n            <Quantity unitCode=\"EA\">1</Quantity>\r\n            <QuantityTypeCode>EA</QuantityTypeCode>\r\n         </CreateProductionPlanningOrder>\r\n      </glob:CreateProductionProposal>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
										},
										"url": {
											"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/manageproductionproposalin",
											"protocol": "https",
											"host": [
												"{{TenantHostname}}"
											],
											"path": [
												"sap",
												"bc",
												"srt",
												"scs",
												"sap",
												"manageproductionproposalin"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "html",
									"header": [
										{
											"key": "content-type",
											"value": "text/html; charset=utf-8"
										},
										{
											"key": "content-encoding",
											"value": "gzip"
										},
										{
											"key": "content-length",
											"value": "505"
										},
										{
											"key": "sap-system",
											"value": "KHL"
										},
										{
											"key": "www-authenticate",
											"value": "Basic realm=\"SAP NetWeaver Application Server [KHL/171][alias]\""
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=31536000; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "<html>\n    <head>\n        <title>Logon Error Message</title>\n        <META http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\">\n        <style type=\"text/css\">body { font-family:tahoma,helvetica,sans-serif;color:#333333;background-color:#FFFFFF; }td { font-family:tahoma,helvetica,sans-serif;font-size:70%;color:#333333; }h1 { font-family:tahoma,helvetica,sans-serif;font-size:160%;font-weight:bold;margin-top:15px;margin-bottom:3px;color:#003366; }h2 { font-family:verdana,helvetica,sans-serif;font-size:120%;font-style:italic;font-weight:bold;margin-top:6px;margin-bottom:6px;color:#999900; }p { font-family:tahoma,helvetica,sans-serif;color:#333333;margin-top:4px;margin-bottom:4px; }ul { font-family:tahoma,helvetica,sans-serif;color:#333333;list-style-type:square;margin-top:8px;margin-bottom:8px; }li { font-family:tahoma,helvetica,sans-serif;color:#33333;margin-top:4px; }.emphasize { color:#333333;background-color:#C8E3FF;padding:5px;}.note { color:#CC6600; }a { font-family:tahoma,helvetica,sans-serif;text-decoration:underline;color:#336699; }a:visited { color:#001166; }a:hover { text-decoration:none; }</style>\n    </head>\n    <body>\n        <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\">\n            <tr>\n                <td>\n                    <h1>Logon failed</h1>\n                </td>\n            </tr>\n        </table>\n    </body>\n</html>"
								}
							]
						},
						{
							"name": "Get overall customer discount",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "13783b8f-a601-492f-8b16-481c2a8417ff",
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"Get Overall customer discount - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"// Get workplace address object ID and parten object ID",
											"var jsonResponse = pm.response.json();",
											"pm.environment.set(\"ObjectID\", jsonResponse.d.results[0].ObjectID);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmupricelist/PriceListCollection?$filter=UUID eq guid'{{DiscountListUUID}}'&$expand=PriceListKeys,Items,Items/ItemKeys,Items/Scales&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmupricelist",
										"PriceListCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "UUID eq guid'{{DiscountListUUID}}'"
										},
										{
											"key": "$expand",
											"value": "PriceListKeys,Items,Items/ItemKeys,Items/Scales"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create/Update customer hierarchy specific discount (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "691edeb4-7bfd-4e5f-8c75-c140cf9f04a2",
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"",
											"pm.environment.set(\"DiscountListUUID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.UUID);",
											"",
											"",
											"// Validations",
											"pm.test(\"Customer hierarchy specific discount \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.ID + \" created / updated \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3e65b165-9326-4ac2-9a90-37c0ed7a5612",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:SalesPriceListBundleMaintainRequest_sync>\r\n \t\t<SalesPriceList ActionCode=\"04\">\r\n\t\t  <TypeCode>{{DiscountListTypeCode}}</TypeCode>\r\n\t\t  <ID>CustomerHierarchySpecificDiscountListID</ID>\r\n\t\t  <Description languageCode=\"EN\">{{DiscountListDescription}}</Description>\r\n\t\t  \r\n\t\t  <!-- Header Keys: AccountHierarchyID -->\r\n\t\t  \r\n\t\t  <AccountHierarchyID>IF01</AccountHierarchyID>\r\n\t\t  \r\n\t\t  <StartDate>2001-01-01</StartDate>\r\n\t\t  <EndDate>2001-01-01</EndDate>\r\n\t\t\r\n\t\t  <PriceSpecification>\r\n\t\t\t   <TypeCode>7PR6</TypeCode>\r\n\t\t\t   <Percent>1.00</Percent>\r\n\t\t\t   \r\n\t\t\t    <!-- Item Keys: ProductID,ProductTypeCode  -->\r\n\t\t\t   <ProductID>{{ProductID}}</ProductID>\r\n\t\t\t   <ProductTypeCode>1</ProductTypeCode>   <!-- 1 means Material , 2 Means Service Product -->\r\n\t\t\t   \r\n\t\t  </PriceSpecification>\r\n\t\t </SalesPriceList>\r\n\r\n      </glob:SalesPriceListBundleMaintainRequest_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managesalespricelistin2",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managesalespricelistin2"
									]
								}
							},
							"response": [
								{
									"name": "Create production proposal (Soap 1.1)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:CreateProductionProposal>\r\n         <CreateProductionPlanningOrder>\r\n            <SequenceNumber>1</SequenceNumber>\r\n            <SupplyPlanningAreaID>P1100</SupplyPlanningAreaID>\r\n            <MaterialID>P100101</MaterialID>\r\n            <!-- <ProductRequirementSpecificationID>?</ProductRequirementSpecificationID> -->\r\n            <MaterialAvailabilityDateTime timeZoneCode=\"CET\">2019-02-05T12:00:00.0000000Z</MaterialAvailabilityDateTime>\r\n            <Quantity unitCode=\"EA\">1</Quantity>\r\n            <QuantityTypeCode>EA</QuantityTypeCode>\r\n         </CreateProductionPlanningOrder>\r\n      </glob:CreateProductionProposal>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
										},
										"url": {
											"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/manageproductionproposalin",
											"protocol": "https",
											"host": [
												"{{TenantHostname}}"
											],
											"path": [
												"sap",
												"bc",
												"srt",
												"scs",
												"sap",
												"manageproductionproposalin"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "html",
									"header": [
										{
											"key": "content-type",
											"value": "text/html; charset=utf-8"
										},
										{
											"key": "content-encoding",
											"value": "gzip"
										},
										{
											"key": "content-length",
											"value": "505"
										},
										{
											"key": "sap-system",
											"value": "KHL"
										},
										{
											"key": "www-authenticate",
											"value": "Basic realm=\"SAP NetWeaver Application Server [KHL/171][alias]\""
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=31536000; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "<html>\n    <head>\n        <title>Logon Error Message</title>\n        <META http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\">\n        <style type=\"text/css\">body { font-family:tahoma,helvetica,sans-serif;color:#333333;background-color:#FFFFFF; }td { font-family:tahoma,helvetica,sans-serif;font-size:70%;color:#333333; }h1 { font-family:tahoma,helvetica,sans-serif;font-size:160%;font-weight:bold;margin-top:15px;margin-bottom:3px;color:#003366; }h2 { font-family:verdana,helvetica,sans-serif;font-size:120%;font-style:italic;font-weight:bold;margin-top:6px;margin-bottom:6px;color:#999900; }p { font-family:tahoma,helvetica,sans-serif;color:#333333;margin-top:4px;margin-bottom:4px; }ul { font-family:tahoma,helvetica,sans-serif;color:#333333;list-style-type:square;margin-top:8px;margin-bottom:8px; }li { font-family:tahoma,helvetica,sans-serif;color:#33333;margin-top:4px; }.emphasize { color:#333333;background-color:#C8E3FF;padding:5px;}.note { color:#CC6600; }a { font-family:tahoma,helvetica,sans-serif;text-decoration:underline;color:#336699; }a:visited { color:#001166; }a:hover { text-decoration:none; }</style>\n    </head>\n    <body>\n        <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\">\n            <tr>\n                <td>\n                    <h1>Logon failed</h1>\n                </td>\n            </tr>\n        </table>\n    </body>\n</html>"
								}
							]
						},
						{
							"name": "Get  customer hierarchy specific discount",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "13783b8f-a601-492f-8b16-481c2a8417ff",
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"Get Customer hierarchy specific discount - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"// Get workplace address object ID and parten object ID",
											"var jsonResponse = pm.response.json();",
											"pm.environment.set(\"ObjectID\", jsonResponse.d.results[0].ObjectID);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmupricelist/PriceListCollection?$filter=UUID eq guid'{{PriceListUUID}}'&$expand=PriceListKeys,Items,Items/ItemKeys,Items/Scales&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmupricelist",
										"PriceListCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "UUID eq guid'{{PriceListUUID}}'"
										},
										{
											"key": "$expand",
											"value": "PriceListKeys,Items,Items/ItemKeys,Items/Scales"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create/Update customer specific discount (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "691edeb4-7bfd-4e5f-8c75-c140cf9f04a2",
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"",
											"pm.environment.set(\"DiscountListUUID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.UUID);",
											"",
											"// Validations",
											"pm.test(\"Customer specific discount \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.ID + \" created / updated \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3e65b165-9326-4ac2-9a90-37c0ed7a5612",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:SalesPriceListBundleMaintainRequest_sync>\r\n \t\t<SalesPriceList ActionCode=\"04\">\r\n\t\t  <TypeCode>7PL2</TypeCode>\r\n\t\t  <ID>CustomerSpecificDiscountListID</ID>\r\n\t\t  <Description languageCode=\"EN\">{{DiscountListDescription}}</Description>\r\n\t\t  \r\n\t\t  <!-- Header Keys: AccountID -->\r\n\t\t  \r\n\t\t   <AccountID>{{AccountID}}</AccountID>\r\n\t\t  \r\n\t\t  <StartDate>2001-01-01</StartDate>\r\n\t\t  <EndDate>2001-01-01</EndDate>\r\n\t\t\r\n\t\t  <PriceSpecification>\r\n\t\t\t   <TypeCode>7PR6</TypeCode>\r\n\t\t\t   <Percent>1.00</Percent>\r\n\t\t\t   \r\n\t\t\t    <!-- Item Keys: ProductID,ProductTypeCode  -->\r\n\t\t\t   <ProductID>{{ProductID}}</ProductID>\r\n\t\t\t   <ProductTypeCode>1</ProductTypeCode>   <!-- 1 means Material , 2 Means Service Product -->\r\n\t\t\t   \r\n\t\t  </PriceSpecification>\r\n\t\t </SalesPriceList>\r\n\r\n      </glob:SalesPriceListBundleMaintainRequest_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managesalespricelistin2",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managesalespricelistin2"
									]
								}
							},
							"response": [
								{
									"name": "Create production proposal (Soap 1.1)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:CreateProductionProposal>\r\n         <CreateProductionPlanningOrder>\r\n            <SequenceNumber>1</SequenceNumber>\r\n            <SupplyPlanningAreaID>P1100</SupplyPlanningAreaID>\r\n            <MaterialID>P100101</MaterialID>\r\n            <!-- <ProductRequirementSpecificationID>?</ProductRequirementSpecificationID> -->\r\n            <MaterialAvailabilityDateTime timeZoneCode=\"CET\">2019-02-05T12:00:00.0000000Z</MaterialAvailabilityDateTime>\r\n            <Quantity unitCode=\"EA\">1</Quantity>\r\n            <QuantityTypeCode>EA</QuantityTypeCode>\r\n         </CreateProductionPlanningOrder>\r\n      </glob:CreateProductionProposal>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
										},
										"url": {
											"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/manageproductionproposalin",
											"protocol": "https",
											"host": [
												"{{TenantHostname}}"
											],
											"path": [
												"sap",
												"bc",
												"srt",
												"scs",
												"sap",
												"manageproductionproposalin"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "html",
									"header": [
										{
											"key": "content-type",
											"value": "text/html; charset=utf-8"
										},
										{
											"key": "content-encoding",
											"value": "gzip"
										},
										{
											"key": "content-length",
											"value": "505"
										},
										{
											"key": "sap-system",
											"value": "KHL"
										},
										{
											"key": "www-authenticate",
											"value": "Basic realm=\"SAP NetWeaver Application Server [KHL/171][alias]\""
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=31536000; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "<html>\n    <head>\n        <title>Logon Error Message</title>\n        <META http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\">\n        <style type=\"text/css\">body { font-family:tahoma,helvetica,sans-serif;color:#333333;background-color:#FFFFFF; }td { font-family:tahoma,helvetica,sans-serif;font-size:70%;color:#333333; }h1 { font-family:tahoma,helvetica,sans-serif;font-size:160%;font-weight:bold;margin-top:15px;margin-bottom:3px;color:#003366; }h2 { font-family:verdana,helvetica,sans-serif;font-size:120%;font-style:italic;font-weight:bold;margin-top:6px;margin-bottom:6px;color:#999900; }p { font-family:tahoma,helvetica,sans-serif;color:#333333;margin-top:4px;margin-bottom:4px; }ul { font-family:tahoma,helvetica,sans-serif;color:#333333;list-style-type:square;margin-top:8px;margin-bottom:8px; }li { font-family:tahoma,helvetica,sans-serif;color:#33333;margin-top:4px; }.emphasize { color:#333333;background-color:#C8E3FF;padding:5px;}.note { color:#CC6600; }a { font-family:tahoma,helvetica,sans-serif;text-decoration:underline;color:#336699; }a:visited { color:#001166; }a:hover { text-decoration:none; }</style>\n    </head>\n    <body>\n        <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\">\n            <tr>\n                <td>\n                    <h1>Logon failed</h1>\n                </td>\n            </tr>\n        </table>\n    </body>\n</html>"
								}
							]
						},
						{
							"name": "Get customer specific discount",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "13783b8f-a601-492f-8b16-481c2a8417ff",
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"Get Customer specific discount - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"// Get workplace address object ID and parten object ID",
											"var jsonResponse = pm.response.json();",
											"pm.environment.set(\"ObjectID\", jsonResponse.d.results[0].ObjectID);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmupricelist/PriceListCollection?$filter=UUID eq guid'{{PriceListUUID}}'&$expand=PriceListKeys,Items,Items/ItemKeys,Items/Scales&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmupricelist",
										"PriceListCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "UUID eq guid'{{PriceListUUID}}'"
										},
										{
											"key": "$expand",
											"value": "PriceListKeys,Items,Items/ItemKeys,Items/Scales"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create/Update customer specific discount product category (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "691edeb4-7bfd-4e5f-8c75-c140cf9f04a2",
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"pm.environment.set(\"DiscountListUUID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.UUID);",
											"",
											"",
											"// Validations",
											"pm.test(\"Customer specific discount product category \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.ID + \" created / updated \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3e65b165-9326-4ac2-9a90-37c0ed7a5612",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:SalesPriceListBundleMaintainRequest_sync>\r\n \t\t<SalesPriceList ActionCode=\"04\">\r\n\t\t  <TypeCode>7PL4</TypeCode>\r\n\t\t  <ID>CustomerSpecificDiscountProductCategoryListID</ID>\r\n\t\t  <Description languageCode=\"EN\">{{DiscountListDescription}}</Description>\r\n\t\t  \r\n\t\t  <!-- Header Keys: AccountID -->\r\n\t\t  \r\n\t\t   <AccountID>{{AccountID}}</AccountID>\r\n\t\t  \r\n\t\t  <StartDate>2000-01-01</StartDate>\r\n\t\t  <EndDate>2000-01-01</EndDate>\r\n\t\t\r\n\t\t  <PriceSpecification>\r\n\t\t\t   <TypeCode>7PR6</TypeCode>\r\n\t\t\t   <Percent>1.00</Percent>\r\n\t\t\t   \r\n\t\t\t      <!-- Item Keys: ProductCategoryID  -->\r\n\t\t\t\t<ProductCategoryHierarchyID>ROOT-1</ProductCategoryHierarchyID>\r\n\t\t\t\t<ProductCategoryID>191</ProductCategoryID>\r\n\r\n\t\t\t   \r\n\t\t  </PriceSpecification>\r\n\t\t </SalesPriceList>\r\n\r\n      </glob:SalesPriceListBundleMaintainRequest_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managesalespricelistin2",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managesalespricelistin2"
									]
								}
							},
							"response": [
								{
									"name": "Create production proposal (Soap 1.1)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:CreateProductionProposal>\r\n         <CreateProductionPlanningOrder>\r\n            <SequenceNumber>1</SequenceNumber>\r\n            <SupplyPlanningAreaID>P1100</SupplyPlanningAreaID>\r\n            <MaterialID>P100101</MaterialID>\r\n            <!-- <ProductRequirementSpecificationID>?</ProductRequirementSpecificationID> -->\r\n            <MaterialAvailabilityDateTime timeZoneCode=\"CET\">2019-02-05T12:00:00.0000000Z</MaterialAvailabilityDateTime>\r\n            <Quantity unitCode=\"EA\">1</Quantity>\r\n            <QuantityTypeCode>EA</QuantityTypeCode>\r\n         </CreateProductionPlanningOrder>\r\n      </glob:CreateProductionProposal>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
										},
										"url": {
											"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/manageproductionproposalin",
											"protocol": "https",
											"host": [
												"{{TenantHostname}}"
											],
											"path": [
												"sap",
												"bc",
												"srt",
												"scs",
												"sap",
												"manageproductionproposalin"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "html",
									"header": [
										{
											"key": "content-type",
											"value": "text/html; charset=utf-8"
										},
										{
											"key": "content-encoding",
											"value": "gzip"
										},
										{
											"key": "content-length",
											"value": "505"
										},
										{
											"key": "sap-system",
											"value": "KHL"
										},
										{
											"key": "www-authenticate",
											"value": "Basic realm=\"SAP NetWeaver Application Server [KHL/171][alias]\""
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=31536000; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "<html>\n    <head>\n        <title>Logon Error Message</title>\n        <META http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\">\n        <style type=\"text/css\">body { font-family:tahoma,helvetica,sans-serif;color:#333333;background-color:#FFFFFF; }td { font-family:tahoma,helvetica,sans-serif;font-size:70%;color:#333333; }h1 { font-family:tahoma,helvetica,sans-serif;font-size:160%;font-weight:bold;margin-top:15px;margin-bottom:3px;color:#003366; }h2 { font-family:verdana,helvetica,sans-serif;font-size:120%;font-style:italic;font-weight:bold;margin-top:6px;margin-bottom:6px;color:#999900; }p { font-family:tahoma,helvetica,sans-serif;color:#333333;margin-top:4px;margin-bottom:4px; }ul { font-family:tahoma,helvetica,sans-serif;color:#333333;list-style-type:square;margin-top:8px;margin-bottom:8px; }li { font-family:tahoma,helvetica,sans-serif;color:#33333;margin-top:4px; }.emphasize { color:#333333;background-color:#C8E3FF;padding:5px;}.note { color:#CC6600; }a { font-family:tahoma,helvetica,sans-serif;text-decoration:underline;color:#336699; }a:visited { color:#001166; }a:hover { text-decoration:none; }</style>\n    </head>\n    <body>\n        <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\">\n            <tr>\n                <td>\n                    <h1>Logon failed</h1>\n                </td>\n            </tr>\n        </table>\n    </body>\n</html>"
								}
							]
						},
						{
							"name": "Get customer specific discount product category",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "13783b8f-a601-492f-8b16-481c2a8417ff",
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"Get Customer specific discount product category - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"// Get workplace address object ID and parten object ID",
											"var jsonResponse = pm.response.json();",
											"pm.environment.set(\"ObjectID\", jsonResponse.d.results[0].ObjectID);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmupricelist/PriceListCollection?$filter=UUID eq guid'{{PriceListUUID}}'&$expand=PriceListKeys,Items,Items/ItemKeys,Items/Scales&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmupricelist",
										"PriceListCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "UUID eq guid'{{PriceListUUID}}'"
										},
										{
											"key": "$expand",
											"value": "PriceListKeys,Items,Items/ItemKeys,Items/Scales"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create/Update customer hierarchy specific discount product category (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "691edeb4-7bfd-4e5f-8c75-c140cf9f04a2",
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"",
											"pm.environment.set(\"DiscountListUUID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.UUID);",
											"",
											"// Validations",
											"pm.test(\"Customer hierarchy specific discount product category \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.ID + \" created / updated \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3e65b165-9326-4ac2-9a90-37c0ed7a5612",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:SalesPriceListBundleMaintainRequest_sync>\r\n \t\t<SalesPriceList ActionCode=\"04\">\r\n\t\t  <TypeCode>7PL3</TypeCode>\r\n\t\t  <ID>CustomerHierarchySpecificProductCategoryDiscountListID</ID>\r\n\t\t  <Description languageCode=\"EN\">{{DiscountListDescription}}</Description>\r\n\t\t  \r\n\t\t  <!-- Header Keys: AccountHierarchyID -->\r\n\t\t  \r\n\t\t  <AccountHierarchyID>IF01</AccountHierarchyID>\r\n\t\t  \r\n\t\t  <StartDate>2001-01-01</StartDate>\r\n\t\t  <EndDate>2001-01-01</EndDate>\r\n\t\t\r\n\t\t  <PriceSpecification>\r\n\t\t\t   <TypeCode>7PR6</TypeCode>\r\n\t\t\t   <Percent>1.00</Percent>\r\n\t\t\t   \r\n\t\t\t       <!-- Item Keys: ProductCategoryHierarchyID,ProductCategoryID  -->\r\n\t\t\t\t<ProductCategoryHierarchyID>ROOT-1</ProductCategoryHierarchyID>\r\n\t\t\t\t<ProductCategoryID>191</ProductCategoryID>\r\n\t\t\t   \r\n\t\t  </PriceSpecification>\r\n\t\t </SalesPriceList>\r\n\r\n      </glob:SalesPriceListBundleMaintainRequest_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managesalespricelistin2",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managesalespricelistin2"
									]
								}
							},
							"response": [
								{
									"name": "Create production proposal (Soap 1.1)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:CreateProductionProposal>\r\n         <CreateProductionPlanningOrder>\r\n            <SequenceNumber>1</SequenceNumber>\r\n            <SupplyPlanningAreaID>P1100</SupplyPlanningAreaID>\r\n            <MaterialID>P100101</MaterialID>\r\n            <!-- <ProductRequirementSpecificationID>?</ProductRequirementSpecificationID> -->\r\n            <MaterialAvailabilityDateTime timeZoneCode=\"CET\">2019-02-05T12:00:00.0000000Z</MaterialAvailabilityDateTime>\r\n            <Quantity unitCode=\"EA\">1</Quantity>\r\n            <QuantityTypeCode>EA</QuantityTypeCode>\r\n         </CreateProductionPlanningOrder>\r\n      </glob:CreateProductionProposal>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
										},
										"url": {
											"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/manageproductionproposalin",
											"protocol": "https",
											"host": [
												"{{TenantHostname}}"
											],
											"path": [
												"sap",
												"bc",
												"srt",
												"scs",
												"sap",
												"manageproductionproposalin"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "html",
									"header": [
										{
											"key": "content-type",
											"value": "text/html; charset=utf-8"
										},
										{
											"key": "content-encoding",
											"value": "gzip"
										},
										{
											"key": "content-length",
											"value": "505"
										},
										{
											"key": "sap-system",
											"value": "KHL"
										},
										{
											"key": "www-authenticate",
											"value": "Basic realm=\"SAP NetWeaver Application Server [KHL/171][alias]\""
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=31536000; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "<html>\n    <head>\n        <title>Logon Error Message</title>\n        <META http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\">\n        <style type=\"text/css\">body { font-family:tahoma,helvetica,sans-serif;color:#333333;background-color:#FFFFFF; }td { font-family:tahoma,helvetica,sans-serif;font-size:70%;color:#333333; }h1 { font-family:tahoma,helvetica,sans-serif;font-size:160%;font-weight:bold;margin-top:15px;margin-bottom:3px;color:#003366; }h2 { font-family:verdana,helvetica,sans-serif;font-size:120%;font-style:italic;font-weight:bold;margin-top:6px;margin-bottom:6px;color:#999900; }p { font-family:tahoma,helvetica,sans-serif;color:#333333;margin-top:4px;margin-bottom:4px; }ul { font-family:tahoma,helvetica,sans-serif;color:#333333;list-style-type:square;margin-top:8px;margin-bottom:8px; }li { font-family:tahoma,helvetica,sans-serif;color:#33333;margin-top:4px; }.emphasize { color:#333333;background-color:#C8E3FF;padding:5px;}.note { color:#CC6600; }a { font-family:tahoma,helvetica,sans-serif;text-decoration:underline;color:#336699; }a:visited { color:#001166; }a:hover { text-decoration:none; }</style>\n    </head>\n    <body>\n        <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\">\n            <tr>\n                <td>\n                    <h1>Logon failed</h1>\n                </td>\n            </tr>\n        </table>\n    </body>\n</html>"
								}
							]
						},
						{
							"name": "Get customer hierarchy specific discount product category",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "13783b8f-a601-492f-8b16-481c2a8417ff",
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"Get Customer hierarchy specific discount product category - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"// Get workplace address object ID and parten object ID",
											"var jsonResponse = pm.response.json();",
											"pm.environment.set(\"ObjectID\", jsonResponse.d.results[0].ObjectID);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmupricelist/PriceListCollection?$filter=UUID eq guid'{{PriceListUUID}}'&$expand=PriceListKeys,Items,Items/ItemKeys,Items/Scales&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmupricelist",
										"PriceListCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "UUID eq guid'{{PriceListUUID}}'"
										},
										{
											"key": "$expand",
											"value": "PriceListKeys,Items,Items/ItemKeys,Items/Scales"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Pricing (Gross)",
			"item": [
				{
					"name": "Price Lists (Gross)",
					"item": [
						{
							"name": "Create/Update base price list (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "691edeb4-7bfd-4e5f-8c75-c140cf9f04a2",
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"",
											"pm.environment.set(\"PriceListUUID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.UUID);",
											"",
											"",
											"// Validations",
											"pm.test(\"Gross Base Price List \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.ID + \" created / updated \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3e65b165-9326-4ac2-9a90-37c0ed7a5612",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:SalesPriceListBundleMaintainRequest_sync>\r\n \t\t<SalesPriceList ActionCode=\"04\">\r\n\t\t  <TypeCode>{{GrossPriceListTypeCode}}</TypeCode>  <!-- 7PL0 for Price List -->\r\n\t\t  <ID>BasePriceListGrossID</ID>\r\n\t\t  <Description languageCode=\"EN\">{{PriceListDescription}}</Description>\r\n\t\t  \r\n\t\t  <!-- No Header Keys -->\r\n\t\t  \r\n\t\t  <StartDate>2000-02-02</StartDate>\r\n\t\t  <EndDate>2000-02-02</EndDate>\r\n\t\t  <CurrencyCode>USD</CurrencyCode>\t\t  \r\n\t\t  <PriceSpecification>\r\n\t\t\t   <TypeCode>{{GrossPriceListItemTypeCode}}</TypeCode>  <!-- 7PR1 for Price -->\r\n\t\t\t   <Amount currencyCode=\"EUR\">200.00</Amount>\r\n\t\t\t   <BaseQuantity unitCode=\"EA\">1</BaseQuantity>\r\n\t\t\t   <BaseQuantityTypeCode>EA</BaseQuantityTypeCode>\r\n\t\t\t   <ProductID>{{ProductID}}</ProductID>\r\n\t\t\t   <ProductTypeCode>1</ProductTypeCode>   <!-- 1 means Material , 2 Means Service Product -->\r\n\t\t  </PriceSpecification>\r\n\t\t </SalesPriceList>\r\n\r\n      </glob:SalesPriceListBundleMaintainRequest_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managesalespricelistin2",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managesalespricelistin2"
									]
								}
							},
							"response": [
								{
									"name": "Create production proposal (Soap 1.1)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:CreateProductionProposal>\r\n         <CreateProductionPlanningOrder>\r\n            <SequenceNumber>1</SequenceNumber>\r\n            <SupplyPlanningAreaID>P1100</SupplyPlanningAreaID>\r\n            <MaterialID>P100101</MaterialID>\r\n            <!-- <ProductRequirementSpecificationID>?</ProductRequirementSpecificationID> -->\r\n            <MaterialAvailabilityDateTime timeZoneCode=\"CET\">2019-02-05T12:00:00.0000000Z</MaterialAvailabilityDateTime>\r\n            <Quantity unitCode=\"EA\">1</Quantity>\r\n            <QuantityTypeCode>EA</QuantityTypeCode>\r\n         </CreateProductionPlanningOrder>\r\n      </glob:CreateProductionProposal>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
										},
										"url": {
											"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/manageproductionproposalin",
											"protocol": "https",
											"host": [
												"{{TenantHostname}}"
											],
											"path": [
												"sap",
												"bc",
												"srt",
												"scs",
												"sap",
												"manageproductionproposalin"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "html",
									"header": [
										{
											"key": "content-type",
											"value": "text/html; charset=utf-8"
										},
										{
											"key": "content-encoding",
											"value": "gzip"
										},
										{
											"key": "content-length",
											"value": "505"
										},
										{
											"key": "sap-system",
											"value": "KHL"
										},
										{
											"key": "www-authenticate",
											"value": "Basic realm=\"SAP NetWeaver Application Server [KHL/171][alias]\""
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=31536000; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "<html>\n    <head>\n        <title>Logon Error Message</title>\n        <META http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\">\n        <style type=\"text/css\">body { font-family:tahoma,helvetica,sans-serif;color:#333333;background-color:#FFFFFF; }td { font-family:tahoma,helvetica,sans-serif;font-size:70%;color:#333333; }h1 { font-family:tahoma,helvetica,sans-serif;font-size:160%;font-weight:bold;margin-top:15px;margin-bottom:3px;color:#003366; }h2 { font-family:verdana,helvetica,sans-serif;font-size:120%;font-style:italic;font-weight:bold;margin-top:6px;margin-bottom:6px;color:#999900; }p { font-family:tahoma,helvetica,sans-serif;color:#333333;margin-top:4px;margin-bottom:4px; }ul { font-family:tahoma,helvetica,sans-serif;color:#333333;list-style-type:square;margin-top:8px;margin-bottom:8px; }li { font-family:tahoma,helvetica,sans-serif;color:#33333;margin-top:4px; }.emphasize { color:#333333;background-color:#C8E3FF;padding:5px;}.note { color:#CC6600; }a { font-family:tahoma,helvetica,sans-serif;text-decoration:underline;color:#336699; }a:visited { color:#001166; }a:hover { text-decoration:none; }</style>\n    </head>\n    <body>\n        <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\">\n            <tr>\n                <td>\n                    <h1>Logon failed</h1>\n                </td>\n            </tr>\n        </table>\n    </body>\n</html>"
								}
							]
						},
						{
							"name": "Get base price list Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "13783b8f-a601-492f-8b16-481c2a8417ff",
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"Get Gross Base Price List  - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"// Get workplace address object ID and parten object ID",
											"var jsonResponse = pm.response.json();",
											"pm.environment.set(\"ObjectID\", jsonResponse.d.results[0].ObjectID);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmupricelist/PriceListCollection?$filter=UUID eq guid'{{PriceListUUID}}'&$expand=PriceListKeys,Items,Items/ItemKeys,Items/Scales&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmupricelist",
										"PriceListCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "UUID eq guid'{{PriceListUUID}}'"
										},
										{
											"key": "$expand",
											"value": "PriceListKeys,Items,Items/ItemKeys,Items/Scales"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create/Update base price list product category (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "691edeb4-7bfd-4e5f-8c75-c140cf9f04a2",
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"",
											"pm.environment.set(\"PriceListUUID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.UUID);",
											"",
											"",
											"// Validations",
											"pm.test(\"Gross Base price list product category \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.ID + \" created / updated \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3e65b165-9326-4ac2-9a90-37c0ed7a5612",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:SalesPriceListBundleMaintainRequest_sync>\r\n \t\t<SalesPriceList ActionCode=\"04\">\r\n\t\t  <TypeCode>{{GrossPriceListTypeCode}}</TypeCode>  <!-- 7PL0 for Price List -->\r\n\t\t  <ID>BaseProductCategoryPriceListGrossID</ID>\r\n\t\t  <Description languageCode=\"EN\">{{PriceListDescription}}</Description>\r\n\t\t  \r\n\t\t  <!--Header Keys: ProductCategoryID --> \r\n\t\t  <ProductCategoryID>{{ProductCategoryID}}</ProductCategoryID>\r\n\t\t  \r\n\t\t  <StartDate>2000-02-02</StartDate>\r\n\t\t  <EndDate>2000-02-02</EndDate>\r\n\t\t  <CurrencyCode>USD</CurrencyCode>\t\t  \r\n\t\t  <PriceSpecification>\r\n\t\t\t   <TypeCode>{{GrossPriceListItemTypeCode}}</TypeCode>  <!-- 7PR1 for Price -->\r\n\t\t\t   <Amount currencyCode=\"EUR\">200.00</Amount>\r\n\t\t\t   <BaseQuantity unitCode=\"EA\">1</BaseQuantity>\r\n\t\t\t   <BaseQuantityTypeCode>EA</BaseQuantityTypeCode>\r\n\t\t\t   <ProductID>P100101</ProductID>\r\n\t\t\t   <ProductTypeCode>1</ProductTypeCode>   <!-- 1 means Material , 2 Means Service Product -->\r\n\t\t  </PriceSpecification>\r\n\t\t </SalesPriceList>\r\n\r\n      </glob:SalesPriceListBundleMaintainRequest_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managesalespricelistin2",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managesalespricelistin2"
									]
								}
							},
							"response": [
								{
									"name": "Create production proposal (Soap 1.1)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:CreateProductionProposal>\r\n         <CreateProductionPlanningOrder>\r\n            <SequenceNumber>1</SequenceNumber>\r\n            <SupplyPlanningAreaID>P1100</SupplyPlanningAreaID>\r\n            <MaterialID>P100101</MaterialID>\r\n            <!-- <ProductRequirementSpecificationID>?</ProductRequirementSpecificationID> -->\r\n            <MaterialAvailabilityDateTime timeZoneCode=\"CET\">2019-02-05T12:00:00.0000000Z</MaterialAvailabilityDateTime>\r\n            <Quantity unitCode=\"EA\">1</Quantity>\r\n            <QuantityTypeCode>EA</QuantityTypeCode>\r\n         </CreateProductionPlanningOrder>\r\n      </glob:CreateProductionProposal>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
										},
										"url": {
											"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/manageproductionproposalin",
											"protocol": "https",
											"host": [
												"{{TenantHostname}}"
											],
											"path": [
												"sap",
												"bc",
												"srt",
												"scs",
												"sap",
												"manageproductionproposalin"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "html",
									"header": [
										{
											"key": "content-type",
											"value": "text/html; charset=utf-8"
										},
										{
											"key": "content-encoding",
											"value": "gzip"
										},
										{
											"key": "content-length",
											"value": "505"
										},
										{
											"key": "sap-system",
											"value": "KHL"
										},
										{
											"key": "www-authenticate",
											"value": "Basic realm=\"SAP NetWeaver Application Server [KHL/171][alias]\""
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=31536000; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "<html>\n    <head>\n        <title>Logon Error Message</title>\n        <META http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\">\n        <style type=\"text/css\">body { font-family:tahoma,helvetica,sans-serif;color:#333333;background-color:#FFFFFF; }td { font-family:tahoma,helvetica,sans-serif;font-size:70%;color:#333333; }h1 { font-family:tahoma,helvetica,sans-serif;font-size:160%;font-weight:bold;margin-top:15px;margin-bottom:3px;color:#003366; }h2 { font-family:verdana,helvetica,sans-serif;font-size:120%;font-style:italic;font-weight:bold;margin-top:6px;margin-bottom:6px;color:#999900; }p { font-family:tahoma,helvetica,sans-serif;color:#333333;margin-top:4px;margin-bottom:4px; }ul { font-family:tahoma,helvetica,sans-serif;color:#333333;list-style-type:square;margin-top:8px;margin-bottom:8px; }li { font-family:tahoma,helvetica,sans-serif;color:#33333;margin-top:4px; }.emphasize { color:#333333;background-color:#C8E3FF;padding:5px;}.note { color:#CC6600; }a { font-family:tahoma,helvetica,sans-serif;text-decoration:underline;color:#336699; }a:visited { color:#001166; }a:hover { text-decoration:none; }</style>\n    </head>\n    <body>\n        <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\">\n            <tr>\n                <td>\n                    <h1>Logon failed</h1>\n                </td>\n            </tr>\n        </table>\n    </body>\n</html>"
								}
							]
						},
						{
							"name": "Get base price list product category",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "13783b8f-a601-492f-8b16-481c2a8417ff",
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"Get Gross Base price list product category - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"// Get workplace address object ID and parten object ID",
											"var jsonResponse = pm.response.json();",
											"pm.environment.set(\"ObjectID\", jsonResponse.d.results[0].ObjectID);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmupricelist/PriceListCollection?$filter=UUID eq guid'{{PriceListUUID}}'&$expand=PriceListKeys,Items,Items/ItemKeys,Items/Scales&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmupricelist",
										"PriceListCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "UUID eq guid'{{PriceListUUID}}'"
										},
										{
											"key": "$expand",
											"value": "PriceListKeys,Items,Items/ItemKeys,Items/Scales"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create/Update distribution chain price list (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "691edeb4-7bfd-4e5f-8c75-c140cf9f04a2",
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"",
											"pm.environment.set(\"PriceListUUID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.UUID);",
											"",
											"",
											"// Validations",
											"pm.test(\"Gross Distribution chain price list \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.ID + \" created / updated \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3e65b165-9326-4ac2-9a90-37c0ed7a5612",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:SalesPriceListBundleMaintainRequest_sync>\r\n \t\t<SalesPriceList ActionCode=\"04\">\r\n\t\t  <TypeCode>{{GrossPriceListTypeCode}}</TypeCode>  <!-- 7PL0 for Price List -->\r\n\t\t  <ID>DistributionChainPriceListGrossID</ID>\r\n\t\t  <Description languageCode=\"EN\">{{PriceListDescription}}</Description>\r\n\t\t  \r\n\t\t  <!-- Header Keys: SalesOrgID,DistributionChannelCode -->\r\n\t\t  \r\n\t\t  <SalesOrgID>{{SalesOrgID}}</SalesOrgID>\r\n\t\t  <DistributionChannelCode>{{DistributionChannel}}</DistributionChannelCode>\r\n\t\t  \r\n\t\t  <StartDate>2000-02-02</StartDate>\r\n\t\t  <EndDate>2000-02-02</EndDate>\r\n\t\t  <CurrencyCode>USD</CurrencyCode>\t\t  \r\n\t\t  <PriceSpecification>\r\n\t\t\t   <TypeCode>{{GrossPriceListItemTypeCode}}</TypeCode>  <!-- 7PR1 for Price -->\r\n\t\t\t   <Amount currencyCode=\"EUR\">200.00</Amount>\r\n\t\t\t   <BaseQuantity unitCode=\"EA\">1</BaseQuantity>\r\n\t\t\t   <BaseQuantityTypeCode>EA</BaseQuantityTypeCode>\r\n\t\t\t   <ProductID>P100101</ProductID>\r\n\t\t\t   <ProductTypeCode>1</ProductTypeCode>   <!-- 1 means Material , 2 Means Service Product -->\r\n\t\t  </PriceSpecification>\r\n\t\t </SalesPriceList>\r\n\r\n      </glob:SalesPriceListBundleMaintainRequest_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managesalespricelistin2",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managesalespricelistin2"
									]
								}
							},
							"response": [
								{
									"name": "Create production proposal (Soap 1.1)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:CreateProductionProposal>\r\n         <CreateProductionPlanningOrder>\r\n            <SequenceNumber>1</SequenceNumber>\r\n            <SupplyPlanningAreaID>P1100</SupplyPlanningAreaID>\r\n            <MaterialID>P100101</MaterialID>\r\n            <!-- <ProductRequirementSpecificationID>?</ProductRequirementSpecificationID> -->\r\n            <MaterialAvailabilityDateTime timeZoneCode=\"CET\">2019-02-05T12:00:00.0000000Z</MaterialAvailabilityDateTime>\r\n            <Quantity unitCode=\"EA\">1</Quantity>\r\n            <QuantityTypeCode>EA</QuantityTypeCode>\r\n         </CreateProductionPlanningOrder>\r\n      </glob:CreateProductionProposal>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
										},
										"url": {
											"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/manageproductionproposalin",
											"protocol": "https",
											"host": [
												"{{TenantHostname}}"
											],
											"path": [
												"sap",
												"bc",
												"srt",
												"scs",
												"sap",
												"manageproductionproposalin"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "html",
									"header": [
										{
											"key": "content-type",
											"value": "text/html; charset=utf-8"
										},
										{
											"key": "content-encoding",
											"value": "gzip"
										},
										{
											"key": "content-length",
											"value": "505"
										},
										{
											"key": "sap-system",
											"value": "KHL"
										},
										{
											"key": "www-authenticate",
											"value": "Basic realm=\"SAP NetWeaver Application Server [KHL/171][alias]\""
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=31536000; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "<html>\n    <head>\n        <title>Logon Error Message</title>\n        <META http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\">\n        <style type=\"text/css\">body { font-family:tahoma,helvetica,sans-serif;color:#333333;background-color:#FFFFFF; }td { font-family:tahoma,helvetica,sans-serif;font-size:70%;color:#333333; }h1 { font-family:tahoma,helvetica,sans-serif;font-size:160%;font-weight:bold;margin-top:15px;margin-bottom:3px;color:#003366; }h2 { font-family:verdana,helvetica,sans-serif;font-size:120%;font-style:italic;font-weight:bold;margin-top:6px;margin-bottom:6px;color:#999900; }p { font-family:tahoma,helvetica,sans-serif;color:#333333;margin-top:4px;margin-bottom:4px; }ul { font-family:tahoma,helvetica,sans-serif;color:#333333;list-style-type:square;margin-top:8px;margin-bottom:8px; }li { font-family:tahoma,helvetica,sans-serif;color:#33333;margin-top:4px; }.emphasize { color:#333333;background-color:#C8E3FF;padding:5px;}.note { color:#CC6600; }a { font-family:tahoma,helvetica,sans-serif;text-decoration:underline;color:#336699; }a:visited { color:#001166; }a:hover { text-decoration:none; }</style>\n    </head>\n    <body>\n        <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\">\n            <tr>\n                <td>\n                    <h1>Logon failed</h1>\n                </td>\n            </tr>\n        </table>\n    </body>\n</html>"
								}
							]
						},
						{
							"name": "Get distribution chain price list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "13783b8f-a601-492f-8b16-481c2a8417ff",
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"Get Gross Distribution chain price list  - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"// Get workplace address object ID and parten object ID",
											"var jsonResponse = pm.response.json();",
											"pm.environment.set(\"ObjectID\", jsonResponse.d.results[0].ObjectID);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmupricelist/PriceListCollection?$filter=UUID eq guid'{{PriceListUUID}}'&$expand=PriceListKeys,Items,Items/ItemKeys,Items/Scales&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmupricelist",
										"PriceListCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "UUID eq guid'{{PriceListUUID}}'"
										},
										{
											"key": "$expand",
											"value": "PriceListKeys,Items,Items/ItemKeys,Items/Scales"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create/Update distribution chain price list by product category (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "691edeb4-7bfd-4e5f-8c75-c140cf9f04a2",
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"pm.environment.set(\"PriceListUUID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.UUID);",
											"",
											"",
											"// Validations",
											"pm.test(\"Gross Distribution chain price list by product category \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.ID + \" created / updated \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3e65b165-9326-4ac2-9a90-37c0ed7a5612",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:SalesPriceListBundleMaintainRequest_sync>\r\n \t\t<SalesPriceList ActionCode=\"04\">\r\n\t\t  <TypeCode>{{GrossPriceListTypeCode}}</TypeCode>  <!-- 7PL0 for Price List -->\r\n\t\t  <ID>DistributionChainProductCategoryPriceListGrossID</ID>\r\n\t\t  <Description languageCode=\"EN\">{{PriceListDescription}}</Description>\r\n\t\t  \r\n\t\t  <!-- Header Keys: SalesOrgID,DistributionChannelCode,ProductCategoryID -->\r\n\t\t  \r\n\t\t  <SalesOrgID>{{SalesOrgID}}</SalesOrgID>\r\n\t\t  <DistributionChannelCode>{{DistributionChannel}}</DistributionChannelCode>\r\n\t\t  <ProductCategoryID>{{ProductCategoryID}}</ProductCategoryID>\r\n\t\t  \r\n\t\t  <StartDate>2000-01-01</StartDate>\r\n\t\t  <EndDate>2000-01-01</EndDate>\r\n\t\t  <CurrencyCode>USD</CurrencyCode>\t\t  \r\n\t\t  <PriceSpecification>\r\n\t\t\t   <TypeCode>{{GrossPriceListItemTypeCode}}</TypeCode>  <!-- 7PR1 for Price -->\r\n\t\t\t   <Amount currencyCode=\"EUR\">200.00</Amount>\r\n\t\t\t   <BaseQuantity unitCode=\"EA\">1</BaseQuantity>\r\n\t\t\t   <BaseQuantityTypeCode>EA</BaseQuantityTypeCode>\r\n\t\t\t   <ProductID>P100101</ProductID>\r\n\t\t\t   <ProductTypeCode>1</ProductTypeCode>   <!-- 1 means Material , 2 Means Service Product -->\r\n\t\t  </PriceSpecification>\r\n\t\t </SalesPriceList>\r\n\r\n      </glob:SalesPriceListBundleMaintainRequest_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managesalespricelistin2",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managesalespricelistin2"
									]
								}
							},
							"response": [
								{
									"name": "Create production proposal (Soap 1.1)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:CreateProductionProposal>\r\n         <CreateProductionPlanningOrder>\r\n            <SequenceNumber>1</SequenceNumber>\r\n            <SupplyPlanningAreaID>P1100</SupplyPlanningAreaID>\r\n            <MaterialID>P100101</MaterialID>\r\n            <!-- <ProductRequirementSpecificationID>?</ProductRequirementSpecificationID> -->\r\n            <MaterialAvailabilityDateTime timeZoneCode=\"CET\">2019-02-05T12:00:00.0000000Z</MaterialAvailabilityDateTime>\r\n            <Quantity unitCode=\"EA\">1</Quantity>\r\n            <QuantityTypeCode>EA</QuantityTypeCode>\r\n         </CreateProductionPlanningOrder>\r\n      </glob:CreateProductionProposal>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
										},
										"url": {
											"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/manageproductionproposalin",
											"protocol": "https",
											"host": [
												"{{TenantHostname}}"
											],
											"path": [
												"sap",
												"bc",
												"srt",
												"scs",
												"sap",
												"manageproductionproposalin"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "html",
									"header": [
										{
											"key": "content-type",
											"value": "text/html; charset=utf-8"
										},
										{
											"key": "content-encoding",
											"value": "gzip"
										},
										{
											"key": "content-length",
											"value": "505"
										},
										{
											"key": "sap-system",
											"value": "KHL"
										},
										{
											"key": "www-authenticate",
											"value": "Basic realm=\"SAP NetWeaver Application Server [KHL/171][alias]\""
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=31536000; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "<html>\n    <head>\n        <title>Logon Error Message</title>\n        <META http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\">\n        <style type=\"text/css\">body { font-family:tahoma,helvetica,sans-serif;color:#333333;background-color:#FFFFFF; }td { font-family:tahoma,helvetica,sans-serif;font-size:70%;color:#333333; }h1 { font-family:tahoma,helvetica,sans-serif;font-size:160%;font-weight:bold;margin-top:15px;margin-bottom:3px;color:#003366; }h2 { font-family:verdana,helvetica,sans-serif;font-size:120%;font-style:italic;font-weight:bold;margin-top:6px;margin-bottom:6px;color:#999900; }p { font-family:tahoma,helvetica,sans-serif;color:#333333;margin-top:4px;margin-bottom:4px; }ul { font-family:tahoma,helvetica,sans-serif;color:#333333;list-style-type:square;margin-top:8px;margin-bottom:8px; }li { font-family:tahoma,helvetica,sans-serif;color:#33333;margin-top:4px; }.emphasize { color:#333333;background-color:#C8E3FF;padding:5px;}.note { color:#CC6600; }a { font-family:tahoma,helvetica,sans-serif;text-decoration:underline;color:#336699; }a:visited { color:#001166; }a:hover { text-decoration:none; }</style>\n    </head>\n    <body>\n        <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\">\n            <tr>\n                <td>\n                    <h1>Logon failed</h1>\n                </td>\n            </tr>\n        </table>\n    </body>\n</html>"
								}
							]
						},
						{
							"name": "Get distribution chain price list by product category",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "13783b8f-a601-492f-8b16-481c2a8417ff",
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"Get Gross Distribution chain price list by product category  - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"// Get workplace address object ID and parten object ID",
											"var jsonResponse = pm.response.json();",
											"pm.environment.set(\"ObjectID\", jsonResponse.d.results[0].ObjectID);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmupricelist/PriceListCollection?$filter=UUID eq guid'{{PriceListUUID}}'&$expand=PriceListKeys,Items,Items/ItemKeys,Items/Scales&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmupricelist",
										"PriceListCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "UUID eq guid'{{PriceListUUID}}'"
										},
										{
											"key": "$expand",
											"value": "PriceListKeys,Items,Items/ItemKeys,Items/Scales"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create/Update customer group price list (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "691edeb4-7bfd-4e5f-8c75-c140cf9f04a2",
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"pm.environment.set(\"PriceListUUID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.UUID);",
											"",
											"",
											"// Validations",
											"pm.test(\"Gross customer group price list \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.ID + \" created / updated \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3e65b165-9326-4ac2-9a90-37c0ed7a5612",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:SalesPriceListBundleMaintainRequest_sync>\r\n \t\t<SalesPriceList ActionCode=\"04\">\r\n\t\t  <TypeCode>{{GrossPriceListTypeCode}}</TypeCode>  <!-- 7PL0 for Price List -->\r\n\t\t  <ID>CustomerGroupSpecificPriceListGrossID</ID>\r\n\t\t  <Description languageCode=\"EN\">{{PriceListDescription}}</Description>\r\n\t\t  \r\n\t\t  <!-- Header Keys: SalesOrgID,DistributionChannelCode,ProductCategoryID -->\r\n\t\t  \r\n\t\t  <SalesOrgID>{{SalesOrgID}}</SalesOrgID>\r\n\t\t  <DistributionChannelCode>{{DistributionChannel}}</DistributionChannelCode>\r\n\t\t  <CustomerGroupCode>{{CustomerGroup}}</CustomerGroupCode>\r\n\t\t  \r\n\t\t  <StartDate>2000-01-01</StartDate>\r\n\t\t  <EndDate>2000-01-01</EndDate>\r\n\t\t  <CurrencyCode>USD</CurrencyCode>\t\t  \r\n\t\t  <PriceSpecification>\r\n\t\t\t   <TypeCode>{{GrossPriceListItemTypeCode}}</TypeCode>  <!-- 7PR1 for Price -->\r\n\t\t\t   <Amount currencyCode=\"EUR\">200.00</Amount>\r\n\t\t\t   <BaseQuantity unitCode=\"EA\">1</BaseQuantity>\r\n\t\t\t   <BaseQuantityTypeCode>EA</BaseQuantityTypeCode>\r\n\t\t\t   <ProductID>P100101</ProductID>\r\n\t\t\t   <ProductTypeCode>1</ProductTypeCode>   <!-- 1 means Material , 2 Means Service Product -->\r\n\t\t  </PriceSpecification>\r\n\t\t </SalesPriceList>\r\n\r\n      </glob:SalesPriceListBundleMaintainRequest_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managesalespricelistin2",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managesalespricelistin2"
									]
								}
							},
							"response": [
								{
									"name": "Create production proposal (Soap 1.1)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:CreateProductionProposal>\r\n         <CreateProductionPlanningOrder>\r\n            <SequenceNumber>1</SequenceNumber>\r\n            <SupplyPlanningAreaID>P1100</SupplyPlanningAreaID>\r\n            <MaterialID>P100101</MaterialID>\r\n            <!-- <ProductRequirementSpecificationID>?</ProductRequirementSpecificationID> -->\r\n            <MaterialAvailabilityDateTime timeZoneCode=\"CET\">2019-02-05T12:00:00.0000000Z</MaterialAvailabilityDateTime>\r\n            <Quantity unitCode=\"EA\">1</Quantity>\r\n            <QuantityTypeCode>EA</QuantityTypeCode>\r\n         </CreateProductionPlanningOrder>\r\n      </glob:CreateProductionProposal>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
										},
										"url": {
											"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/manageproductionproposalin",
											"protocol": "https",
											"host": [
												"{{TenantHostname}}"
											],
											"path": [
												"sap",
												"bc",
												"srt",
												"scs",
												"sap",
												"manageproductionproposalin"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "html",
									"header": [
										{
											"key": "content-type",
											"value": "text/html; charset=utf-8"
										},
										{
											"key": "content-encoding",
											"value": "gzip"
										},
										{
											"key": "content-length",
											"value": "505"
										},
										{
											"key": "sap-system",
											"value": "KHL"
										},
										{
											"key": "www-authenticate",
											"value": "Basic realm=\"SAP NetWeaver Application Server [KHL/171][alias]\""
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=31536000; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "<html>\n    <head>\n        <title>Logon Error Message</title>\n        <META http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\">\n        <style type=\"text/css\">body { font-family:tahoma,helvetica,sans-serif;color:#333333;background-color:#FFFFFF; }td { font-family:tahoma,helvetica,sans-serif;font-size:70%;color:#333333; }h1 { font-family:tahoma,helvetica,sans-serif;font-size:160%;font-weight:bold;margin-top:15px;margin-bottom:3px;color:#003366; }h2 { font-family:verdana,helvetica,sans-serif;font-size:120%;font-style:italic;font-weight:bold;margin-top:6px;margin-bottom:6px;color:#999900; }p { font-family:tahoma,helvetica,sans-serif;color:#333333;margin-top:4px;margin-bottom:4px; }ul { font-family:tahoma,helvetica,sans-serif;color:#333333;list-style-type:square;margin-top:8px;margin-bottom:8px; }li { font-family:tahoma,helvetica,sans-serif;color:#33333;margin-top:4px; }.emphasize { color:#333333;background-color:#C8E3FF;padding:5px;}.note { color:#CC6600; }a { font-family:tahoma,helvetica,sans-serif;text-decoration:underline;color:#336699; }a:visited { color:#001166; }a:hover { text-decoration:none; }</style>\n    </head>\n    <body>\n        <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\">\n            <tr>\n                <td>\n                    <h1>Logon failed</h1>\n                </td>\n            </tr>\n        </table>\n    </body>\n</html>"
								}
							]
						},
						{
							"name": "Get customer group price list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "13783b8f-a601-492f-8b16-481c2a8417ff",
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"Get Gross customer group price list - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"// Get workplace address object ID and parten object ID",
											"var jsonResponse = pm.response.json();",
											"pm.environment.set(\"ObjectID\", jsonResponse.d.results[0].ObjectID);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmupricelist/PriceListCollection?$filter=UUID eq guid'{{PriceListUUID}}'&$expand=PriceListKeys,Items,Items/ItemKeys,Items/Scales&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmupricelist",
										"PriceListCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "UUID eq guid'{{PriceListUUID}}'"
										},
										{
											"key": "$expand",
											"value": "PriceListKeys,Items,Items/ItemKeys,Items/Scales"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create/Update customer specific price list (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "691edeb4-7bfd-4e5f-8c75-c140cf9f04a2",
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"pm.environment.set(\"PriceListUUID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.UUID);",
											"",
											"",
											"// Validations",
											"pm.test(\"Gross Customer specific price list  \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.ID + \" created / updated \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3e65b165-9326-4ac2-9a90-37c0ed7a5612",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:SalesPriceListBundleMaintainRequest_sync>\r\n \t\t<SalesPriceList ActionCode=\"04\">\r\n\t\t  <TypeCode>{{GrossPriceListTypeCode}}</TypeCode>  <!-- 7PL0 for Price List -->\r\n\t\t  <ID>CustomerSpecificPriceListGrossID</ID>\r\n\t\t  <Description languageCode=\"EN\">{{PriceListDescription}}</Description>\r\n\t\t  \r\n\t\t  <!-- Header Keys: SalesOrgID,DistributionChannelCode,ProductCategoryID -->\r\n\t\t  \r\n\t\t  <AccountID>{{AccountID}}</AccountID>\r\n\t\t \r\n\t\t  <StartDate>2000-01-01</StartDate>\r\n\t\t  <EndDate>2000-01-01</EndDate>\r\n\t\t  <CurrencyCode>USD</CurrencyCode>\t\t  \r\n\t\t  <PriceSpecification>\r\n\t\t\t   <TypeCode>{{GrossPriceListItemTypeCode}}</TypeCode>  <!-- 7PR1 for Price -->\r\n\t\t\t   <Amount currencyCode=\"EUR\">200.00</Amount>\r\n\t\t\t   <BaseQuantity unitCode=\"EA\">1</BaseQuantity>\r\n\t\t\t   <BaseQuantityTypeCode>EA</BaseQuantityTypeCode>\r\n\t\t\t   <ProductID>P100101</ProductID>\r\n\t\t\t   <ProductTypeCode>1</ProductTypeCode>   <!-- 1 means Material , 2 Means Service Product -->\r\n\t\t  </PriceSpecification>\r\n\t\t </SalesPriceList>\r\n\r\n      </glob:SalesPriceListBundleMaintainRequest_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managesalespricelistin2",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managesalespricelistin2"
									]
								}
							},
							"response": [
								{
									"name": "Create production proposal (Soap 1.1)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:CreateProductionProposal>\r\n         <CreateProductionPlanningOrder>\r\n            <SequenceNumber>1</SequenceNumber>\r\n            <SupplyPlanningAreaID>P1100</SupplyPlanningAreaID>\r\n            <MaterialID>P100101</MaterialID>\r\n            <!-- <ProductRequirementSpecificationID>?</ProductRequirementSpecificationID> -->\r\n            <MaterialAvailabilityDateTime timeZoneCode=\"CET\">2019-02-05T12:00:00.0000000Z</MaterialAvailabilityDateTime>\r\n            <Quantity unitCode=\"EA\">1</Quantity>\r\n            <QuantityTypeCode>EA</QuantityTypeCode>\r\n         </CreateProductionPlanningOrder>\r\n      </glob:CreateProductionProposal>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
										},
										"url": {
											"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/manageproductionproposalin",
											"protocol": "https",
											"host": [
												"{{TenantHostname}}"
											],
											"path": [
												"sap",
												"bc",
												"srt",
												"scs",
												"sap",
												"manageproductionproposalin"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "html",
									"header": [
										{
											"key": "content-type",
											"value": "text/html; charset=utf-8"
										},
										{
											"key": "content-encoding",
											"value": "gzip"
										},
										{
											"key": "content-length",
											"value": "505"
										},
										{
											"key": "sap-system",
											"value": "KHL"
										},
										{
											"key": "www-authenticate",
											"value": "Basic realm=\"SAP NetWeaver Application Server [KHL/171][alias]\""
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=31536000; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "<html>\n    <head>\n        <title>Logon Error Message</title>\n        <META http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\">\n        <style type=\"text/css\">body { font-family:tahoma,helvetica,sans-serif;color:#333333;background-color:#FFFFFF; }td { font-family:tahoma,helvetica,sans-serif;font-size:70%;color:#333333; }h1 { font-family:tahoma,helvetica,sans-serif;font-size:160%;font-weight:bold;margin-top:15px;margin-bottom:3px;color:#003366; }h2 { font-family:verdana,helvetica,sans-serif;font-size:120%;font-style:italic;font-weight:bold;margin-top:6px;margin-bottom:6px;color:#999900; }p { font-family:tahoma,helvetica,sans-serif;color:#333333;margin-top:4px;margin-bottom:4px; }ul { font-family:tahoma,helvetica,sans-serif;color:#333333;list-style-type:square;margin-top:8px;margin-bottom:8px; }li { font-family:tahoma,helvetica,sans-serif;color:#33333;margin-top:4px; }.emphasize { color:#333333;background-color:#C8E3FF;padding:5px;}.note { color:#CC6600; }a { font-family:tahoma,helvetica,sans-serif;text-decoration:underline;color:#336699; }a:visited { color:#001166; }a:hover { text-decoration:none; }</style>\n    </head>\n    <body>\n        <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\">\n            <tr>\n                <td>\n                    <h1>Logon failed</h1>\n                </td>\n            </tr>\n        </table>\n    </body>\n</html>"
								}
							]
						},
						{
							"name": "Get customer specific price list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "13783b8f-a601-492f-8b16-481c2a8417ff",
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"Get Gross Customer specific price list - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"// Get workplace address object ID and parten object ID",
											"var jsonResponse = pm.response.json();",
											"pm.environment.set(\"ObjectID\", jsonResponse.d.results[0].ObjectID);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmupricelist/PriceListCollection?$filter=UUID eq guid'{{PriceListUUID}}'&$expand=PriceListKeys,Items,Items/ItemKeys,Items/Scales&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmupricelist",
										"PriceListCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "UUID eq guid'{{PriceListUUID}}'"
										},
										{
											"key": "$expand",
											"value": "PriceListKeys,Items,Items/ItemKeys,Items/Scales"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Discount Lists (Gross)",
					"item": [
						{
							"name": "Create/Update overall customer discount (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "691edeb4-7bfd-4e5f-8c75-c140cf9f04a2",
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"pm.environment.set(\"DiscountListUUID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.UUID);",
											"",
											"",
											"// Validations",
											"pm.test(\"Gross Overall customer discount \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.ID + \" created / updated \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3e65b165-9326-4ac2-9a90-37c0ed7a5612",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:SalesPriceListBundleMaintainRequest_sync>\r\n \t\t<SalesPriceList ActionCode=\"04\">\r\n\t\t  <TypeCode>8PL1</TypeCode>\r\n\t\t  <ID>OverallCustomerDiscountGrossID1</ID>\r\n\t\t  <Description languageCode=\"EN\">{{DiscountListDescription}}</Description>\r\n\t\t  <StartDate>2000-01-01</StartDate>\r\n\t\t  <EndDate>2000-01-01</EndDate>\r\n\t\t    \r\n\t\t  <PriceSpecification>\r\n\t\t\t   <TypeCode>{{DiscountListItemTypeCode}}</TypeCode>\r\n\t\t\t   <Percent>1.00</Percent>\r\n\t\t\t   \r\n\t\t\t   <!-- Item Keys: AccountID -->\r\n\t\t\t   <AccountID>{{AccountID}}</AccountID>\r\n\t\t  </PriceSpecification>\r\n\t\t </SalesPriceList>\r\n\r\n      </glob:SalesPriceListBundleMaintainRequest_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managesalespricelistin2",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managesalespricelistin2"
									]
								}
							},
							"response": [
								{
									"name": "Create production proposal (Soap 1.1)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:CreateProductionProposal>\r\n         <CreateProductionPlanningOrder>\r\n            <SequenceNumber>1</SequenceNumber>\r\n            <SupplyPlanningAreaID>P1100</SupplyPlanningAreaID>\r\n            <MaterialID>P100101</MaterialID>\r\n            <!-- <ProductRequirementSpecificationID>?</ProductRequirementSpecificationID> -->\r\n            <MaterialAvailabilityDateTime timeZoneCode=\"CET\">2019-02-05T12:00:00.0000000Z</MaterialAvailabilityDateTime>\r\n            <Quantity unitCode=\"EA\">1</Quantity>\r\n            <QuantityTypeCode>EA</QuantityTypeCode>\r\n         </CreateProductionPlanningOrder>\r\n      </glob:CreateProductionProposal>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
										},
										"url": {
											"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/manageproductionproposalin",
											"protocol": "https",
											"host": [
												"{{TenantHostname}}"
											],
											"path": [
												"sap",
												"bc",
												"srt",
												"scs",
												"sap",
												"manageproductionproposalin"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "html",
									"header": [
										{
											"key": "content-type",
											"value": "text/html; charset=utf-8"
										},
										{
											"key": "content-encoding",
											"value": "gzip"
										},
										{
											"key": "content-length",
											"value": "505"
										},
										{
											"key": "sap-system",
											"value": "KHL"
										},
										{
											"key": "www-authenticate",
											"value": "Basic realm=\"SAP NetWeaver Application Server [KHL/171][alias]\""
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=31536000; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "<html>\n    <head>\n        <title>Logon Error Message</title>\n        <META http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\">\n        <style type=\"text/css\">body { font-family:tahoma,helvetica,sans-serif;color:#333333;background-color:#FFFFFF; }td { font-family:tahoma,helvetica,sans-serif;font-size:70%;color:#333333; }h1 { font-family:tahoma,helvetica,sans-serif;font-size:160%;font-weight:bold;margin-top:15px;margin-bottom:3px;color:#003366; }h2 { font-family:verdana,helvetica,sans-serif;font-size:120%;font-style:italic;font-weight:bold;margin-top:6px;margin-bottom:6px;color:#999900; }p { font-family:tahoma,helvetica,sans-serif;color:#333333;margin-top:4px;margin-bottom:4px; }ul { font-family:tahoma,helvetica,sans-serif;color:#333333;list-style-type:square;margin-top:8px;margin-bottom:8px; }li { font-family:tahoma,helvetica,sans-serif;color:#33333;margin-top:4px; }.emphasize { color:#333333;background-color:#C8E3FF;padding:5px;}.note { color:#CC6600; }a { font-family:tahoma,helvetica,sans-serif;text-decoration:underline;color:#336699; }a:visited { color:#001166; }a:hover { text-decoration:none; }</style>\n    </head>\n    <body>\n        <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\">\n            <tr>\n                <td>\n                    <h1>Logon failed</h1>\n                </td>\n            </tr>\n        </table>\n    </body>\n</html>"
								}
							]
						},
						{
							"name": "Get overall customer discount",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "13783b8f-a601-492f-8b16-481c2a8417ff",
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"Get Gross Overall customer discount  - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"// Get workplace address object ID and parten object ID",
											"var jsonResponse = pm.response.json();",
											"pm.environment.set(\"ObjectID\", jsonResponse.d.results[0].ObjectID);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmupricelist/PriceListCollection?$filter=UUID eq guid'{{DiscountListUUID}}'&$expand=PriceListKeys,Items,Items/ItemKeys,Items/Scales&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmupricelist",
										"PriceListCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "UUID eq guid'{{DiscountListUUID}}'"
										},
										{
											"key": "$expand",
											"value": "PriceListKeys,Items,Items/ItemKeys,Items/Scales"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create/Update overall customer group discount (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "691edeb4-7bfd-4e5f-8c75-c140cf9f04a2",
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"",
											"",
											"",
											"// Validations",
											"pm.test(\"Gross Overall customer group discount \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.ID + \" created / updated \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3e65b165-9326-4ac2-9a90-37c0ed7a5612",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:SalesPriceListBundleMaintainRequest_sync>\r\n \t\t<SalesPriceList ActionCode=\"04\">\r\n\t\t  <TypeCode>8PL1</TypeCode>\r\n\t\t  <ID>OverallCustomerGroupDiscountGrossID1</ID>\r\n\t\t  <Description languageCode=\"EN\">{{DiscountListDescription}}</Description>\r\n\t\t  <StartDate>2001-01-01</StartDate>\r\n\t\t  <EndDate>2001-01-01</EndDate>\r\n\t\t\r\n\t\t  <PriceSpecification>\r\n\t\t\t   <TypeCode>{{DiscountListItemTypeCode}}</TypeCode>\r\n\t\t\t   <Percent>1.00</Percent>\r\n\t\t\t   \r\n\t\t\t    <!-- Item Keys: CustomerGroupCode -->\r\n\t\t\t   <CustomerGroupCode>{{CustomerGroup}}</CustomerGroupCode>\r\n\t\t\t   \r\n\t\t  </PriceSpecification>\r\n\t\t </SalesPriceList>\r\n\r\n      </glob:SalesPriceListBundleMaintainRequest_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managesalespricelistin2",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managesalespricelistin2"
									]
								}
							},
							"response": [
								{
									"name": "Create production proposal (Soap 1.1)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:CreateProductionProposal>\r\n         <CreateProductionPlanningOrder>\r\n            <SequenceNumber>1</SequenceNumber>\r\n            <SupplyPlanningAreaID>P1100</SupplyPlanningAreaID>\r\n            <MaterialID>P100101</MaterialID>\r\n            <!-- <ProductRequirementSpecificationID>?</ProductRequirementSpecificationID> -->\r\n            <MaterialAvailabilityDateTime timeZoneCode=\"CET\">2019-02-05T12:00:00.0000000Z</MaterialAvailabilityDateTime>\r\n            <Quantity unitCode=\"EA\">1</Quantity>\r\n            <QuantityTypeCode>EA</QuantityTypeCode>\r\n         </CreateProductionPlanningOrder>\r\n      </glob:CreateProductionProposal>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
										},
										"url": {
											"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/manageproductionproposalin",
											"protocol": "https",
											"host": [
												"{{TenantHostname}}"
											],
											"path": [
												"sap",
												"bc",
												"srt",
												"scs",
												"sap",
												"manageproductionproposalin"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "html",
									"header": [
										{
											"key": "content-type",
											"value": "text/html; charset=utf-8"
										},
										{
											"key": "content-encoding",
											"value": "gzip"
										},
										{
											"key": "content-length",
											"value": "505"
										},
										{
											"key": "sap-system",
											"value": "KHL"
										},
										{
											"key": "www-authenticate",
											"value": "Basic realm=\"SAP NetWeaver Application Server [KHL/171][alias]\""
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=31536000; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "<html>\n    <head>\n        <title>Logon Error Message</title>\n        <META http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\">\n        <style type=\"text/css\">body { font-family:tahoma,helvetica,sans-serif;color:#333333;background-color:#FFFFFF; }td { font-family:tahoma,helvetica,sans-serif;font-size:70%;color:#333333; }h1 { font-family:tahoma,helvetica,sans-serif;font-size:160%;font-weight:bold;margin-top:15px;margin-bottom:3px;color:#003366; }h2 { font-family:verdana,helvetica,sans-serif;font-size:120%;font-style:italic;font-weight:bold;margin-top:6px;margin-bottom:6px;color:#999900; }p { font-family:tahoma,helvetica,sans-serif;color:#333333;margin-top:4px;margin-bottom:4px; }ul { font-family:tahoma,helvetica,sans-serif;color:#333333;list-style-type:square;margin-top:8px;margin-bottom:8px; }li { font-family:tahoma,helvetica,sans-serif;color:#33333;margin-top:4px; }.emphasize { color:#333333;background-color:#C8E3FF;padding:5px;}.note { color:#CC6600; }a { font-family:tahoma,helvetica,sans-serif;text-decoration:underline;color:#336699; }a:visited { color:#001166; }a:hover { text-decoration:none; }</style>\n    </head>\n    <body>\n        <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\">\n            <tr>\n                <td>\n                    <h1>Logon failed</h1>\n                </td>\n            </tr>\n        </table>\n    </body>\n</html>"
								}
							]
						},
						{
							"name": "Get overall customer group discount",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "13783b8f-a601-492f-8b16-481c2a8417ff",
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"Get Gross Overall customer group discount   - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"// Get workplace address object ID and parten object ID",
											"var jsonResponse = pm.response.json();",
											"pm.environment.set(\"ObjectID\", jsonResponse.d.results[0].ObjectID);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmupricelist/PriceListCollection?$filter=UUID eq guid'{{DiscountListUUID}}'&$expand=PriceListKeys,Items,Items/ItemKeys,Items/Scales&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmupricelist",
										"PriceListCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "UUID eq guid'{{DiscountListUUID}}'"
										},
										{
											"key": "$expand",
											"value": "PriceListKeys,Items,Items/ItemKeys,Items/Scales"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create/Update customer hierarchy specific discount (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "691edeb4-7bfd-4e5f-8c75-c140cf9f04a2",
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"",
											"",
											"// Validations",
											"pm.test(\"Gross Customer hierarchy specific discount \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.ID + \" created / updated \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3e65b165-9326-4ac2-9a90-37c0ed7a5612",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:SalesPriceListBundleMaintainRequest_sync>\r\n \t\t<SalesPriceList ActionCode=\"04\">\r\n\t\t  <TypeCode>8PL1</TypeCode>\r\n\t\t  <ID>CustomerHierarchySpecificDiscountGrossListID1</ID>\r\n\t\t  <Description languageCode=\"EN\">{{DiscountListDescription}}</Description>\r\n\t\t  \r\n\t\t  <!-- Header Keys: AccountHierarchyID -->\r\n\t\t  \r\n\t\t  <AccountHierarchyID>IF01</AccountHierarchyID>\r\n\t\t  \r\n\t\t  <StartDate>2001-01-01</StartDate>\r\n\t\t  <EndDate>2001-01-01</EndDate>\r\n\t\t\r\n\t\t  <PriceSpecification>\r\n\t\t\t   <TypeCode>8PR6</TypeCode>\r\n\t\t\t   <Percent>1.00</Percent>\r\n\t\t\t   \r\n\t\t\t    <!-- Item Keys: ProductID,ProductTypeCode  -->\r\n\t\t\t   <ProductID>{{ProductID}}</ProductID>\r\n\t\t\t   <ProductTypeCode>1</ProductTypeCode>   <!-- 1 means Material , 2 Means Service Product -->\r\n\t\t\t   \r\n\t\t  </PriceSpecification>\r\n\t\t </SalesPriceList>\r\n\r\n      </glob:SalesPriceListBundleMaintainRequest_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managesalespricelistin2",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managesalespricelistin2"
									]
								}
							},
							"response": [
								{
									"name": "Create production proposal (Soap 1.1)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:CreateProductionProposal>\r\n         <CreateProductionPlanningOrder>\r\n            <SequenceNumber>1</SequenceNumber>\r\n            <SupplyPlanningAreaID>P1100</SupplyPlanningAreaID>\r\n            <MaterialID>P100101</MaterialID>\r\n            <!-- <ProductRequirementSpecificationID>?</ProductRequirementSpecificationID> -->\r\n            <MaterialAvailabilityDateTime timeZoneCode=\"CET\">2019-02-05T12:00:00.0000000Z</MaterialAvailabilityDateTime>\r\n            <Quantity unitCode=\"EA\">1</Quantity>\r\n            <QuantityTypeCode>EA</QuantityTypeCode>\r\n         </CreateProductionPlanningOrder>\r\n      </glob:CreateProductionProposal>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
										},
										"url": {
											"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/manageproductionproposalin",
											"protocol": "https",
											"host": [
												"{{TenantHostname}}"
											],
											"path": [
												"sap",
												"bc",
												"srt",
												"scs",
												"sap",
												"manageproductionproposalin"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "html",
									"header": [
										{
											"key": "content-type",
											"value": "text/html; charset=utf-8"
										},
										{
											"key": "content-encoding",
											"value": "gzip"
										},
										{
											"key": "content-length",
											"value": "505"
										},
										{
											"key": "sap-system",
											"value": "KHL"
										},
										{
											"key": "www-authenticate",
											"value": "Basic realm=\"SAP NetWeaver Application Server [KHL/171][alias]\""
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=31536000; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "<html>\n    <head>\n        <title>Logon Error Message</title>\n        <META http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\">\n        <style type=\"text/css\">body { font-family:tahoma,helvetica,sans-serif;color:#333333;background-color:#FFFFFF; }td { font-family:tahoma,helvetica,sans-serif;font-size:70%;color:#333333; }h1 { font-family:tahoma,helvetica,sans-serif;font-size:160%;font-weight:bold;margin-top:15px;margin-bottom:3px;color:#003366; }h2 { font-family:verdana,helvetica,sans-serif;font-size:120%;font-style:italic;font-weight:bold;margin-top:6px;margin-bottom:6px;color:#999900; }p { font-family:tahoma,helvetica,sans-serif;color:#333333;margin-top:4px;margin-bottom:4px; }ul { font-family:tahoma,helvetica,sans-serif;color:#333333;list-style-type:square;margin-top:8px;margin-bottom:8px; }li { font-family:tahoma,helvetica,sans-serif;color:#33333;margin-top:4px; }.emphasize { color:#333333;background-color:#C8E3FF;padding:5px;}.note { color:#CC6600; }a { font-family:tahoma,helvetica,sans-serif;text-decoration:underline;color:#336699; }a:visited { color:#001166; }a:hover { text-decoration:none; }</style>\n    </head>\n    <body>\n        <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\">\n            <tr>\n                <td>\n                    <h1>Logon failed</h1>\n                </td>\n            </tr>\n        </table>\n    </body>\n</html>"
								}
							]
						},
						{
							"name": "Get customer hierarchy specific discount",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "13783b8f-a601-492f-8b16-481c2a8417ff",
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"Get Gross Customer hierarchy specific discount  - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"// Get workplace address object ID and parten object ID",
											"var jsonResponse = pm.response.json();",
											"pm.environment.set(\"ObjectID\", jsonResponse.d.results[0].ObjectID);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmupricelist/PriceListCollection?$filter=UUID eq guid'{{DiscountListUUID}}'&$expand=PriceListKeys,Items,Items/ItemKeys,Items/Scales&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmupricelist",
										"PriceListCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "UUID eq guid'{{DiscountListUUID}}'"
										},
										{
											"key": "$expand",
											"value": "PriceListKeys,Items,Items/ItemKeys,Items/Scales"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create/Update customer specific discount (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "691edeb4-7bfd-4e5f-8c75-c140cf9f04a2",
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"",
											"",
											"// Validations",
											"pm.test(\"Gross customer specific discount \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.ID + \" created / updated \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3e65b165-9326-4ac2-9a90-37c0ed7a5612",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:SalesPriceListBundleMaintainRequest_sync>\r\n \t\t<SalesPriceList ActionCode=\"04\">\r\n\t\t  <TypeCode>8PL2</TypeCode>\r\n\t\t  <ID>CustomerSpecificDiscountListGrossID</ID>\r\n\t\t  <Description languageCode=\"EN\">{{DiscountListDescription}}</Description>\r\n\t\t  \r\n\t\t  <!-- Header Keys: AccountID -->\r\n\t\t  \r\n\t\t   <AccountID>{{AccountID}}</AccountID>\r\n\t\t  \r\n\t\t  <StartDate>2001-01-01</StartDate>\r\n\t\t  <EndDate>2001-01-01</EndDate>\r\n\t\t\r\n\t\t  <PriceSpecification>\r\n\t\t\t   <TypeCode>8PR6</TypeCode>\r\n\t\t\t   <Percent>1.00</Percent>\r\n\t\t\t   \r\n\t\t\t    <!-- Item Keys: ProductID,ProductTypeCode  -->\r\n\t\t\t   <ProductID>{{ProductID}}</ProductID>\r\n\t\t\t   <ProductTypeCode>1</ProductTypeCode>   <!-- 1 means Material , 2 Means Service Product -->\r\n\t\t\t   \r\n\t\t  </PriceSpecification>\r\n\t\t </SalesPriceList>\r\n\r\n      </glob:SalesPriceListBundleMaintainRequest_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managesalespricelistin2",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managesalespricelistin2"
									]
								}
							},
							"response": [
								{
									"name": "Create production proposal (Soap 1.1)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:CreateProductionProposal>\r\n         <CreateProductionPlanningOrder>\r\n            <SequenceNumber>1</SequenceNumber>\r\n            <SupplyPlanningAreaID>P1100</SupplyPlanningAreaID>\r\n            <MaterialID>P100101</MaterialID>\r\n            <!-- <ProductRequirementSpecificationID>?</ProductRequirementSpecificationID> -->\r\n            <MaterialAvailabilityDateTime timeZoneCode=\"CET\">2019-02-05T12:00:00.0000000Z</MaterialAvailabilityDateTime>\r\n            <Quantity unitCode=\"EA\">1</Quantity>\r\n            <QuantityTypeCode>EA</QuantityTypeCode>\r\n         </CreateProductionPlanningOrder>\r\n      </glob:CreateProductionProposal>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
										},
										"url": {
											"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/manageproductionproposalin",
											"protocol": "https",
											"host": [
												"{{TenantHostname}}"
											],
											"path": [
												"sap",
												"bc",
												"srt",
												"scs",
												"sap",
												"manageproductionproposalin"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "html",
									"header": [
										{
											"key": "content-type",
											"value": "text/html; charset=utf-8"
										},
										{
											"key": "content-encoding",
											"value": "gzip"
										},
										{
											"key": "content-length",
											"value": "505"
										},
										{
											"key": "sap-system",
											"value": "KHL"
										},
										{
											"key": "www-authenticate",
											"value": "Basic realm=\"SAP NetWeaver Application Server [KHL/171][alias]\""
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=31536000; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "<html>\n    <head>\n        <title>Logon Error Message</title>\n        <META http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\">\n        <style type=\"text/css\">body { font-family:tahoma,helvetica,sans-serif;color:#333333;background-color:#FFFFFF; }td { font-family:tahoma,helvetica,sans-serif;font-size:70%;color:#333333; }h1 { font-family:tahoma,helvetica,sans-serif;font-size:160%;font-weight:bold;margin-top:15px;margin-bottom:3px;color:#003366; }h2 { font-family:verdana,helvetica,sans-serif;font-size:120%;font-style:italic;font-weight:bold;margin-top:6px;margin-bottom:6px;color:#999900; }p { font-family:tahoma,helvetica,sans-serif;color:#333333;margin-top:4px;margin-bottom:4px; }ul { font-family:tahoma,helvetica,sans-serif;color:#333333;list-style-type:square;margin-top:8px;margin-bottom:8px; }li { font-family:tahoma,helvetica,sans-serif;color:#33333;margin-top:4px; }.emphasize { color:#333333;background-color:#C8E3FF;padding:5px;}.note { color:#CC6600; }a { font-family:tahoma,helvetica,sans-serif;text-decoration:underline;color:#336699; }a:visited { color:#001166; }a:hover { text-decoration:none; }</style>\n    </head>\n    <body>\n        <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\">\n            <tr>\n                <td>\n                    <h1>Logon failed</h1>\n                </td>\n            </tr>\n        </table>\n    </body>\n</html>"
								}
							]
						},
						{
							"name": "Get customer specific discount",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "13783b8f-a601-492f-8b16-481c2a8417ff",
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"Get Gross customer specific discount - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"// Get workplace address object ID and parten object ID",
											"var jsonResponse = pm.response.json();",
											"pm.environment.set(\"ObjectID\", jsonResponse.d.results[0].ObjectID);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmupricelist/PriceListCollection?$filter=UUID eq guid'{{DiscountListUUID}}'&$expand=PriceListKeys,Items,Items/ItemKeys,Items/Scales&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmupricelist",
										"PriceListCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "UUID eq guid'{{DiscountListUUID}}'"
										},
										{
											"key": "$expand",
											"value": "PriceListKeys,Items,Items/ItemKeys,Items/Scales"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create/Update customer specific discount product category (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "691edeb4-7bfd-4e5f-8c75-c140cf9f04a2",
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"",
											"",
											"// Validations",
											"pm.test(\"Gross Customer specific discount product category \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.ID + \" created / updated \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3e65b165-9326-4ac2-9a90-37c0ed7a5612",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:SalesPriceListBundleMaintainRequest_sync>\r\n \t\t<SalesPriceList ActionCode=\"04\">\r\n\t\t  <TypeCode>8PL4</TypeCode>\r\n\t\t  <ID>CustomerSpecificProductCategoryDiscountListGrossID</ID>\r\n\t\t  <Description languageCode=\"EN\">{{DiscountListDescription}}</Description>\r\n\t\t  \r\n\t\t  <!-- Header Keys: AccountID -->\r\n\t\t  \r\n\t\t   <AccountID>{{AccountID}}</AccountID>\r\n\t\t  \r\n\t\t  <StartDate>2001-01-01</StartDate>\r\n\t\t  <EndDate>2001-01-01</EndDate>\r\n\t\t\r\n\t\t  <PriceSpecification>\r\n\t\t\t   <TypeCode>8PR6</TypeCode>\r\n\t\t\t   <Percent>1.00</Percent>\r\n\t\t\t   \r\n\t\t\t    <!-- Item Keys: ProductID,ProductTypeCode  -->\r\n\t\t\t   <ProductID>{{ProductID}}</ProductID>\r\n\t\t\t   <ProductTypeCode>1</ProductTypeCode>   <!-- 1 means Material , 2 Means Service Product -->\r\n\t\t\t   \r\n\t\t  </PriceSpecification>\r\n\t\t </SalesPriceList>\r\n\r\n      </glob:SalesPriceListBundleMaintainRequest_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managesalespricelistin2",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managesalespricelistin2"
									]
								}
							},
							"response": [
								{
									"name": "Create production proposal (Soap 1.1)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:CreateProductionProposal>\r\n         <CreateProductionPlanningOrder>\r\n            <SequenceNumber>1</SequenceNumber>\r\n            <SupplyPlanningAreaID>P1100</SupplyPlanningAreaID>\r\n            <MaterialID>P100101</MaterialID>\r\n            <!-- <ProductRequirementSpecificationID>?</ProductRequirementSpecificationID> -->\r\n            <MaterialAvailabilityDateTime timeZoneCode=\"CET\">2019-02-05T12:00:00.0000000Z</MaterialAvailabilityDateTime>\r\n            <Quantity unitCode=\"EA\">1</Quantity>\r\n            <QuantityTypeCode>EA</QuantityTypeCode>\r\n         </CreateProductionPlanningOrder>\r\n      </glob:CreateProductionProposal>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
										},
										"url": {
											"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/manageproductionproposalin",
											"protocol": "https",
											"host": [
												"{{TenantHostname}}"
											],
											"path": [
												"sap",
												"bc",
												"srt",
												"scs",
												"sap",
												"manageproductionproposalin"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "html",
									"header": [
										{
											"key": "content-type",
											"value": "text/html; charset=utf-8"
										},
										{
											"key": "content-encoding",
											"value": "gzip"
										},
										{
											"key": "content-length",
											"value": "505"
										},
										{
											"key": "sap-system",
											"value": "KHL"
										},
										{
											"key": "www-authenticate",
											"value": "Basic realm=\"SAP NetWeaver Application Server [KHL/171][alias]\""
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=31536000; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "<html>\n    <head>\n        <title>Logon Error Message</title>\n        <META http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\">\n        <style type=\"text/css\">body { font-family:tahoma,helvetica,sans-serif;color:#333333;background-color:#FFFFFF; }td { font-family:tahoma,helvetica,sans-serif;font-size:70%;color:#333333; }h1 { font-family:tahoma,helvetica,sans-serif;font-size:160%;font-weight:bold;margin-top:15px;margin-bottom:3px;color:#003366; }h2 { font-family:verdana,helvetica,sans-serif;font-size:120%;font-style:italic;font-weight:bold;margin-top:6px;margin-bottom:6px;color:#999900; }p { font-family:tahoma,helvetica,sans-serif;color:#333333;margin-top:4px;margin-bottom:4px; }ul { font-family:tahoma,helvetica,sans-serif;color:#333333;list-style-type:square;margin-top:8px;margin-bottom:8px; }li { font-family:tahoma,helvetica,sans-serif;color:#33333;margin-top:4px; }.emphasize { color:#333333;background-color:#C8E3FF;padding:5px;}.note { color:#CC6600; }a { font-family:tahoma,helvetica,sans-serif;text-decoration:underline;color:#336699; }a:visited { color:#001166; }a:hover { text-decoration:none; }</style>\n    </head>\n    <body>\n        <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\">\n            <tr>\n                <td>\n                    <h1>Logon failed</h1>\n                </td>\n            </tr>\n        </table>\n    </body>\n</html>"
								}
							]
						},
						{
							"name": "Get customer specific discount product category",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "13783b8f-a601-492f-8b16-481c2a8417ff",
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"Get Gross Customer specific discount product category - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"// Get workplace address object ID and parten object ID",
											"var jsonResponse = pm.response.json();",
											"pm.environment.set(\"ObjectID\", jsonResponse.d.results[0].ObjectID);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmupricelist/PriceListCollection?$filter=UUID eq guid'{{DiscountListUUID}}'&$expand=PriceListKeys,Items,Items/ItemKeys,Items/Scales&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmupricelist",
										"PriceListCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "UUID eq guid'{{DiscountListUUID}}'"
										},
										{
											"key": "$expand",
											"value": "PriceListKeys,Items,Items/ItemKeys,Items/Scales"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create/Update customer hierarchy specific discount product category (Soap 1.1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "691edeb4-7bfd-4e5f-8c75-c140cf9f04a2",
										"exec": [
											"let jsonResponse = xml2Json(responseBody);",
											"",
											"",
											"// Validations",
											"pm.test(\"Gross Customer hierarchy specific discount product category \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:SalesPriceListBundleMaintainConfirmation_sync'].SalesPriceList.ID + \" created / updated \", function () { pm.response.to.have.status(200) });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3e65b165-9326-4ac2-9a90-37c0ed7a5612",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CommunicationUserPW}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CommunicationUser}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:SalesPriceListBundleMaintainRequest_sync>\r\n \t\t<SalesPriceList ActionCode=\"04\">\r\n\t\t  <TypeCode>8PL3</TypeCode>\r\n\t\t  <ID>CustomerHierarchySpecificProductCategoryDiscountListGrossID</ID>\r\n\t\t  <Description languageCode=\"EN\">{{DiscountListDescription}}</Description>\r\n\t\t  \r\n\t\t  <!-- Header Keys: AccountHierarchyID -->\r\n\t\t  \r\n\t\t  <AccountHierarchyID>IF01</AccountHierarchyID>\r\n\t\t  \r\n\t\t  <StartDate>2001-01-01</StartDate>\r\n\t\t  <EndDate>2001-01-01</EndDate>\r\n\t\t\r\n\t\t  <PriceSpecification>\r\n\t\t\t   <TypeCode>8PR6</TypeCode>\r\n\t\t\t   <Percent>1.00</Percent>\r\n\t\t\t   \r\n\t\t\t       <!-- Item Keys: ProductCategoryHierarchyID,ProductCategoryID  -->\r\n\t\t\t\t<ProductCategoryHierarchyID>ROOT-1</ProductCategoryHierarchyID>\r\n\t\t\t\t<ProductCategoryID>191</ProductCategoryID>\r\n\t\t\t   \r\n\t\t  </PriceSpecification>\r\n\t\t </SalesPriceList>\r\n\r\n      </glob:SalesPriceListBundleMaintainRequest_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/managesalespricelistin2",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"managesalespricelistin2"
									]
								}
							},
							"response": [
								{
									"name": "Create production proposal (Soap 1.1)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:CreateProductionProposal>\r\n         <CreateProductionPlanningOrder>\r\n            <SequenceNumber>1</SequenceNumber>\r\n            <SupplyPlanningAreaID>P1100</SupplyPlanningAreaID>\r\n            <MaterialID>P100101</MaterialID>\r\n            <!-- <ProductRequirementSpecificationID>?</ProductRequirementSpecificationID> -->\r\n            <MaterialAvailabilityDateTime timeZoneCode=\"CET\">2019-02-05T12:00:00.0000000Z</MaterialAvailabilityDateTime>\r\n            <Quantity unitCode=\"EA\">1</Quantity>\r\n            <QuantityTypeCode>EA</QuantityTypeCode>\r\n         </CreateProductionPlanningOrder>\r\n      </glob:CreateProductionProposal>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
										},
										"url": {
											"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/manageproductionproposalin",
											"protocol": "https",
											"host": [
												"{{TenantHostname}}"
											],
											"path": [
												"sap",
												"bc",
												"srt",
												"scs",
												"sap",
												"manageproductionproposalin"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "html",
									"header": [
										{
											"key": "content-type",
											"value": "text/html; charset=utf-8"
										},
										{
											"key": "content-encoding",
											"value": "gzip"
										},
										{
											"key": "content-length",
											"value": "505"
										},
										{
											"key": "sap-system",
											"value": "KHL"
										},
										{
											"key": "www-authenticate",
											"value": "Basic realm=\"SAP NetWeaver Application Server [KHL/171][alias]\""
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=31536000; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "<html>\n    <head>\n        <title>Logon Error Message</title>\n        <META http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\">\n        <style type=\"text/css\">body { font-family:tahoma,helvetica,sans-serif;color:#333333;background-color:#FFFFFF; }td { font-family:tahoma,helvetica,sans-serif;font-size:70%;color:#333333; }h1 { font-family:tahoma,helvetica,sans-serif;font-size:160%;font-weight:bold;margin-top:15px;margin-bottom:3px;color:#003366; }h2 { font-family:verdana,helvetica,sans-serif;font-size:120%;font-style:italic;font-weight:bold;margin-top:6px;margin-bottom:6px;color:#999900; }p { font-family:tahoma,helvetica,sans-serif;color:#333333;margin-top:4px;margin-bottom:4px; }ul { font-family:tahoma,helvetica,sans-serif;color:#333333;list-style-type:square;margin-top:8px;margin-bottom:8px; }li { font-family:tahoma,helvetica,sans-serif;color:#33333;margin-top:4px; }.emphasize { color:#333333;background-color:#C8E3FF;padding:5px;}.note { color:#CC6600; }a { font-family:tahoma,helvetica,sans-serif;text-decoration:underline;color:#336699; }a:visited { color:#001166; }a:hover { text-decoration:none; }</style>\n    </head>\n    <body>\n        <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\">\n            <tr>\n                <td>\n                    <h1>Logon failed</h1>\n                </td>\n            </tr>\n        </table>\n    </body>\n</html>"
								}
							]
						},
						{
							"name": "Get customer hierarchy specific discount product category",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "13783b8f-a601-492f-8b16-481c2a8417ff",
										"exec": [
											"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
											"",
											"// Validations",
											"pm.test(\"Get Gross Customer hierarchy specific discount product category - Response OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"// Get workplace address object ID and parten object ID",
											"var jsonResponse = pm.response.json();",
											"pm.environment.set(\"ObjectID\", jsonResponse.d.results[0].ObjectID);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW5pc3RyYXRpb24wMTpXZWxjb21lMQ=="
									},
									{
										"key": "x-csrf-token",
										"value": "fetch"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/vmupricelist/PriceListCollection?$filter=UUID eq guid'{{DiscountListUUID}}'&$expand=PriceListKeys,Items,Items/ItemKeys,Items/Scales&$format=json",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"byd",
										"odata",
										"cust",
										"v1",
										"vmupricelist",
										"PriceListCollection"
									],
									"query": [
										{
											"key": "$filter",
											"value": "UUID eq guid'{{DiscountListUUID}}'"
										},
										{
											"key": "$expand",
											"value": "PriceListKeys,Items,Items/ItemKeys,Items/Scales"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		}
	]
}