{
	"info": {
		"_postman_id": "8611db0f-3a4c-4841-b306-c8db5607a439",
		"name": "End-to-End Scenarios",
		"description": "SAP Business ByDesign API Samples - End-to-End Business Scenarios\n=================================================================\n\nA Postman collection with examples to run end-to-end business processes using SAP Business ByDesign Custom OData Services.\nEach collection folder corresponds to an end-to-end process; execute the web service requests in the listed order with each folder.\nAll sample data is aligned to and ready to run on SAP Business ByDesign Reference Systems with preconfigured and loaded sample data provided by SAP.\n\n\n\n&nbsp; \n\nScenario 1: Lead to Opportunity to Quote\n----------------------------------------\n\nRequired user authorizations (ByD Work Center Views):\n- *Marketing - Leads*\n- *New Business - Opportunity List*\n- *New Business - Sales Quotes*\n\nScenario:\n1. Create lead\n2. Get and check lead\n3. Hand over lead to sales\n4. Accept and update lead\n5. Create opportunity with reference to lead\n6. Update opportunity status to \"in process\" and \"won\", and update opportunity\n7. Get and check opportunity\n8. Create sales quote\n9. Add reference to opportunity and copy opportunity data into the quote\n10. Get and check quote\n\n\n&nbsp;\n\nScenario 2: Selling Services\n----------------------------\n\nRequired user authorizations (ByD Work Center Views):\n- *Sales Orders - Sales Orders*\n- *Customer Invoicing - Invoice Requests*\n- *Customer Invoicing - Invoice Documents*\n\nScenario:\n1. Create sales order with service items (fix price w/o actuals)\n2. Release and confirm execution of sales order items\n3. Release the customer invoice request\n4. Release customer invoice\n\nOpen items created by this scenario can be paid using scenario *Pay Due Items using Bank Statements*.\n\n\n&nbsp;\n\nScenario 3: Field Service and Repair\n------------------------------------\n\nRequired user authorizations (ByD Work Center Views):\n- *Service Desk - Service Requests*\n- *Service Orders - Service Order Processing*\n- *Field Service and Repair - Service Confirmations*\n\nSetup:\nThis scenario requires to configure SOAP web service APIs:\n1. Work center view *Application and User Management - Communication Systems*: Create a communication system using work center view\n2. Work center view *Application and User Management - Communication Scenarios*: Create a communication scenario with the following web service APIs: \n\t- *Query Service Confirmations*\n\t- *Manage Service Confirmations*\n3. Work center view *Application and User Management - Communication Arrangements*: Create communication arrangement for your scenario of step 2, the communication system of step 1 and enter the credentials\n\nCheck Business Configuration and deactivate the scoping question *Service* > *Service and Repair* > *Service Confirmation* > *Do you want to use an approval process for service confirmations?*\n\nScenario: \n1. Create service request\n2. Create service order as follow-up document of the service request\n3. Add services and spare parts and release execution\n4. Create service order confirmation (SOAP Web Service API)\n5. Submit, comfirm and complete the service execution\n6. Complete the service request\n7. Invoice the service confirmation\n\nOpen items created by this scenario can be paid using scenario *Pay Due Items using Bank Statements*.\n\n\n&nbsp;\n\nScenario 4: Procure to Stock\n----------------------------\n\nRequired user authorizations (ByD Work Center Views) and preconditions:\n- *Purchase Requests and Orders - Purchase Orders*\n- *Inbound Logistics - Purchase Orders*\n- *Inbound Logistics - Inbound Delivery Notifications*\n- *Inbound Logistics - Inbound Deliveries*\n- *Supplier Invoicing - Invoices and Credit Memos*\n- Supplier invoices can only be posted if the user is authorized to post supplier invoices (see for example *Organizational Management > Employee Work Distribution > Employee Responsible for Supplier Invoices*) and if supplier invoices with total amount 50540.00 USD do not require approvals (see *Business Configuration* activity *Supplier Invoice Approvals*). Otherwise supplier invoices remain in status \"ready for posting\".\n\nScenario:\n1. Create and submit purchase order with 1 item (material to stock)\n2. Confirm purchase order by supplier (creates purchase order acknowledgment)\n3. Get and check inbound delivery request (BO *InboundDeliveryRequest*)\n4. Create inbound delivery notification (BO *InboundDelivery*)\n5. Post goods receipt and check the confirmed inbound delivery (BO *ConfirmedInboundDelivery*)\n6. Create supplier invoice\n7. Check supplier invoice exceptions \n8. Post supplier invoice\n9. Check purchase order status\n\nMaterials purchased using this scenario can be sold using scenario *Sell from Stock*.\n\n\n&nbsp;\n\nScenario 5: Sell from Stock\n---------------------------\n\nRequired user authorizations (ByD Work Center Views):\n- *Sales Orders - Sales Orders*\n- *Outbound Logistics - Delivery Proposals*\n- *Outbound Logistics - Outbound Deliveries*\n- *Customer Invoicing - Invoice Requests*\n- *Customer Invoicing - Invoice Documents*\n\nScenario:\n1. Create sales order with 1 material item\n2. Check availability and release the sales order to execution\n3. Check delivery proposal (BO *OutboundDeliveryRequest*)\n4. Post goods issue\n5. Get, check and release outbound delivery (BO *OutboundDelivery*)\n6. Get, check and release the customer invoice request\n7. Get, check and release customer invoice\n8. Check sales order status\n\nIf the availability check fails, you can fill up your stock using scenario *Procure to Stock*.\n\nOpen items created by this scenario can be paid using scenario *Pay Due Items using Bank Statements*.\n\n\n&nbsp;\n\nScenario 6: Drop Shipment\n-------------------------\n\nRequired user authorizations (ByD Work Center Views):\n- *Sales Orders - Sales Orders*\n- *Purchase Requests and Orders - Purchase Orders*\n- *Inbound Logistics - Purchase Orders*\n- *Inbound Logistics - Inbound Delivery Notifications*\n- *Supplier Invoicing - Invoices and Credit Memos*\n- Supplier invoices can only be posted if the user is authorized to post supplier invoices (see for example *Organizational Management > Employee Work Distribution > Employee Responsible for Supplier Invoices*) and if supplier invoices with total amount 79200.00 USD do not require approvals (see *Business Configuration* activity *Supplier Invoice Approvals*). Otherwise supplier invoices remain in status \"ready for posting\".\n- *Outbound Logistics - Outbound Deliveries*\n- *Customer Invoicing - Invoice Requests*\n- *Customer Invoicing - Invoice Documents*\n\nScenario:\n1. Create sales order with material item and external fullfillment\n2. Release sales order to execution\n3. Get and check purchase order\n4. Get and check inbound delivery request (BO *InboundDeliveryRequest*)\n5. Create third-party delivery notification (BO *InboundDelivery*)\n6. Release third-party delivery notification \n7. Get and check third-party delivery notification\n8. Create and release supplier invoice\n9. Get and check supplier invoice\n10. Check purchase order status\n11. Get outbound delivery (BO *OutboundDelivery*)\n12. Get customer invoice request with reference to outbound delivery\n13. Release customer invoice request and create customer invoice\n14. Query and release customer invoice\n15. Get and check customer invoice\n16. Check sales order status\n\n\n&nbsp;\n\nScenario 7: Make to Stock\n-------------------------\n\nRequired user authorizations (ByD Work Center Views):\n- *Purchase Requests and Orders - Purchase Orders*\n- *Inbound Logistics - Inbound Delivery Notifications*\n- *Inbound Logistics - Inbound Deliveries*\n- *Supply Control - Process Production Proposals*\n- *Production Control - Production Orders*\n- *Execution - Production Tasks*\n\nSetup:\nThis scenario requires to configure SOAP web service APIs:\n1. Work center view *Application and User Management - Communication Systems*: Create a communication system using work center view\n2. Work center view *Application and User Management - Communication Scenarios*: Create a communication scenario with the following web service APIs: \n\t- *Manage Production Proposals*\n\t- *Query Production Orders*\n\t- *Query Production Lots*\n\t- *Manage Production Lots*\n3. Work center view *Application and User Management - Communication Arrangements*: Create communication arrangement for your scenario of step 2, the communication system of step 1 and enter the credentials\n\nScenario:\n1. Procure production materials:\n\ta. Create and submit purchase order with 2 item (material to stock)\n\tb. Confirm purchase order by supplier (creates purchase order acknowledgment)\n\tc. Get and check inbound delivery request (BO *InboundDeliveryRequest*)\n\td. Create inbound delivery notification (BO *InboundDelivery*)\n\te. Post goods receipt and check the confirmed inbound delivery (BO *ConfirmedInboundDelivery*)\n\tf. Check purchase order status\n2. Create production proposal (SOAP Web Service API)\n3. Check and release production proposal\n4. Query production order (SOAP Web Service API)\n5. Check and release production order\n6. Query production lot (SOAP Web Service API)\n7. Assign production task responsible (SOAP Web Service API)\n8. Confirm and finish production task (SOAP Web Service API)\n\n\n&nbsp;\n\nScenario 8: Pay Due Items using Bank Statements\n-----------------------------------------------\n\nRequired user authorizations (ByD Work Center Views):\n- *Receivables - Customer Accounts*\n- *Liquidity Management - My Banks*\n- *Liquidity Management - Inbound Files*\n- *Liquidity Management - Bank Statements*\n\nSetup: \nThe bank statements created by this scenario are automatically allocated if you apply the following business configuration in your ByD system:\n1. Fine-Tuning activity *Automatically Generated Bank Statements* > *Assign import formats for bank statements*:  \nAdd row using the values: Company ID: 1000 | Bank ID: 1000002 | Bank Statement Format: 02 - BAI2 US\n2. Fine-Tuning activity *Settings for Posting Automatically Generated Bank Statements*:  \nAdd row using the values: Seq.: 1 | Company: * | Bank Country: * | Bank ID: * | Currency: * | Bank Account ID: * | Manual Post Necessary: False\n3. Fine-Tuning activity *Global Settings for Payment* > *Create and edit rules for analyzing memo lines*:  \nAdd 4 rows using the following values:\n\t- Rule 1: Description: Customer | Rule Type: 4 | Rule Definition Mode: Expert | Regular Expression: (ORIG CO NAME\\=).*\n\t- Rule 2: Description: AR External Reference (w seconds) | Rule Type: 13 | Rule Definition Mode: Expert | Regular Expression: (\\R\\-\\d{4}\\d{1,2}\\d{1,2}\\d{2}\\d{2}\\d{2})\n\t- Rule 3: Description: AR External Reference 1INV | Rule Type: 13 | Rule Definition Mode: Expert | Regular Expression: (1INV-\\d{1,}\\-\\d{1,})\n\t- Rule 4: Description: AR External Reference (w/o seconds) | Rule Type: 13 | Rule Definition Mode: Expert | Regular Expression: (\\R\\-\\d{4}\\d{1,2}\\d{1,2}\\d{2}\\d{2})\n\nScenario:\n1. Read previous bank statement to get last closing balance (BO *HouseBankStatement*)\n2. Get open items to be cleared and create BAI2 bank statement file (Report *Accounts Receivable - Open Items*)\n\t- The request creates a BAI2 bank statement file for the number of due items as specified in environment variable \"TotalNumberOfDueItemsToBeCleared\"\n\t- By environment variable \"MaxNumberOfDueItemsToBeClearedPartially\" you specify the max. number of due items that are cleared partially. Which due items are cleared partially is a random choice; clearing amount = due amount - 3% discount.\n3. Get company house bank account (BO *HouseBankAccount*)\n4. Get company payment file register (BO *CompanyPaymentFileRegister*)\n5. Create incoming file using the file of step 2 (BO *CompanyPaymentFileRegister*)\n6. Trigger file upload (Alternatively start the file via ByD work center view *Liquidity Management - Inbound Files*) \n7. ByD UI: Allocate unmatched payments via work center view *Liquidity Management - Bank Statements*",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Lead to Opportunity to Quote",
			"item": [
				{
					"name": "Get entity sets and CSRF-token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5e62e94d-f718-4db5-86fa-22e27ebb5825",
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"pm.test(\"Cross site request forgery token: received\", function () { pm.response.to.have.status(200); pm.response.to.have.header(\"x-csrf-token\") });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4b5f4d9c-55db-4cb2-a6b6-ffc9e31c7d2b",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khlead/",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khlead",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create lead",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a0b9bbf9-6725-4134-89e9-f2347dde8747",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"LeadObjectID\", jsonResponse.d.results.ObjectID);",
									"pm.environment.set(\"LeadID\", jsonResponse.d.results.ID);",
									"",
									"// Validations",
									"pm.test(\"Lead \" + jsonResponse.d.results.ID + \" created\", function () { pm.response.to.have.status(201) });",
									"pm.test(\"Lead consistency status: \" + jsonResponse.d.results.ConsistencyStatusCodeText, function () { pm.expect(jsonResponse.d.results.ConsistencyStatusCode).to.eql(\"3\") });",
									"pm.test(\"Lead status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.response.to.have.status(201) });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8c48396a-8f50-4024-8dfa-a3c7594fd8a6",
								"exec": [
									"// Set Lead description",
									"//let genLeadDescription = \"Interested in \" + pm.environment.get(\"LeadDescriptionProductName\");",
									"//pm.environment.set(\"LeadDescription\", genLeadDescription);",
									"",
									"// Set lead start date and end date",
									"let moment = require('moment');",
									"let startDate = moment().add(0,'day').toISOString().substr(0,10) + \"T00:00:00\";",
									"pm.environment.set(\"LeadStartDate\", startDate);",
									"let endDate = moment().add(1,'month').toISOString().substr(0,10) + \"T00:00:00\";",
									"pm.environment.set(\"LeadEndDate\", endDate);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"Description\": \"{{LeadDescription}}\",\n\t\"StartDate\": \"{{LeadStartDate}}\",\n\t\"EndDate\": \"{{LeadEndDate}}\",\n\t\"QualificationLevelCode\": \"{{LeadQualificationCode}}\",\n\t\"ClassificationCategoryCode\": \"{{LeadClassificationCategoryCode}}\",\n\t\"SourceCode\": \"{{LeadSourceCode}}\",\n\t\"ProspectParty\": \n\t\t{\n\t\t\t\"PartyID\": \"{{CustomerID2}}\"\n\t\t},\n\t\"EmployeeResponsibleMarketingParty\": \n\t\t{\n\t\t\t\"PartyID\": \"{{MarketingEmployeeID}}\"\n\t\t},\n\t\"EmployeeResponsibleSalesParty\": \n\t\t{\n\t\t\t\"PartyID\": \"{{SalesEmployeeID}}\"\n\t\t}\n}    \t"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khlead/LeadCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khlead",
								"LeadCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Hand over lead to sales",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Lead handed over to sales\", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Lead status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"3\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khlead/HandOver?ObjectID='{{LeadObjectID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khlead",
								"HandOver"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{LeadObjectID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Accept lead",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Lead accepted\", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Lead status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"4\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khlead/Accept?ObjectID='{{LeadObjectID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khlead",
								"Accept"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{LeadObjectID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update lead reason for status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a0b9bbf9-6725-4134-89e9-f2347dde8747",
								"exec": [
									"// Validations",
									"pm.test(\"Patch successful\", function () { pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]) });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8c48396a-8f50-4024-8dfa-a3c7594fd8a6",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"ObjectID\": \"{{LeadObjectID}}\",\n\t\"ResultReasonCode\": \"009\"\n}    \t"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khlead/LeadCollection('{{LeadObjectID}}')",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khlead",
								"LeadCollection('{{LeadObjectID}}')"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get lead",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c38f9015-76c9-4c82-98d1-4b7251b30302",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"pm.environment.set(\"LeadObjectID\", jsonResponse.d.results[0].ObjectID);",
									"pm.environment.set(\"LeadID\", jsonResponse.d.results[0].ID);",
									"",
									"// Validations",
									"pm.test(\"Lead \" + jsonResponse.d.results[0].ID + \" retrieved\", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Lead consistency status: \" + jsonResponse.d.results[0].ConsistencyStatusCodeText, function () { pm.expect(jsonResponse.d.results[0].ConsistencyStatusCode).to.eql(\"3\") });",
									"pm.test(\"Lead status: \" + jsonResponse.d.results[0].LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results[0].LifeCycleStatusCode).to.eql(\"4\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khlead/LeadCollection?$format=json&$expand=SalesUnitParty,MarketingUnitParty,EmployeeResponsibleSalesParty/EmployeeResponsibleSalesName,EmployeeResponsibleMarketingParty/EmployeeResponsibleMarketingName,ProspectParty/ProspectPartyName&$filter=ID eq '{{LeadID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khlead",
								"LeadCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "SalesUnitParty,MarketingUnitParty,EmployeeResponsibleSalesParty/EmployeeResponsibleSalesName,EmployeeResponsibleMarketingParty/EmployeeResponsibleMarketingName,ProspectParty/ProspectPartyName"
								},
								{
									"key": "$filter",
									"value": "ID eq '{{LeadID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create opportunity",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a0b9bbf9-6725-4134-89e9-f2347dde8747",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"OpportunityObjectID\", jsonResponse.d.results.ObjectID);",
									"pm.environment.set(\"OpportunityID\", jsonResponse.d.results.ID);",
									"",
									"// Validations",
									"pm.test(\"Opportunity \" + jsonResponse.d.results.ID + \" created\", function () { pm.response.to.have.status(201) });",
									"pm.test(\"Opportunity consistency status: \" + jsonResponse.d.results.ConsistencyStatusCodeText, function () { pm.expect(jsonResponse.d.results.ConsistencyStatusCode).to.eql(\"3\") });",
									"pm.test(\"Opportunity status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.response.to.have.status(201) });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8c48396a-8f50-4024-8dfa-a3c7594fd8a6",
								"exec": [
									"// Set Lead description",
									"//let genLeadDescription = \"Interested in \" + pm.environment.get(\"LeadDescriptionProductName\");",
									"//pm.environment.set(\"LeadDescription\", genLeadDescription);",
									"",
									"// Set lead start date and end date",
									"let moment = require('moment');",
									"let startDate = moment().add(0,'day').toISOString().substr(0,10) + \"T00:00:00\";",
									"pm.environment.set(\"OpportunityStartDate\", startDate);",
									"let endDate = moment().add(2,'month').toISOString().substr(0,10) + \"T00:00:00\";",
									"pm.environment.set(\"OpportunityEndDate\", endDate);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"Description\": \"{{OpportunityDescription}}\",\n\t\"ClassificationCategoryCode\": \"{{OpportunityQualificationCode}}\",\n\t\"SourceCode\": \"{{OpportunitySourceCode}}\",\n\t\"PriorityCode\": \"3\",\n\t\"SalesCycleCode\": \"001\",\n\t\"SalesPhaseCode\": \"{{OpportunitySalesPhaseCode}}\",\n\t\"ResultReasonCode\": \"\",\n\t\"ChanceOfSuccessPercent\": \"{{OpportunityChanceOfSuccessPercent}}\",\n\t\"ExpectedRevenueAmount\": \"{{OpportunityExpectedRevenueAmount}}\",\n\t\"ExpectedRevenueAmountCurrencyCode\": \"USD\",\n\t\"SalesRevenueForecastRelevanceIndicator\": true,\n\t\"EmployeeResponsible\": \n\t\t{\n\t\t\t\"PartyID\": \"{{SalesEmployeeID}}\"\n\t\t},\n\t\"ProspectParty\": \n\t\t{\n\t\t\t\"PartyID\": \"{{CustomerID2}}\"\n\t\t}\n}    \t"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khopportunity/OpportunityCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khopportunity",
								"OpportunityCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add reference to lead",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Lead added as document reference\", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Opportunity consistency status: \" + jsonResponse.d.results.ConsistencyStatusCodeText, function () { pm.expect(jsonResponse.d.results.ConsistencyStatusCode).to.eql(\"3\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khopportunity/AddReference?ObjectID='{{OpportunityObjectID}}'&TypeCode='64'&ID='{{LeadID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khopportunity",
								"AddReference"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{OpportunityObjectID}}'"
								},
								{
									"key": "TypeCode",
									"value": "'64'"
								},
								{
									"key": "ID",
									"value": "'{{LeadID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Process opportunity",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Opportunity status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"2\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khopportunity/Process?ObjectID='{{OpportunityObjectID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khopportunity",
								"Process"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{OpportunityObjectID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add opportunity item",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "aab993da-97ca-40e2-9ffc-aefda522898d",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Item \" + jsonResponse.d.results.ID + \" added to opportunity\", function () { pm.expect(pm.response.code).to.be.oneOf([201]) });",
									"pm.test(\"Product: \" + jsonResponse.d.results.ProductID + \" - \" + jsonResponse.d.results.Description, function () { pm.expect(pm.response.code).to.be.oneOf([201]) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"ParentObjectID\": \"{{OpportunityObjectID}}\",\n\t\"ProductID\": \"{{OpportunityMaterialID}}\",\n\t\"Quantity\": \"{{OpportunityItemQuantity}}\",\n\t\"UnitCode\": \"XBX\"\n}    \t"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khopportunity/ItemCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khopportunity",
								"ItemCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Win opportunity",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Opportunity status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"4\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khopportunity/Win?ObjectID='{{OpportunityObjectID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khopportunity",
								"Win"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{OpportunityObjectID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update won opportunity",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a0b9bbf9-6725-4134-89e9-f2347dde8747",
								"exec": [
									"// Validations",
									"pm.test(\"Patch successful\", function () { pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]) });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8c48396a-8f50-4024-8dfa-a3c7594fd8a6",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"ObjectID\": \"{{OpportunityObjectID}}\",\n\t\"SalesPhaseCode\": \"004\",\n\t\"ExpectedRevenueAmount\": \"{{OpportunityWonExpectedRevenueAmount}}\",\n\t\"ResultReasonCode\": \"005\"\n}    \t"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khopportunity/OpportunityCollection('{{OpportunityObjectID}}')",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khopportunity",
								"OpportunityCollection('{{OpportunityObjectID}}')"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get opportunity",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c38f9015-76c9-4c82-98d1-4b7251b30302",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"pm.environment.set(\"OpportunityObjectID\", jsonResponse.d.results[0].ObjectID);",
									"pm.environment.set(\"OpportunityID\", jsonResponse.d.results[0].ID);",
									"",
									"// Validations",
									"pm.test(\"Opportunity \" + jsonResponse.d.results[0].ID + \" retrieved\", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Opportunity consistency status: \" + jsonResponse.d.results[0].ConsistencyStatusCodeText, function () { pm.expect(jsonResponse.d.results[0].ConsistencyStatusCode).to.eql(\"3\") });",
									"pm.test(\"Opportunity status: \" + jsonResponse.d.results[0].LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results[0].LifeCycleStatusCode).to.eql(\"4\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khopportunity/OpportunityCollection?$format=json&$expand=DocumentReference,EmployeeResponsible/EmployeeResponsibleName,ProspectParty/ProspectPartyName,SalesBusinessArea,SalesUnit/SalesUnitName,Text,Item&$filter=ID eq '{{OpportunityID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khopportunity",
								"OpportunityCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "DocumentReference,EmployeeResponsible/EmployeeResponsibleName,ProspectParty/ProspectPartyName,SalesBusinessArea,SalesUnit/SalesUnitName,Text,Item"
								},
								{
									"key": "$filter",
									"value": "ID eq '{{OpportunityID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create sales quote (empty)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e53c5667-b455-4c85-938c-5e1feecad9d0",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"SalesQuoteID\", jsonResponse.d.results.ID);",
									"pm.environment.set(\"SalesQuoteObjectID\", jsonResponse.d.results.ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Sales quote \" + jsonResponse.d.results.ID + \" created (empty)\", function () { pm.response.to.have.status(201) });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "bc3e7673-5f78-4f1e-aea6-fe9024155de1",
								"exec": [
									"// Set External Reference of pattern KH-<UTC datetime>",
									"let todayDateTime = (new Date()).toISOString().substr(0,19);",
									"todayDateTime = todayDateTime.replace(\"-\",\"\").replace(\"-\",\"\").replace(\"T\",\"\").replace(\":\",\"\").replace(\":\",\"\");",
									"var generatedBuyerID = pm.environment.get(\"ExternalReferencePrefix\") + todayDateTime;",
									"//var generatedBuyerID = pm.environment.get(\"ExternalReferencePrefix\") + (new Date()).toISOString().substr(0,19);",
									"pm.environment.set(\"SalesQuoteExternalReference\", generatedBuyerID);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept-Language",
								"value": "en"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"ExternalReference\": \"{{SalesQuoteExternalReference}}\"\n}"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcustomerquote/CustomerQuoteCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcustomerquote",
								"CustomerQuoteCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add reference with data provisioning",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "6989eaeb-69b2-4ab5-8554-f80ddd478e2b",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1941d684-4064-4e8e-92d0-bde47efc107f",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Reference to opportunity \" + pm.environment.get(\"OpportunityID\") + \" added to sales quote \" + jsonResponse.d.results.ID, function () { pm.response.to.have.status(200) });",
									"pm.test(\"Sales quote consistency status: \" + jsonResponse.d.results.ConsistencyStatusCodeText, function () { pm.expect(jsonResponse.d.results.ConsistencyStatusCode).to.eql(\"3\") });",
									"pm.test(\"Sales quote status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"1\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcustomerquote/AddReferenceWithDataProvision?ObjectID='{{SalesQuoteObjectID}}'&BusinessTransactionDocumentKey_BusinessTransactionDocumentTypeCode='72'&BusinessTransactionDocumentKey_BusinessTransactionDocumentID='{{OpportunityID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcustomerquote",
								"AddReferenceWithDataProvision"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{SalesQuoteObjectID}}'"
								},
								{
									"key": "BusinessTransactionDocumentKey_BusinessTransactionDocumentTypeCode",
									"value": "'72'"
								},
								{
									"key": "BusinessTransactionDocumentKey_BusinessTransactionDocumentID",
									"value": "'{{OpportunityID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get sales quote",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8b6d5cbd-d02c-41da-ad1e-03be26274892",
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"SalesQuoteID\", jsonResponse.d.results[0].ID);",
									"pm.environment.set(\"SalesQuoteObjectID\", jsonResponse.d.results[0].ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Sales quote \" + jsonResponse.d.results[0].ID + \" returned\", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Sales quote consistency status: \" + jsonResponse.d.results[0].ConsistencyStatusCodeText, function () { pm.expect(jsonResponse.d.results[0].ConsistencyStatusCode).to.eql(\"3\") });",
									"pm.test(\"Sales quote status: \" + jsonResponse.d.results[0].LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results[0].LifeCycleStatusCode).to.eql(\"1\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcustomerquote/CustomerQuoteCollection?$format=json&$expand=DocumentReference,Item/ItemPriceAndTaxCalculation,BillToParty/BillToPartyName,BuyerParty/BuyerPartyName,EmployeeResponsible/EmployeeResponsibleName,OpportunityReference,SalesUnitParty/SalesUnitPartyName,ShipToParty/ShipToPartyName,ValidityPeriod,PeriodTerms&$filter=ID eq '{{SalesQuoteID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcustomerquote",
								"CustomerQuoteCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "DocumentReference,Item/ItemPriceAndTaxCalculation,BillToParty/BillToPartyName,BuyerParty/BuyerPartyName,EmployeeResponsible/EmployeeResponsibleName,OpportunityReference,SalesUnitParty/SalesUnitPartyName,ShipToParty/ShipToPartyName,ValidityPeriod,PeriodTerms"
								},
								{
									"key": "$filter",
									"value": "ID eq '{{SalesQuoteID}}'"
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "cfa22914-3907-47a0-9666-7026a3c0fff1",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "9016cb00-db0f-469f-8c23-eece5d5845cd",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Selling Services",
			"item": [
				{
					"name": "Get entity sets and CSRF-token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5e62e94d-f718-4db5-86fa-22e27ebb5825",
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"pm.test(\"Cross site request forgery token: received\", function () { pm.response.to.have.status(200); pm.response.to.have.header(\"x-csrf-token\") });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4b5f4d9c-55db-4cb2-a6b6-ffc9e31c7d2b",
								"exec": [
									"//Initialize dynamic environment variables",
									"pm.environment.set(\"x-csrf-token\", \"\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khsalesorder/",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khsalesorder",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create sales order (nested create)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a0b9bbf9-6725-4134-89e9-f2347dde8747",
								"exec": [
									"",
									"var jsonResponse = pm.response.json();",
									"//console.log(jsonResponse.d.results[0].ID);",
									"pm.environment.set(\"SalesOrderObjectID\", jsonResponse.d.results.ObjectID);",
									"pm.environment.set(\"SalesOrderID\", jsonResponse.d.results.ID);",
									"",
									"// Validations",
									"pm.test(\"Sales order \" + jsonResponse.d.results.ID + \" created\", function () { pm.response.to.have.status(201) });",
									"pm.test(\"Sales Order consistent\", function () { pm.expect(jsonResponse.d.results.ConsistencyStatusCode).to.eql(\"3\") });",
									"pm.test(\"Sales Order status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.response.to.have.status(201) });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8c48396a-8f50-4024-8dfa-a3c7594fd8a6",
								"exec": [
									"// Set External Reference of pattern KH-<UTC datetime>",
									"let todayDateTime = (new Date()).toISOString().substr(0,19);",
									"todayDateTime = todayDateTime.replace(\"-\",\"\").replace(\"-\",\"\").replace(\"T\",\"\").replace(\":\",\"\").replace(\":\",\"\");",
									"var generatedBuyerID = pm.environment.get(\"ExternalReferencePrefix\") + todayDateTime;",
									"//var generatedBuyerID = pm.environment.get(\"ExternalReferencePrefix\") + (new Date()).toISOString().substr(0,19);",
									"pm.environment.set(\"SalesOrderExternalReference\", generatedBuyerID);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"ExternalReference\": \"{{SalesOrderExternalReference}}\",\n\t\"Name\": \"Reference data - selling services {{Variant}}\",\n\t\"DataOriginTypeCode\": \"1\",\n\t\"SalesUnitParty\":\n\t\t{\t\n\t\t\t\"PartyID\": \"{{SalesUnitID}}\"\n\t\t}, \t\n\t\"BuyerParty\":\n\t\t{\n\t\t\t\"PartyID\": \"{{CustomerID}}\"\n\t\t},\n\t\"PricingTerms\":\n\t\t{\n\t\t\t\"GrossAmountIndicator\": false\n\t\t},\n\t\"Item\":\n\t\t[\n\t\t\t{\n\t\t\t\t\"ID\": \"10\",\n\t\t\t\t\"ProcessingTypeCode\": \"TAS\",\n\t\t\t\t\"ItemProduct\":\n\t\t\t\t\t{\n\t\t\t\t\t\t\"ProductID\": \"{{ServiceProduct1}}\"\n\t\t\t\t\t},\n\t\t\t\t\"ItemScheduleLine\":\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"Quantity\": \"{{ItemQuantity1}}\",\n\t\t\t\t\t\t\t\"unitCode\": \"HUR\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"ID\": \"20\",\n\t\t\t\t\"ProcessingTypeCode\": \"TAS\",\n\t\t\t\t\"ItemProduct\":\n\t\t\t\t\t{\n\t\t\t\t\t\t\"ProductID\": \"{{ServiceProduct2}}\"\n\t\t\t\t\t},\n\t\t\t\t\"ItemScheduleLine\":\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"Quantity\": \"{{ItemQuantity2}}\",\n\t\t\t\t\t\t\t\"unitCode\": \"HUR\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t}\n\t\t]\n}    \t"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khsalesorder/SalesOrderCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khsalesorder",
								"SalesOrderCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get sales order and expand",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c38f9015-76c9-4c82-98d1-4b7251b30302",
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"var jsonResponse = pm.response.json();",
									"//console.log(jsonResponse.d.results[0].ID);",
									"pm.environment.set(\"SalesOrderObjectID\", jsonResponse.d.results[0].ObjectID);",
									"pm.environment.set(\"SalesOrderID\", jsonResponse.d.results[0].ID);",
									"pm.environment.set(\"Item1-ObjectID\", jsonResponse.d.results[0].Item[0].ObjectID);",
									"pm.environment.set(\"Item2-ObjectID\", jsonResponse.d.results[0].Item[1].ObjectID);",
									"",
									"// Validations",
									"pm.test(\"201 - Sales order data returned\", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Item 10 created\", function () { pm.expect(jsonResponse.d.results[0].Item[0].ID).to.eql(\"10\") });",
									"pm.test(\"Item 20 created\", function () { pm.expect(jsonResponse.d.results[0].Item[1].ID).to.eql(\"20\") });",
									"pm.test(\"Sales Order consistent\", function () { pm.expect(jsonResponse.d.results[0].ConsistencyStatusCode).to.eql(\"3\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khsalesorder/SalesOrderCollection?$format=json&$expand=BuyerParty/BuyerPartyName,SalesUnitParty/SalesUnitPartyName,PricingTerms,Item/ItemProduct,Item/ItemScheduleLine&$filter=ID eq '{{SalesOrderID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khsalesorder",
								"SalesOrderCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "BuyerParty/BuyerPartyName,SalesUnitParty/SalesUnitPartyName,PricingTerms,Item/ItemProduct,Item/ItemScheduleLine"
								},
								{
									"key": "$filter",
									"value": "ID eq '{{SalesOrderID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Release sales order",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Sales order \" + jsonResponse.d.results.ID + \" released\", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Sales order release status: \" + jsonResponse.d.results.ReleaseStatusCodeText, function () { pm.expect(jsonResponse.d.results.ReleaseStatusCode).to.eql(\"3\") });",
									"pm.test(\"Sales order lifecycle status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"1\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khsalesorder/SalesOrderRelease3?ObjectID='{{SalesOrderObjectID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khsalesorder",
								"SalesOrderRelease3"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{SalesOrderObjectID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Release sales order to execution",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Sales order \" + jsonResponse.d.results.ID + \" released to execution\", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Sales order delivery status: \" + jsonResponse.d.results.DeliveryStatusCodeText, function () { pm.expect(jsonResponse.d.results.DeliveryStatusCode).to.eql(\"1\") });",
									"pm.test(\"Sales order lifecycle status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"2\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khsalesorder/ReleaseAllItemsToExecution?ObjectID='{{SalesOrderObjectID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khsalesorder",
								"ReleaseAllItemsToExecution"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{SalesOrderObjectID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Complete execution of sales order item 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
								"exec": [
									"// Validations",
									"var jsonResponse = pm.response.json();",
									"pm.test(\"Successful POST request\", function () { pm.expect(pm.response.code).to.be.oneOf([200,201,202]) });",
									"pm.test(\"Sales order item: Released for execution ... ok\", function () { pm.expect(jsonResponse.d.results.ExecutionReleaseStatusCode).to.eql(\"3\") });",
									"pm.test(\"Sales order item: Finished ... ok\", function () { pm.expect(jsonResponse.d.results.FulfilmentProcessingStatusCode).to.eql(\"3\") });",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khsalesorder/ItemCompleteExecution?ObjectID='{{Item1-ObjectID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khsalesorder",
								"ItemCompleteExecution"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{Item1-ObjectID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Complete execution of sales order item 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
								"exec": [
									"// Validations",
									"var jsonResponse = pm.response.json();",
									"pm.test(\"Successful POST request\", function () { pm.expect(pm.response.code).to.be.oneOf([200,201,202]) });",
									"pm.test(\"Sales order item: Released for execution ... ok\", function () { pm.expect(jsonResponse.d.results.ExecutionReleaseStatusCode).to.eql(\"3\") });",
									"pm.test(\"Sales order item: Finished ... ok\", function () { pm.expect(jsonResponse.d.results.FulfilmentProcessingStatusCode).to.eql(\"3\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khsalesorder/ItemCompleteExecution?ObjectID='{{Item2-ObjectID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khsalesorder",
								"ItemCompleteExecution"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{Item2-ObjectID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get customer invoice request",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c38f9015-76c9-4c82-98d1-4b7251b30302",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"pm.environment.set(\"CustomerInvoiceRequestObjectID\", jsonResponse.d.results[0].ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Successful GET request\", function () { pm.expect(pm.response.code).to.be.oneOf([200,201,202]) });",
									"pm.test(\"Customer invoice request consistent\", function () { pm.expect(jsonResponse.d.results[0].ConsistencyStatusCode).to.eql(\"3\") });",
									"pm.test(\"Invoice request item 1: Not Invoiced\", function () { pm.expect(jsonResponse.d.results[0].Item[0].InvoicingStatusCode).to.eql(\"1\") });",
									"pm.test(\"Invoice request item 2: Not Invoiced\", function () { pm.expect(jsonResponse.d.results[0].Item[1].InvoicingStatusCode).to.eql(\"1\") });",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "546de23c-d88a-4193-ac90-d23d098e2b99",
								"exec": [
									"// Delay release of customer invoice request and let the system complete the async. integration between sales order and customer invoicing",
									"setTimeout(function() {}, 5000); // wait 5 sec"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcustomerinvoicerequest/CustomerInvoiceRequestCollection?$format=json&$expand=Item&$filter=BaseBusinessTransactionDocumentTypeCode eq '114' and BaseBusinessTransactionDocumentID eq '{{SalesOrderID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcustomerinvoicerequest",
								"CustomerInvoiceRequestCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "Item"
								},
								{
									"key": "$filter",
									"value": "BaseBusinessTransactionDocumentTypeCode eq '114' and BaseBusinessTransactionDocumentID eq '{{SalesOrderID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Release customer invoice request",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
								"exec": [
									"// Validations",
									"var jsonResponse = pm.response.json();",
									"pm.test(\"Customer Invoice request \" + jsonResponse.d.results.BaseBusinessTransactionDocumentID + \" released\", function () { pm.expect(pm.response.code).to.be.oneOf([200,201,202]) });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "0d693a90-cc3f-4ca6-af65-cec87c532376",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcustomerinvoicerequest/CreateCustomerInvoices?ObjectID='{{CustomerInvoiceRequestObjectID}}'&AutomaticReleaseAllowedIndicator=true",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcustomerinvoicerequest",
								"CreateCustomerInvoices"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{CustomerInvoiceRequestObjectID}}'"
								},
								{
									"key": "AutomaticReleaseAllowedIndicator",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get customer invoice request and check result",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c38f9015-76c9-4c82-98d1-4b7251b30302",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"pm.environment.set(\"CustomerInvoiceRequestObjectID\", jsonResponse.d.results[0].ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Customer invoice request \" + jsonResponse.d.results[0].BaseBusinessTransactionDocumentID + \" found\", function () { pm.expect(pm.response.code).to.be.oneOf([200,201,202]) });",
									"pm.test(\"Customer invoice request consistent\", function () { pm.expect(jsonResponse.d.results[0].ConsistencyStatusCode).to.eql(\"3\") });",
									"pm.test(\"Item 1: Invoicing status: \" + jsonResponse.d.results[0].Item[0].InvoicingStatusCodeText, function () { pm.expect(jsonResponse.d.results[0].Item[0].InvoicingStatusCode).to.eql(\"3\") });",
									"pm.test(\"Item 2: Invoicing status: \" + jsonResponse.d.results[0].Item[1].InvoicingStatusCodeText, function () { pm.expect(jsonResponse.d.results[0].Item[1].InvoicingStatusCode).to.eql(\"3\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcustomerinvoicerequest/CustomerInvoiceRequestCollection?$format=json&$expand=CashDiscountTerms,BuyerPartyName,BuyerPartyFormattedAddress,EmployeeResponsibleName,SalesUnitParty,BillToPartyName,Item&$filter=BaseBusinessTransactionDocumentTypeCode eq '114' and BaseBusinessTransactionDocumentID eq '{{SalesOrderID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcustomerinvoicerequest",
								"CustomerInvoiceRequestCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "CashDiscountTerms,BuyerPartyName,BuyerPartyFormattedAddress,EmployeeResponsibleName,SalesUnitParty,BillToPartyName,Item"
								},
								{
									"key": "$filter",
									"value": "BaseBusinessTransactionDocumentTypeCode eq '114' and BaseBusinessTransactionDocumentID eq '{{SalesOrderID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Query customer invoice",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6abbca20-e715-4e12-83bf-4f59a566f089",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"CustomerInvoiceObjectID\", jsonResponse.d.results[0].ObjectID);",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"pm.test(\"Customer invoice \" + jsonResponse.d.results[0].ID + \" found\", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Customer invoice consistent\", function () { pm.expect(jsonResponse.d.results[0].ConsistencyStatusCode).to.eql(\"3\") });",
									"pm.test(\"Customer invoice status: Not released\", function () { pm.expect(jsonResponse.d.results[0].ReleaseStatusCode).to.eql(\"1\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcustomerinvoice/CustomerInvoiceQueryByElements2?NumberOfRows='20'&ItemBusinessTransactionDocumentReference_ID='{{SalesOrderID}}'&ItemBusinessTransactionDocumentReference_TypeCode='114'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcustomerinvoice",
								"CustomerInvoiceQueryByElements2"
							],
							"query": [
								{
									"key": "NumberOfRows",
									"value": "'20'"
								},
								{
									"key": "StartRow",
									"value": "'5'",
									"disabled": true
								},
								{
									"key": "ItemBusinessTransactionDocumentReference_ID",
									"value": "'{{SalesOrderID}}'"
								},
								{
									"key": "ItemBusinessTransactionDocumentReference_TypeCode",
									"value": "'114'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Release customer invoice",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
								"exec": [
									"// Validations",
									"var jsonResponse = pm.response.json();",
									"pm.test(\"Customer invoice \" + jsonResponse.d.results.ID + \" released\", function () { pm.expect(pm.response.code).to.be.oneOf([200,201,202]) });",
									"pm.test(\"Customer invoice release status: \" + jsonResponse.d.results.ReleaseStatusCodeText, function () { pm.expect(jsonResponse.d.results.ReleaseStatusCode).to.eql(\"3\") });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "67586dee-65df-4f49-ad4b-bf4ca694e3d7",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcustomerinvoice/Release?ObjectID='{{CustomerInvoiceObjectID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcustomerinvoice",
								"Release"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{CustomerInvoiceObjectID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get customer invoice (key access) and check result",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6abbca20-e715-4e12-83bf-4f59a566f089",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"pm.test(\"Customer invoice \" + jsonResponse.d.results.ID + \" released\", function () { pm.expect(pm.response.code).to.be.oneOf([200,201,202]) });",
									"pm.test(\"Customer invoice release status: \" + jsonResponse.d.results.ReleaseStatusCodeText, function () { pm.expect(jsonResponse.d.results.ReleaseStatusCode).to.eql(\"3\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcustomerinvoice/CustomerInvoiceCollection('{{CustomerInvoiceObjectID}}')?$format=json&$expand=BusinessTransactionDocumentReference,InvolvedParty/InvolvedPartyDisplayName,InvolvedParty/InvolvedPartyFormattedAddress,CashDiscountTerms,PriceAndTaxCalculation,Item/ItemPriceAndTaxCalculation,Item/ItemBusinessTransactionDocumentReference",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcustomerinvoice",
								"CustomerInvoiceCollection('{{CustomerInvoiceObjectID}}')"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "BusinessTransactionDocumentReference,InvolvedParty/InvolvedPartyDisplayName,InvolvedParty/InvolvedPartyFormattedAddress,CashDiscountTerms,PriceAndTaxCalculation,Item/ItemPriceAndTaxCalculation,Item/ItemBusinessTransactionDocumentReference"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Field Service and Repair",
			"item": [
				{
					"name": "Get entity sets and CSRF-token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5e62e94d-f718-4db5-86fa-22e27ebb5825",
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"pm.test(\"Cross site request forgery token: received\", function () { pm.response.to.have.status(200); pm.response.to.have.header(\"x-csrf-token\") });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4b5f4d9c-55db-4cb2-a6b6-ffc9e31c7d2b",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/tmservicerequest/",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"tmservicerequest",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create service request",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "6989eaeb-69b2-4ab5-8554-f80ddd478e2b",
								"exec": [
									"// Set subject",
									"var generatedSubject = pm.environment.get(\"ServiceRequestSubjectPrefix\") + \" \" + (new Date()).toISOString().substr(0,19);",
									"pm.globals.set(\"ServiceRequestSubject\", generatedSubject);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1941d684-4064-4e8e-92d0-bde47efc107f",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"ServiceRequestID\", jsonResponse.d.results.ID);",
									"pm.environment.set(\"ServiceRequestObjectID\", jsonResponse.d.results.ObjectID);",
									"pm.environment.set(\"ServiceRequestProcessorObjectID\", jsonResponse.d.results.Processor.ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Service request \" + jsonResponse.d.results.ID + \" created\", function () { pm.response.to.have.status(201) });",
									"pm.test(\"Service request status: \" + jsonResponse.d.results.ServiceRequestLifeCycleStatusCodeText, function () { pm.response.to.have.status(201) });",
									"",
									"//clean-up",
									"pm.globals.unset(\"ServiceRequestSubject\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"Name\": \"{{ServiceRequestSubject}}\",\n\t\"IncidentServiceIssueCategory\": [{\n\t\t\"ServiceIssueCategoryID\": \"{{ServiceRequestServiceCategory}}\"\n\t}],\n\t\"Buyer\": {\n\t\t\"PartyID\": \"{{ServiceRequestCustomerID}}\"\n\t},\n\t\"ServiceSupportTeam\": {\n\t\t\"PartyID\": \"{{ServiceRequestServiceUnit}}\"\n\t},\n\t\"ReferenceObject\": [{\n\t\t\"ProductID\": \"{{ServiceRequestRegisteredProduct}}\"\n\t}]\n}"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/tmservicerequest/ServiceRequestCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"tmservicerequest",
								"ServiceRequestCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get service request",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a08a8496-16bb-44e7-9f13-85b4c30f4462",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"ServiceRequestID\", jsonResponse.d.results.ID);",
									"pm.environment.set(\"ServiceRequestObjectID\", jsonResponse.d.results.ObjectID);",
									"pm.environment.set(\"ServiceRequestProcessorObjectID\", jsonResponse.d.results.Processor.ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Service request \" + jsonResponse.d.results.ID + \" retrieved\", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Service request status: \" + jsonResponse.d.results.ServiceRequestLifeCycleStatusCodeText, function () { pm.response.to.have.status(200) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/tmservicerequest/ServiceRequestCollection('{{ServiceRequestObjectID}}')?$format=json&$expand=Processor,Buyer,IncidentServiceIssueCategory,ReferenceObject,ServiceSupportTeam,BusinessTransactionDocumentReference",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"tmservicerequest",
								"ServiceRequestCollection('{{ServiceRequestObjectID}}')"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "Processor,Buyer,IncidentServiceIssueCategory,ReferenceObject,ServiceSupportTeam,BusinessTransactionDocumentReference"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update service request",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8170fc9e-b265-4dd8-afb7-82bb1d311332",
								"exec": [
									"// Validations",
									"pm.test(\"Patch successful\", function () { pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]) });",
									"",
									"// Clean-Up",
									"pm.environment.unset(\"ServiceRequestProcessorObjectID\")"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"ObjectID\": \"{{ServiceRequestProcessorObjectID}}\",\n\t\"ParentObjectID\": \"{{ServiceRequestObjectID}}\",\n\t\"PartyID\": \"{{ServiceRequestProcessor}}\"\n}"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/tmservicerequest/ProcessorCollection('{{ServiceRequestProcessorObjectID}}')",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"tmservicerequest",
								"ProcessorCollection('{{ServiceRequestProcessorObjectID}}')"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create empty service order",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "6989eaeb-69b2-4ab5-8554-f80ddd478e2b",
								"exec": [
									"// Set subject",
									"var generatedSubject = pm.environment.get(\"ServiceRequestSubjectPrefix\") + \"    \" + (new Date()).toISOString().substr(0,19);",
									"pm.globals.set(\"ServiceOrderSubject\", generatedSubject);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1941d684-4064-4e8e-92d0-bde47efc107f",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"ServiceOrderID\", jsonResponse.d.results.ID);",
									"pm.environment.set(\"ServiceOrderObjectID\", jsonResponse.d.results.ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Service order \" + jsonResponse.d.results.ID + \" created\", function () { pm.response.to.have.status(201) });",
									"pm.test(\"Service order consistency status: \" + jsonResponse.d.results.ConsistencyStatusCodeText, function () { pm.expect(jsonResponse.d.results.ConsistencyStatusCode).to.eql(\"2\") });",
									"pm.test(\"Service order status: \" + jsonResponse.d.results.ReleaseStatusCodeText, function () { pm.response.to.have.status(201) });",
									"",
									"//clean-up",
									"pm.globals.unset(\"ServiceOrderSubject\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"BuyerID\": \"x\"\n}"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/tmserviceorder/ServiceOrderCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"tmserviceorder",
								"ServiceOrderCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add reference with data provisioning",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "6989eaeb-69b2-4ab5-8554-f80ddd478e2b",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1941d684-4064-4e8e-92d0-bde47efc107f",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Reference to service request \" + pm.environment.get(\"ServiceRequestID\") + \" added to service order \" + jsonResponse.d.results.ID, function () { pm.response.to.have.status(200) });",
									"pm.test(\"Service order consistency status: \" + jsonResponse.d.results.ConsistencyStatusCodeText, function () { pm.expect(jsonResponse.d.results.ConsistencyStatusCode).to.eql(\"3\") });",
									"pm.test(\"Service order status: \" + jsonResponse.d.results.ReleaseStatusCodeText, function () { pm.response.to.have.status(200) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/tmserviceorder/AddReferenceWithDataProvision?ObjectID='{{ServiceOrderObjectID}}'&BusinessTransactionDocumentKey_BusinessTransactionDocumentID='{{ServiceRequestID}}'&BusinessTransactionDocumentKey_BusinessTransactionDocumentTypeCode='118'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"tmserviceorder",
								"AddReferenceWithDataProvision"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{ServiceOrderObjectID}}'"
								},
								{
									"key": "BusinessTransactionDocumentKey_BusinessTransactionDocumentID",
									"value": "'{{ServiceRequestID}}'"
								},
								{
									"key": "BusinessTransactionDocumentKey_BusinessTransactionDocumentTypeCode",
									"value": "'118'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get service order",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a08a8496-16bb-44e7-9f13-85b4c30f4462",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"ServiceOrderID\", jsonResponse.d.results.ID);",
									"pm.environment.set(\"ServiceOrderObjectID\", jsonResponse.d.results.ObjectID);",
									"pm.environment.set(\"ServiceOrderProcessorObjectID\", jsonResponse.d.results.Processor.ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Service order \" + jsonResponse.d.results.ID + \" created\", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Service order consistency status: \" + jsonResponse.d.results.ConsistencyStatusCodeText, function () { pm.expect(jsonResponse.d.results.ConsistencyStatusCode).to.eql(\"3\") });",
									"pm.test(\"Service order status: \" + jsonResponse.d.results.ReleaseStatusCodeText, function () { pm.expect(jsonResponse.d.results.ReleaseStatusCode).to.eql(\"1\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/tmserviceorder/ServiceOrderCollection('{{ServiceOrderObjectID}}')?$format=json&$expand=Processor,BusinessTransactionDocumentReference,Item,ServiceOrderPeriodTerms",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"tmserviceorder",
								"ServiceOrderCollection('{{ServiceOrderObjectID}}')"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "Processor,BusinessTransactionDocumentReference,Item,ServiceOrderPeriodTerms"
								},
								{
									"key": "$select",
									"value": "ID,Processor,BusinessTransactionDocumentReference,Item,ServiceOrderPeriodTerms",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update service order",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8170fc9e-b265-4dd8-afb7-82bb1d311332",
								"exec": [
									"// Validations",
									"pm.test(\"Patch successful\", function () { pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]) });",
									"// Clean-Up",
									"pm.environment.unset(\"ServiceRequestProcessorObjectID\")"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "5a6d1af0-1233-4c9c-bdd0-02315e59486e",
								"exec": [
									"// Set service order start date",
									"let moment = require('moment');",
									"let startDate = moment().add(3,'day').toISOString().substr(0,10) + \"T00:00:00Z\";",
									"pm.environment.set(\"ServiceOrderStartDateTime\", startDate);",
									"",
									"// Set External Reference of pattern KH-<UTC datetime>",
									"let todayDateTime = (new Date()).toISOString().substr(0,19);",
									"todayDateTime = todayDateTime.replace(\"-\",\"\").replace(\"-\",\"\").replace(\"T\",\"\").replace(\":\",\"\").replace(\":\",\"\");",
									"var generatedBuyerID = pm.environment.get(\"ExternalReferencePrefix\") + todayDateTime;",
									"//var generatedBuyerID = pm.environment.get(\"ExternalReferencePrefix\") + (new Date()).toISOString().substr(0,19);",
									"pm.environment.set(\"ServiceOrderExternalReference\", generatedBuyerID);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"BuyerID\": \"{{ServiceOrderExternalReference}}\",\n\t\"ServicePriorityCode\": \"2\",\n\t\"ServiceOrderPeriodTerms\": [{\n\t\t\"StartDateTime\": \"{{ServiceOrderStartDateTime}}\"\n\t}]\n}"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/tmserviceorder/ServiceOrderCollection('{{ServiceOrderObjectID}}')",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"tmserviceorder",
								"ServiceOrderCollection('{{ServiceOrderObjectID}}')"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add service order item",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8170fc9e-b265-4dd8-afb7-82bb1d311332",
								"exec": [
									"// Persist results",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"ServiceOrderItemObjectID\",jsonResponse.d.results.ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Item \" + jsonResponse.d.results.ID + \" for product \" + jsonResponse.d.results.ProductID + \" added to service order\", function () { pm.expect(pm.response.code).to.be.oneOf([201]) });",
									"pm.test(\"Item release status: \" + jsonResponse.d.results.ReleaseStatusCodeText, function () { pm.expect(jsonResponse.d.results.ReleaseStatusCode).to.eql(\"3\") });",
									"pm.test(\"Item execution release status: \" + jsonResponse.d.results.ExecutionReleaseStatusCodeText, function () { pm.expect(jsonResponse.d.results.ExecutionReleaseStatusCode).to.eql(\"3\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"ParentObjectID\": \"{{ServiceOrderObjectID}}\",\n\t\"ProductID\": \"{{ServiceOrderProductID}}\",\n\t\"ItemScheduleLine\": [{\n\t\t\"Quantity\": \"40\"\n\t}],\n\t\"ExecutionReleaseStatusCode\": \"3\"\n}"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/tmserviceorder/ItemCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"tmserviceorder",
								"ItemCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Release service order",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a08a8496-16bb-44e7-9f13-85b4c30f4462",
								"exec": [
									"// Validations",
									"var jsonResponse = pm.response.json();",
									"pm.test(\"Service order \" + jsonResponse.d.results.ID + \" released\", function () {pm.response.to.have.status(200) });",
									"pm.test(\"Consistency status: \" + jsonResponse.d.results.ConsistencyStatusCodeText, function () { pm.expect(jsonResponse.d.results.ConsistencyStatusCode).to.eql(\"3\") });",
									"pm.test(\"Release status: \" + jsonResponse.d.results.ReleaseStatusCodeText, function () { pm.expect(jsonResponse.d.results.ReleaseStatusCode).to.eql(\"3\") });",
									"pm.test(\"Lifecycle status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"2\") });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/tmserviceorder/Release?ObjectID='{{ServiceOrderObjectID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"tmserviceorder",
								"Release"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{ServiceOrderObjectID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Service Confirmation (SOAP 1.1)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a80ecad6-fabb-4d1f-ae16-604b4d2f6e81",
								"exec": [
									"let jsonResponse = xml2Json(responseBody);",
									"var serviceConfirmationID = jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:ServiceConfirmationBundleMaintainConfirmation_sync'].ServiceConfirmation.ID;",
									"",
									"// Validations",
									"pm.test(\"Service confirmation \" + serviceConfirmationID + \" created\", function () { pm.response.to.have.status(200) });",
									"",
									"// Persist results",
									"pm.environment.set(\"ServiceConfirmationID\", serviceConfirmationID);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "fd8ff393-6ef1-4706-9bf0-ec0433669c58",
								"exec": [
									"// Delay and let the system complete the async. process integrations",
									"setTimeout(function() {}, 3000); // wait 3 sec"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{CommunicationUserPW}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{CommunicationUser}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "text/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n\t<soapenv:Header/>\r\n\t<soapenv:Body>\r\n\t\t<glob:ServiceConfirmationBundleMaintainRequest_sync>\r\n\t\t\t<BasicMessageHeader/>\r\n\t\t\t<ServiceConfirmation>\r\n\t\t\t\t<CreateWithReferenceToServiceOrder>true</CreateWithReferenceToServiceOrder>\r\n\t\t\t\t<BaseServiceOrderID>{{ServiceOrderID}}</BaseServiceOrderID>\r\n\t\t\t</ServiceConfirmation>\r\n\t\t</glob:ServiceConfirmationBundleMaintainRequest_sync>\r\n\t</soapenv:Body>\r\n</soapenv:Envelope>\r\n\r\n"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/manageserviceconfirmationin_v1",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"bc",
								"srt",
								"scs",
								"sap",
								"manageserviceconfirmationin_v1"
							]
						},
						"description": "Create a service confirmation with reference to the service order."
					},
					"response": []
				},
				{
					"name": "Get service confirmation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a08a8496-16bb-44e7-9f13-85b4c30f4462",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"ServiceConfirmationItemObjectID\", jsonResponse.d.results[0].Item[0].ObjectID);",
									"pm.environment.set(\"ServiceConfirmationItemScheduleLineObjectID\", jsonResponse.d.results[0].Item[0].ItemScheduleLine[0].ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Service confirmation \" + jsonResponse.d.results[0].ID + \" found\", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Service confirmation item \" + jsonResponse.d.results[0].Item[0].ID + \" retrieved\", function () { pm.expect(jsonResponse.d.results[0].Item[0].ID).to.eql(\"10\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/tmserviceconfirmation/ServiceConfirmationCollection?$format=json&$expand=Item,Item/ItemScheduleLine&$select=ID,Item&$filter=ID eq '{{ServiceConfirmationID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"tmserviceconfirmation",
								"ServiceConfirmationCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "Item,Item/ItemScheduleLine"
								},
								{
									"key": "$select",
									"value": "ID,Item"
								},
								{
									"key": "$filter",
									"value": "ID eq '{{ServiceConfirmationID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update fullfilled quantity",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8170fc9e-b265-4dd8-afb7-82bb1d311332",
								"exec": [
									"// Validations",
									"pm.test(\"Patch successful\", function () { pm.expect(pm.response.code).to.be.oneOf([204]) });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ObjectID\": \"{{ServiceConfirmationItemScheduleLineObjectID}}\",\n\t\"ParentObjectID\": \"{{ServiceConfirmationItemObjectID}}\",\n    \"Quantity\": \"{{ServiceOrderQuantity}}\",\n    \"unitCode\": \"HUR\"\n}"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/tmserviceconfirmation/ItemScheduleLineCollection('{{ServiceConfirmationItemScheduleLineObjectID}}')",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"tmserviceconfirmation",
								"ItemScheduleLineCollection('{{ServiceConfirmationItemScheduleLineObjectID}}')"
							]
						}
					},
					"response": []
				},
				{
					"name": "Confirm execution of service confirmation item",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a08a8496-16bb-44e7-9f13-85b4c30f4462",
								"exec": [
									"// Validations",
									"pm.test(\"Exection confirmed for service confirmation \" + pm.environment.get(\"ServiceConfirmationID\"), function () { pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]) });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/tmserviceconfirmation/ItemConfirmExecution?ObjectID='{{ServiceConfirmationItemObjectID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"tmserviceconfirmation",
								"ItemConfirmExecution"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{ServiceConfirmationItemObjectID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Complete service request",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a08a8496-16bb-44e7-9f13-85b4c30f4462",
								"exec": [
									"// Validations",
									"pm.test(\"Service request \" + pm.environment.get(\"ServiceRequestID\") + \" set to complete\", function () { pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]) });",
									"",
									"// clean-up",
									"pm.environment.unset(\"ServiceConfirmationItemScheduleLineObjectID\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "e0c28e8e-da81-4884-b061-86d6027eae01",
								"exec": [
									"// Delay and let the system complete the async. process integrations",
									"setTimeout(function() {}, 3000); // wait 3 sec"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/tmservicerequest/ServiceRequestComplete?ObjectID='{{ServiceRequestObjectID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"tmservicerequest",
								"ServiceRequestComplete"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{ServiceRequestObjectID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get customer invoice request",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c38f9015-76c9-4c82-98d1-4b7251b30302",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"pm.environment.set(\"CustomerInvoiceRequestObjectID\", jsonResponse.d.results[0].ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Successful GET request\", function () { pm.expect(pm.response.code).to.be.oneOf([200,201,202]); });",
									"pm.test(\"Customer invoice request consistent\", function () { pm.expect(jsonResponse.d.results[0].ConsistencyStatusCode).to.eql(\"3\") });",
									"pm.test(\"Invoice request item 1: Not Invoiced\", function () { pm.expect(jsonResponse.d.results[0].Item[0].InvoicingStatusCode).to.eql(\"1\") });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "546de23c-d88a-4193-ac90-d23d098e2b99",
								"exec": [
									"// Delay release of customer invoice request and let the system complete the async. integration between sales order and customer invoicing",
									"setTimeout(function() {}, 6000); // wait 6 sec"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcustomerinvoicerequest/CustomerInvoiceRequestCollection?$format=json&$expand=Item&$filter=BaseBusinessTransactionDocumentTypeCode eq '115' and BaseBusinessTransactionDocumentID eq '{{ServiceConfirmationID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcustomerinvoicerequest",
								"CustomerInvoiceRequestCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "Item"
								},
								{
									"key": "$filter",
									"value": "BaseBusinessTransactionDocumentTypeCode eq '115' and BaseBusinessTransactionDocumentID eq '{{ServiceConfirmationID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Release customer invoice request",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
								"exec": [
									"// Validations",
									"var jsonResponse = pm.response.json();",
									"pm.test(\"Successful POST request\", function () { pm.expect(pm.response.code).to.be.oneOf([200,201,202]); });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "0d693a90-cc3f-4ca6-af65-cec87c532376",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcustomerinvoicerequest/CreateCustomerInvoices?ObjectID='{{CustomerInvoiceRequestObjectID}}'&AutomaticReleaseAllowedIndicator=true",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcustomerinvoicerequest",
								"CreateCustomerInvoices"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{CustomerInvoiceRequestObjectID}}'"
								},
								{
									"key": "AutomaticReleaseAllowedIndicator",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get customer invoice request and check result",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c38f9015-76c9-4c82-98d1-4b7251b30302",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"pm.environment.set(\"CustomerInvoiceRequestObjectID\", jsonResponse.d.results[0].ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Successful GET request\", function () { pm.expect(pm.response.code).to.be.oneOf([200,201,202]); });",
									"pm.test(\"Invoice request item 1: Invoiced\", function () { pm.expect(jsonResponse.d.results[0].Item[0].InvoicingStatusCode).to.eql(\"3\") });",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcustomerinvoicerequest/CustomerInvoiceRequestCollection?$format=json&$expand=Item&$filter=BaseBusinessTransactionDocumentTypeCode eq '115' and BaseBusinessTransactionDocumentID eq '{{ServiceConfirmationID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcustomerinvoicerequest",
								"CustomerInvoiceRequestCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "Item"
								},
								{
									"key": "$filter",
									"value": "BaseBusinessTransactionDocumentTypeCode eq '115' and BaseBusinessTransactionDocumentID eq '{{ServiceConfirmationID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Query customer invoice",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6abbca20-e715-4e12-83bf-4f59a566f089",
								"exec": [
									"",
									"var jsonResponse = pm.response.json();",
									"var customerInvoiceID = jsonResponse.d.results[0].ID",
									"",
									"pm.environment.set(\"CustomerInvoiceObjectID\", jsonResponse.d.results[0].ObjectID);",
									"pm.environment.set(\"CustomerInvoiceID\", customerInvoiceID);",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"pm.test(\"Customer invoice found: \" + customerInvoiceID, function () { pm.response.to.have.status(200); });",
									"pm.test(\"Customer invoice consistent\", function () { pm.expect(jsonResponse.d.results[0].ConsistencyStatusCode).to.eql(\"3\") });",
									"pm.test(\"Customer invoice status: Not released\", function () { pm.expect(jsonResponse.d.results[0].ReleaseStatusCode).to.eql(\"1\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcustomerinvoice/CustomerInvoiceQueryByElements2?NumberOfRows='20'&ItemBusinessTransactionDocumentReference_ID='{{ServiceConfirmationID}}'&ItemBusinessTransactionDocumentReference_TypeCode='115'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcustomerinvoice",
								"CustomerInvoiceQueryByElements2"
							],
							"query": [
								{
									"key": "NumberOfRows",
									"value": "'20'"
								},
								{
									"key": "StartRow",
									"value": "'5'",
									"disabled": true
								},
								{
									"key": "ItemBusinessTransactionDocumentReference_ID",
									"value": "'{{ServiceConfirmationID}}'"
								},
								{
									"key": "ItemBusinessTransactionDocumentReference_TypeCode",
									"value": "'115'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Release customer invoice",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
								"exec": [
									"// Validations",
									"var jsonResponse = pm.response.json();",
									"pm.test(\"Successful POST request\", function () { pm.expect(pm.response.code).to.be.oneOf([200,201,202]) });",
									"pm.test(\"Customer invoice \" + pm.environment.get(\"CustomerInvoiceID\") + \" released\", function () { pm.expect(jsonResponse.d.results.ReleaseStatusCode).to.eql(\"3\") });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "67586dee-65df-4f49-ad4b-bf4ca694e3d7",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcustomerinvoice/Release?ObjectID='{{CustomerInvoiceObjectID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcustomerinvoice",
								"Release"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{CustomerInvoiceObjectID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get customer invoice, check result",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6abbca20-e715-4e12-83bf-4f59a566f089",
								"exec": [
									"",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"pm.test(\"Customer invoice found\", function () { pm.response.to.have.status(200); });",
									"pm.test(\"Customer invoice status: Released\", function () { pm.expect(jsonResponse.d.results.ReleaseStatusCode).to.eql(\"3\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcustomerinvoice/CustomerInvoiceCollection('{{CustomerInvoiceObjectID}}')?$format=json",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcustomerinvoice",
								"CustomerInvoiceCollection('{{CustomerInvoiceObjectID}}')"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "Item",
									"disabled": true
								},
								{
									"key": "$filter",
									"value": "ObjectID eq {{CustomerInvoiceObjectID}}",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "2e7e2776-fb65-4b82-95b1-e81cd7df7d52",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "350bcd7e-e258-4161-ad5c-35bb1254d8e2",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Procure to Stock",
			"item": [
				{
					"name": "Get entity sets and CSRF-token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5e62e94d-f718-4db5-86fa-22e27ebb5825",
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"pm.test(\"Cross site request forgery token: received\", function () { pm.response.to.have.status(200); pm.response.to.have.header(\"x-csrf-token\") });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4b5f4d9c-55db-4cb2-a6b6-ffc9e31c7d2b",
								"exec": [
									"//Initialize dynamic environment variables",
									"pm.environment.set(\"x-csrf-token\", \"\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khpurchaseorder/",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khpurchaseorder",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create purchase order (nested create)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a0b9bbf9-6725-4134-89e9-f2347dde8747",
								"exec": [
									"",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"PurchaseOrderObjectID\", jsonResponse.d.results.ObjectID);",
									"pm.environment.set(\"PurchaseOrderID\", jsonResponse.d.results.ID);",
									"",
									"// Validations",
									"pm.test(\"Purchase order \" + jsonResponse.d.results.ID + \" created\", function () { pm.response.to.have.status(201) });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8c48396a-8f50-4024-8dfa-a3c7594fd8a6",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"IncotermsCode\": \"EXW\",\n\t\"IncotermsLocationName\": \"Kokomo\",\n\t\"CurrencyCode\": \"USD\",\n\t\"Supplier\":\n\t\t{\t\n\t\t\t\"PartyID\": \"{{SupplierID}}\"\n\t\t}, \t\n\t\"PurchasingUnit\":\n\t\t{\n\t\t\t\"PartyID\": \"{{PurchasingUnitID}}\"\n\t\t},\n\t\"PaymentTerms\":\n\t\t{\n\t\t\t\"PaymentTermsCode\": \"0007\"\n\t\t},\n\t\"Item\":\n\t\t[\n\t\t\t{\n\t\t\t\t\"ProductID\": \"{{MaterialID}}\",\n\t\t\t\t\"DirectMaterialIndicator\": false,\n\t\t\t\t\"ThirdPartyDealIndicator\": false,\n\t\t\t\t\"Quantity\": \"{{WholesalesItemQuantity1}}\",\n\t\t\t\t\"QuantityUnitCode\": \"EA\",\n\t\t\t\t\"ListUnitPriceAmount\": \"{{WholesalesItemPrice1}}\",\n\t\t\t\t\"EmployeeTimeConfirmationRequiredIndicator\": false,\n\t\t\t\t\"GoodsAndServiceReceiptRequirementCode\": \"01\",\n\t\t\t\t\"EvaluatedReceiptSettlementIndicator\": false,\n\t\t\t\t\"InvoiceRequirementCode\": \"01\",\n\t\t\t\t\"AcknowledgmentRequirementCode\": \"02\",\n\t\t\t\t\"ItemShipToLocation\": \n\t\t\t\t\t{\n\t\t\t\t\t\t\"LocationID\": \"{{LocationID}}\"\n\t\t\t\t\t}\n\t\t\t}\n\t\t]\n}    \t"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khpurchaseorder/PurchaseOrderCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khpurchaseorder",
								"PurchaseOrderCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get purchase order employee responsible, buyer and bill-to party",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c38f9015-76c9-4c82-98d1-4b7251b30302",
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Purchase order \" + jsonResponse.d.results[0].ID + \" retrieved\", function () { pm.response.to.have.status(200) });",
									"",
									"// Set environment",
									"pm.environment.set(\"PurchaseOrderObjectID\", jsonResponse.d.results[0].ObjectID);",
									"pm.environment.set(\"PurchaseOrderID\", jsonResponse.d.results[0].ID);",
									"pm.environment.set(\"EmployeeResponsibleObjectID\", jsonResponse.d.results[0].EmployeeResponsible.ObjectID);",
									"pm.environment.set(\"BillToPartyObjectID\", jsonResponse.d.results[0].BillToParty.ObjectID);",
									"pm.environment.set(\"BuyerPartyObjectID\", jsonResponse.d.results[0].BuyerParty.ObjectID);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khpurchaseorder/PurchaseOrderCollection?$format=json&$expand=EmployeeResponsible/EmployeeResponsibleName,BillToParty/BillToPartyName,BuyerParty/BuyerPartyName&$filter=ID eq '{{PurchaseOrderID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khpurchaseorder",
								"PurchaseOrderCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "EmployeeResponsible/EmployeeResponsibleName,BillToParty/BillToPartyName,BuyerParty/BuyerPartyName"
								},
								{
									"key": "$filter",
									"value": "ID eq '{{PurchaseOrderID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update purchase order buyer party",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a0b9bbf9-6725-4134-89e9-f2347dde8747",
								"exec": [
									"// Validations",
									"pm.test(\"Patch successful\", function () { pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]) });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8c48396a-8f50-4024-8dfa-a3c7594fd8a6",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"ObjectID\": \"{{BuyerPartyObjectID}}\",\n\t\"ParentObjectID\": \"{{PurchaseOrderObjectID}}\",\n\t\"PartyID\": \"{{CompanyID}}\"\n}    \t"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khpurchaseorder/BuyerPartyCollection('{{BuyerPartyObjectID}}')",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khpurchaseorder",
								"BuyerPartyCollection('{{BuyerPartyObjectID}}')"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update purchase order bill-to party",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a0b9bbf9-6725-4134-89e9-f2347dde8747",
								"exec": [
									"// Validations",
									"pm.test(\"Patch successful\", function () { pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]) });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8c48396a-8f50-4024-8dfa-a3c7594fd8a6",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"ObjectID\": \"{{BillToPartyObjectID}}\",\n\t\"ParentObjectID\": \"{{PurchaseOrderObjectID}}\",\n\t\"PartyID\": \"{{CompanyID}}\"\n}    \t"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khpurchaseorder/BillToPartyCollection('{{BillToPartyObjectID}}')",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khpurchaseorder",
								"BillToPartyCollection('{{BillToPartyObjectID}}')"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update purchase order employee responsible",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a0b9bbf9-6725-4134-89e9-f2347dde8747",
								"exec": [
									"// Validations",
									"pm.test(\"Patch successful\", function () { pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]) });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8c48396a-8f50-4024-8dfa-a3c7594fd8a6",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"ObjectID\": \"{{EmployeeResponsibleObjectID}}\",\n\t\"ParentObjectID\": \"{{PurchaseOrderObjectID}}\",\n\t\"PartyID\": \"{{EmployeeID}}\"\n}    \t"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khpurchaseorder/EmployeeResponsibleCollection('{{EmployeeResponsibleObjectID}}')",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khpurchaseorder",
								"EmployeeResponsibleCollection('{{EmployeeResponsibleObjectID}}')"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get purchase order and expand",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c38f9015-76c9-4c82-98d1-4b7251b30302",
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"PurchaseOrderObjectID\", jsonResponse.d.results[0].ObjectID);",
									"pm.environment.set(\"PurchaseOrderID\", jsonResponse.d.results[0].ID);",
									"pm.environment.set(\"PurchaseOrderUUID\", jsonResponse.d.results[0].UUID);",
									"pm.environment.set(\"PurchaseOrderItemID\", jsonResponse.d.results[0].Item[0].ID);",
									"pm.environment.set(\"PurchaseOrderItemUUID\", jsonResponse.d.results[0].Item[0].UUID);",
									"//pm.environment.set(\"Item1-ObjectID\", jsonResponse.d.results[0].Item[0].ObjectID);",
									"//pm.environment.set(\"Item2-ObjectID\", jsonResponse.d.results[0].Item[1].ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Purchase order \" + jsonResponse.d.results[0].ID + \" found\", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Purchase order in preparation\", function () { pm.expect(jsonResponse.d.results[0].LifeCycleStatusCode).to.eql(\"1\") });",
									"pm.test(\"Purchase order consistent\", function () { pm.expect(jsonResponse.d.results[0].ConsistencyStatusCode).to.eql(\"3\") });",
									"pm.test(\"Item 1 created\", function () { pm.expect(jsonResponse.d.results[0].Item[0].ID).to.eql(\"1\") });",
									"pm.test(\"Status Item 1 in preparation\", function () { pm.expect(jsonResponse.d.results[0].Item[0].LifeCycleStatusCode).to.eql(\"1\") });",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khpurchaseorder/PurchaseOrderCollection?$format=json&$expand=Supplier/SupplierName,Supplier/SupplierFormattedAddress,Supplier/SupplierPostalAddress,PurchasingUnit/PurchasingUnitName,EmployeeResponsible/EmployeeResponsibleName,BillToParty/BillToPartyName,BuyerParty/BuyerPartyName,PaymentTerms,Notes,AttachmentFolder,ApproverParty/ApproverPartyName,Item/ItemShipToLocation/DeliveryAddress/DeliveryAddressName,Item/ItemShipToLocation/DeliveryAddress/DeliveryPostalAddress&$filter=ID eq '{{PurchaseOrderID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khpurchaseorder",
								"PurchaseOrderCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "Supplier/SupplierName,Supplier/SupplierFormattedAddress,Supplier/SupplierPostalAddress,PurchasingUnit/PurchasingUnitName,EmployeeResponsible/EmployeeResponsibleName,BillToParty/BillToPartyName,BuyerParty/BuyerPartyName,PaymentTerms,Notes,AttachmentFolder,ApproverParty/ApproverPartyName,Item/ItemShipToLocation/DeliveryAddress/DeliveryAddressName,Item/ItemShipToLocation/DeliveryAddress/DeliveryPostalAddress"
								},
								{
									"key": "$filter",
									"value": "ID eq '{{PurchaseOrderID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Submit purchase order",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
								"exec": [
									"// Validations",
									"pm.test(\"Purchase order submitted\", function () { pm.response.to.have.status(200) });",
									"",
									"var jsonResponse = pm.response.json();",
									"pm.test(\"Purchase order status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"5\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khpurchaseorder/SubmitForOrder?ObjectID='{{PurchaseOrderObjectID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khpurchaseorder",
								"SubmitForOrder"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{PurchaseOrderObjectID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Confirm purchase order by supplier",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
								"exec": [
									"// Validations",
									"pm.test(\"Purchase order confirmed by supplier\", function () { pm.response.to.have.status(200) });",
									"",
									"var jsonResponse = pm.response.json();",
									"pm.test(\"Purchase order status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"7\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khpurchaseorder/ConfirmBySupplier?ObjectID='{{PurchaseOrderObjectID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khpurchaseorder",
								"ConfirmBySupplier"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{PurchaseOrderObjectID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Query inbound delivery request",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6abbca20-e715-4e12-83bf-4f59a566f089",
								"exec": [
									"",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"InboundDeliveryRequestObjectID\", jsonResponse.d.results[0].ObjectID);",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"pm.test(\"Inbound delivery request for purchase order \" + pm.environment.get(\"PurchaseOrderID\") + \" found\", function () { pm.response.to.have.status(200); });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "a0bfe897-ba8f-4957-98a0-c63800e15b73",
								"exec": [
									"// Delay and let the system complete the async. process integrations",
									"setTimeout(function() {}, 6000); // wait 6 sec"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khinbounddeliveryrequest/InboundDeliveryRequestQueryByElements?NumberOfRows='20'&PurchaseOrderID='{{PurchaseOrderID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khinbounddeliveryrequest",
								"InboundDeliveryRequestQueryByElements"
							],
							"query": [
								{
									"key": "NumberOfRows",
									"value": "'20'"
								},
								{
									"key": "StartRow",
									"value": "'5'",
									"disabled": true
								},
								{
									"key": "PurchaseOrderID",
									"value": "'{{PurchaseOrderID}}'"
								},
								{
									"key": "ItemBusinessTransactionDocumentReference_TypeCode",
									"value": "'114'",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get inbound delivery request and expand (key access)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6abbca20-e715-4e12-83bf-4f59a566f089",
								"exec": [
									"",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"pm.test(\"Inbound delivery request returned\", function () { pm.response.to.have.status(200); });",
									"",
									"// Set environment parameter ",
									"pm.environment.set(\"InboundDeliveryRequestObjectID\", jsonResponse.d.results.ObjectID);",
									"pm.environment.set(\"InboundDeliveryRequestID\", jsonResponse.d.results.BaseBusinessTransactionDocumentID);",
									"pm.environment.set(\"InboundDeliveryRequestUUID\", jsonResponse.d.results.UUID);",
									"pm.environment.set(\"InboundDeliveryRequestItemID\", \"10\");",
									"pm.environment.set(\"InboundDeliveryRequestItemUUID\", jsonResponse.d.results.Item[0].UUID);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khinbounddeliveryrequest/InboundDeliveryRequestCollection('{{InboundDeliveryRequestObjectID}}')?$format=json&$expand=Item/ConfirmationItem/ConfirmationItemQuantity",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khinbounddeliveryrequest",
								"InboundDeliveryRequestCollection('{{InboundDeliveryRequestObjectID}}')"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "Item/ConfirmationItem/ConfirmationItemQuantity"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create inbound delivery notification",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a0b9bbf9-6725-4134-89e9-f2347dde8747",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"InboundDeliveryNotificationObjectID\", jsonResponse.d.results.ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Inbound delivery notification status: \" + jsonResponse.d.results.ReleaseStatusCodeText, function () { pm.response.to.have.status(201) });",
									"pm.test(\"Inbound delivery notification consistent\", function () { pm.expect(jsonResponse.d.results.ConsistencyStatusCode).to.eql(\"3\") });",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8c48396a-8f50-4024-8dfa-a3c7594fd8a6",
								"exec": [
									"// Set inbound delivery notification ID of pattern R-IDN-<PurchaseOrderID-ItemID>-DateTime",
									"let todayDateTime = (new Date()).toISOString().substr(0,19);",
									"todayDateTime = todayDateTime.replace(\"-\",\"\").replace(\"-\",\"\").replace(\"T\",\"\").replace(\":\",\"\").replace(\":\",\"\");",
									"let generatedIDNID = pm.environment.get(\"ExternalReferencePrefix\") + \"IDN-\" + pm.environment.get(\"PurchaseOrderID\") + \"-\" + pm.environment.get(\"PurchaseOrderItemID\") + \"-\" + todayDateTime;",
									"//let generatedIDNID = pm.environment.get(\"ExternalReferencePrefix\") + \"IDN-\" + pm.environment.get(\"PurchaseOrderID\") + \"-\" + pm.environment.get(\"PurchaseOrderItemID\") + \"-\" + (new Date()).toISOString().substr(0,19);",
									"pm.environment.set(\"InboundDeliveryNotificationID\", generatedIDNID);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"ID\": \"{{InboundDeliveryNotificationID}}\",\n\t\"ProcessingTypeCode\": \"SD\",\n\t\"Item\": \n\t\t[\n\t\t\t{\n\t\t\t\t\"TypeCode\": \"14\",\n\t\t\t\t\"ProductID\": \"{{MaterialID}}\",\n\t\t\t\t\"ItemQuantity\": \n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"Quantity\": \"{{WholesalesItemQuantity1}}\",\n\t\t\t\t\t\t\t\"UnitCode\": \"EA\",\n\t\t\t\t\t\t\t\"QuantityRoleCode\": \"18\",\n\t\t\t\t\t\t\t\"QuantityTypeCode\": \"EA\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\"ItemInboundDeliveryRequestReference\": \n\t\t\t\t\t{\n                \t\t\"ID\": \"{{InboundDeliveryRequestID}}\",\n                        \"ItemID\": \"{{InboundDeliveryRequestItemID}}\",\n                        \"ItemTypeCode\": \"14\",\n                        \"ItemUUID\": \"{{InboundDeliveryRequestItemUUID}}\",\n                        \"TypeCode\": \"59\",\n                        \"UUID\": \"{{InboundDeliveryRequestUUID}}\",\n                        \"RelationshipRoleCode\": \"1\"\n\t\t\t\t\t},\n\t\t\t\t\"ItemPurchaseOrderReference\": \n\t\t\t\t\t{\n\t\t\t\t\t\t\"ID\": \"{{PurchaseOrderID}}\",\n\t\t\t\t\t\t\"ItemID\": \"1\",\n\t\t\t\t\t\t\"ItemTypeCode\": \"18\",\n\t\t\t\t\t\t\"ItemUUID\": \"{{PurchaseOrderItemUUID}}\",\n\t\t\t\t\t\t\"TypeCode\": \"001\",\n\t\t\t\t\t\t\"UUID\": \"{{PurchaseOrderUUID}}\",\n\t\t\t\t\t\t\"RelationshipRoleCode\": \"1\"\n\t\t\t\t\t},\n\t\t\t\t\"ItemSellerParty\": \n\t\t\t\t\t{\n\t\t\t\t\t\t\"PartyID\": \"{{SupplierID}}\"\n\t\t\t\t\t},\n\t\t\t\t\"ItemBuyerParty\": \n\t\t\t\t\t{\n\t\t\t\t\t\t\"PartyID\": \"{{CompanyID}}\"\n\t\t\t\t\t}\n\t\t\t}\n\t\t]\n}    \t"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khinbounddelivery/InboundDeliveryCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khinbounddelivery",
								"InboundDeliveryCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get inbound delivery notification",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c38f9015-76c9-4c82-98d1-4b7251b30302",
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Inbound delivery notification retrieved: \" + jsonResponse.d.results[0].ID, function () { pm.response.to.have.status(200) });",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khinbounddelivery/InboundDeliveryCollection?$format=json&$expand=Item,Item/ItemQuantity,Item/ItemInboundDeliveryRequestReference,Item/ItemPurchaseOrderReference,ShipToLocation,SenderParty,ShipToParty,Item/ItemSellerParty,Item/ItemBuyerParty&$filter=ID eq '{{InboundDeliveryNotificationID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khinbounddelivery",
								"InboundDeliveryCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "Item,Item/ItemQuantity,Item/ItemInboundDeliveryRequestReference,Item/ItemPurchaseOrderReference,ShipToLocation,SenderParty,ShipToParty,Item/ItemSellerParty,Item/ItemBuyerParty"
								},
								{
									"key": "$filter",
									"value": "ID eq '{{InboundDeliveryNotificationID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Post goods receipt",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
								"exec": [
									"// Validations",
									"var jsonResponse = pm.response.json();",
									"pm.test(\"Goods receipt posted\", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Inbound delivery notification released\", function () { pm.expect(jsonResponse.d.results.ReleaseStatusCode).to.eql(\"3\") });",
									"pm.test(\"Inbound delivery notification consistent\", function () { pm.expect(jsonResponse.d.results.ConsistencyStatusCode).to.eql(\"3\") });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8a3f7470-2b39-44aa-8f5f-4ef0f66df2cb",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khinbounddelivery/PostGoodsReceipt?ObjectID='{{InboundDeliveryNotificationObjectID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khinbounddelivery",
								"PostGoodsReceipt"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{InboundDeliveryNotificationObjectID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Query confirmed inbound delivery",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6abbca20-e715-4e12-83bf-4f59a566f089",
								"exec": [
									"",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"pm.environment.set(\"ConfirmedInboundDeliveryObjectID\", jsonResponse.d.results[0].ObjectID);",
									"pm.environment.set(\"ConfirmedInboundDeliveryID\", jsonResponse.d.results[0].ID);",
									"",
									"// Validations",
									"pm.test(\"Confirmed inbound delivery \" + jsonResponse.d.results[0].ID + \" found\", function () { pm.response.to.have.status(200) });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4089e172-5058-427e-bfb0-48b581a30fa8",
								"exec": [
									"// Delay and let the system complete the async. process integrations",
									"setTimeout(function() {}, 3000); // wait 3 sec"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khconfirmedinbounddelivery/QueryByElements?NumberOfRows='20'&InboundDeliveryID='{{InboundDeliveryNotificationID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khconfirmedinbounddelivery",
								"QueryByElements"
							],
							"query": [
								{
									"key": "NumberOfRows",
									"value": "'20'"
								},
								{
									"key": "StartRow",
									"value": "'5'",
									"disabled": true
								},
								{
									"key": "InboundDeliveryID",
									"value": "'{{InboundDeliveryNotificationID}}'"
								},
								{
									"key": "ItemBusinessTransactionDocumentReference_TypeCode",
									"value": "'114'",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get confirmed inbound delivery (key access)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6abbca20-e715-4e12-83bf-4f59a566f089",
								"exec": [
									"",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"pm.test(\"Confirmed inbound delivery \" + jsonResponse.d.results.ID + \" returned\", function () { pm.response.to.have.status(200) });",
									"//pm.test(\"Delivery status: \" + jsonResponse.d.results.DeliveryProcessingStatusCodeText, function () { pm.response.to.have.status(200) });",
									"//pm.test(\"Release status: \" + jsonResponse.d.results.ReleaseStatusCodeText, function () { pm.response.to.have.status(200) });",
									"//pm.test(\"Consistency status: \" + jsonResponse.d.results.ConsistencyStatusCodeText, function () { pm.expect(jsonResponse.d.results.ConsistencyStatusCode).to.eql(\"3\") });",
									"pm.test(\"Delivery status: Finished\", function () { pm.expect(jsonResponse.d.results.DeliveryProcessingStatusCode).to.eql(\"3\") });",
									"pm.test(\"Release status: Released\", function () { pm.expect(jsonResponse.d.results.ReleaseStatusCode).to.eql(\"3\") });",
									"pm.test(\"Consistency status: Consistent\", function () { pm.expect(jsonResponse.d.results.ConsistencyStatusCode).to.eql(\"3\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khconfirmedinbounddelivery/ConfirmedInboundDeliveryCollection('{{ConfirmedInboundDeliveryObjectID}}')?$format=json&$expand=InboundDeliveryNotification,SenderParty,ShipToParty,ShipToLocation,Date,ArrivalPeriod,Item/DeliveryQuantity,Item/PurchaseOrderReference",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khconfirmedinbounddelivery",
								"ConfirmedInboundDeliveryCollection('{{ConfirmedInboundDeliveryObjectID}}')"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "InboundDeliveryNotification,SenderParty,ShipToParty,ShipToLocation,Date,ArrivalPeriod,Item/DeliveryQuantity,Item/PurchaseOrderReference"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create supplier invoice",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a0b9bbf9-6725-4134-89e9-f2347dde8747",
								"exec": [
									"",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"SupplierInvoiceObjectID\", jsonResponse.d.results.ObjectID);",
									"pm.environment.set(\"SupplierInvoiceID\", jsonResponse.d.results.ID);",
									"",
									"// Validations",
									"pm.test(\"Supplier Invoice \" + jsonResponse.d.results.ID + \" created\", function () { pm.response.to.have.status(201) });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8c48396a-8f50-4024-8dfa-a3c7594fd8a6",
								"exec": [
									"// Delay and let the system complete the async. process integrations",
									"setTimeout(function() {}, 3000); // wait 3 sec",
									"",
									"// Set Supplier invoice external document ID of pattern R-SIV-<PurchaseOrderID-ItemID>",
									"let todayDateTime = (new Date()).toISOString().substr(0,19);",
									"todayDateTime = todayDateTime.replace(\"-\",\"\").replace(\"-\",\"\").replace(\"T\",\"\").replace(\":\",\"\").replace(\":\",\"\");",
									"let externalDocID = pm.environment.get(\"ExternalReferencePrefix\") + \"SIV-\" + pm.environment.get(\"PurchaseOrderID\") + \"-\" + todayDateTime;",
									"//let externalDocID = pm.environment.get(\"ExternalReferencePrefix\") + \"SIV-\" + pm.environment.get(\"PurchaseOrderID\") + \"-\" + (new Date()).toISOString().substr(0,19);",
									"pm.environment.set(\"SupplierInvoiceExternalDocumentID\", externalDocID);",
									"",
									"// Set Supplier invoice description",
									"let description = \"Invoice for Purchase Order \" + pm.environment.get(\"PurchaseOrderID\");",
									"pm.environment.set(\"SupplierInvoiceDescription\", description);",
									"",
									"// Get today as timestamp and set supplier invoice dates",
									"let today = (new Date()).toISOString().substr(0,19);",
									"pm.environment.set(\"InvoiceDate\", today);",
									"//pm.environment.set(\"InvoiceReceiptDate\", today);",
									"//pm.environment.set(\"InvoiceTransactionDate\", today);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"TypeCode\": \"004\",\n\t\"DataOriginTypeCode\": \"1\",\n\t\"ItemsGrossAmountIndicator\": true,\n\t\"InvoiceDescription\": \"{{SupplierInvoiceDescription}}\",\n\t\"InvoiceDate\": \"{{InvoiceDate}}\",\n\t\"ExternalReference\": \n\t\t{\n\t\t\t\"BusinessTransactionDocumentRelationshipRoleCode\": \"7\",\n\t\t\t\"ID\": \"{{SupplierInvoiceExternalDocumentID}}\",\n\t\t\t\"TypeCode\": \"28\"\n\t\t},\n\t\"SellerParty\":\n\t\t{\t\n\t\t\t\"PartyID\": \"{{SupplierID}}\"\n\t\t}, \t\n\t\"Item\": \n\t\t[\n\t\t\t{\n\t\t\t\t\"TypeCode\": \"002\",\n\t\t\t\t\"ProductID\": \"{{MaterialID}}\",\n\t\t\t\t\"ProductTypeCode\": \"1\",\n\t\t\t\t\"Quantity\": \"{{WholesalesItemQuantity1}}\",\n\t\t\t\t\"QuantityUnitCode\": \"EA\",\n\t\t\t\t\"GrossUnitPriceAmount\": \"{{WholesalesItemPrice1}}\",\n\t\t\t\t\"GrossUnitPriceBaseQuantity\": \"1\",\n\t\t\t\t\"ItemPurchaseOrderReference\": \n\t\t\t\t\t{\n\t\t\t\t\t\t\"ID\": \"{{PurchaseOrderID}}\",\n\t\t\t\t\t\t\"ItemID\": \"{{PurchaseOrderItemID}}\"\n\t\t\t\t\t}\n            }\n        ]\n}    \t"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khsupplierinvoice/SupplierInvoiceCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khsupplierinvoice",
								"SupplierInvoiceCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Calculate supplier invoice total gross amount",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
								"exec": [
									"// Validations",
									"pm.test(\"Supplier invoice total gross amount updated\", function () { pm.response.to.have.status(200) });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khsupplierinvoice/CalculateGrossAmount?ObjectID='{{SupplierInvoiceObjectID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khsupplierinvoice",
								"CalculateGrossAmount"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{SupplierInvoiceObjectID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Calculate supplier invoice total tax amount",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
								"exec": [
									"// Validations",
									"pm.test(\"Supplier invoice total tax amount updated\", function () { pm.response.to.have.status(200) });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khsupplierinvoice/CalculateTaxAmount?ObjectID='{{SupplierInvoiceObjectID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khsupplierinvoice",
								"CalculateTaxAmount"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{SupplierInvoiceObjectID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get supplier invoice exceptions (key access)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c38f9015-76c9-4c82-98d1-4b7251b30302",
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"var jsonResponse = pm.response.json();",
									"",
									"// Get invoice exception \"XMIS - Missing Receipt or Return Document\"",
									"// Get open items and create bank statement lines",
									"_.each(jsonResponse.d.results.SupplierInvoiceExceptionReference, (invoiceException) => {",
									"    if ( invoiceException.SupplierInvoiceException.ProcessingTypeCode === \"XMIS\" ) ",
									"        {",
									"            if ( invoiceException.SupplierInvoiceException.LifeCycleStatusCode === \"1\" )",
									"            {",
									"                pm.environment.set(\"SupplierInvoiceExceptionObjectID\", invoiceException.SupplierInvoiceException.ObjectID);",
									"                pm.test(\"Supplier invoice exception '\" + invoiceException.SupplierInvoiceException.ProcessingTypeCodeText + \"' raised\", function () { pm.response.to.have.status(200) });",
									"            }",
									"        }",
									"    })",
									"",
									"// Validations",
									"pm.test(\"Supplier invoice checked for exceptions\", function () { pm.response.to.have.status(200) });",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "3421d52b-bd85-4381-9022-20ca6114ece2",
								"exec": [
									"// Initialize supplier invoice exception",
									"pm.environment.set(\"SupplierInvoiceExceptionObjectID\", \"no exception\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khsupplierinvoice/SupplierInvoiceCollection('{{SupplierInvoiceObjectID}}')?$format=json&$expand=SupplierInvoiceExceptionReference/SupplierInvoiceException",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khsupplierinvoice",
								"SupplierInvoiceCollection('{{SupplierInvoiceObjectID}}')"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "SupplierInvoiceExceptionReference/SupplierInvoiceException"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Post supplier invoice",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Supplier invoice lifecycle status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.response.to.have.status(200) });",
									"pm.test(\"Supplier invoice approval status: \" + jsonResponse.d.results.ApprovalStatusCodeText, function () { pm.response.to.have.status(200) });",
									"pm.test(\"Supplier invoice posting status: \" + jsonResponse.d.results.PostingStatusCodeText, function () { pm.expect(jsonResponse.d.results.PostingStatusCode).to.be.oneOf([\"1\",\"3\"]) }); // Status: 1 - approval required, 3 - no approval ",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8e51af4a-c076-4ad7-a1e7-16a85606cb52",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khsupplierinvoice/Post?ObjectID='{{SupplierInvoiceObjectID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khsupplierinvoice",
								"Post"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{SupplierInvoiceObjectID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get supplier invoice",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c38f9015-76c9-4c82-98d1-4b7251b30302",
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Supplier invoice \" + jsonResponse.d.results[0].ID + \" found\", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Supplier invoice lifecycle status: \" + jsonResponse.d.results[0].LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results[0].LifeCycleStatusCode).to.be.oneOf([\"3\",\"8\"]) });",
									"pm.test(\"Supplier invoice approval status: \" + jsonResponse.d.results[0].ApprovalStatusCodeText, function () { pm.expect(jsonResponse.d.results[0].ApprovalStatusCode).to.be.oneOf([\"1\",\"4\"]) });",
									"pm.test(\"Supplier invoice posting status: \" + jsonResponse.d.results[0].PostingStatusCodeText, function () { pm.expect(jsonResponse.d.results[0].PostingStatusCode).to.be.oneOf([\"1\",\"3\"]) });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "3421d52b-bd85-4381-9022-20ca6114ece2",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khsupplierinvoice/SupplierInvoiceCollection?$format=json&$filter=ID eq '{{SupplierInvoiceID}}'&$expand=ExternalReference,Item/ItemPurchaseOrderReference,Item/ItemConfirmedInboundDeliveryReference,Item/ItemTaxCalculation",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khsupplierinvoice",
								"SupplierInvoiceCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$filter",
									"value": "ID eq '{{SupplierInvoiceID}}'"
								},
								{
									"key": "$expand",
									"value": "ExternalReference,Item/ItemPurchaseOrderReference,Item/ItemConfirmedInboundDeliveryReference,Item/ItemTaxCalculation"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get purchase order and check status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c38f9015-76c9-4c82-98d1-4b7251b30302",
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Purchase order \" + jsonResponse.d.results[0].ID + \" found\", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Consistency status: \" + jsonResponse.d.results[0].ConsistencyStatusCodeText, function () { pm.expect(jsonResponse.d.results[0].ConsistencyStatusCode).to.eql(\"3\") });",
									"pm.test(\"Acknowledgment status: \" + jsonResponse.d.results[0].AcknowledgmentStatusCodeText, function () { pm.expect(jsonResponse.d.results[0].AcknowledgmentStatusCode).to.eql(\"7\") });",
									"pm.test(\"Delivery status: \" + jsonResponse.d.results[0].DeliveryStatusCodeText, function () { pm.expect(jsonResponse.d.results[0].DeliveryStatusCode).to.eql(\"3\") });",
									"pm.test(\"Invoicing status: \" + jsonResponse.d.results[0].InvoicingStatusCodeText, function () { pm.expect(jsonResponse.d.results[0].InvoicingStatusCode).to.eql(\"3\") });",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "e2b6146b-08a2-433f-9a29-32aba0d2586f",
								"exec": [
									"// Delay and let the system complete the async. process integrations",
									"setTimeout(function() {}, 5000); // wait 5 sec"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khpurchaseorder/PurchaseOrderCollection?$format=json&$filter=ID eq '{{PurchaseOrderID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khpurchaseorder",
								"PurchaseOrderCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "",
									"disabled": true
								},
								{
									"key": "$filter",
									"value": "ID eq '{{PurchaseOrderID}}'"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Sell from Stock",
			"item": [
				{
					"name": "Get entity sets and CSRF-token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5e62e94d-f718-4db5-86fa-22e27ebb5825",
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"pm.test(\"Cross site request forgery token: received\", function () { pm.response.to.have.status(200); pm.response.to.have.header(\"x-csrf-token\") });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4b5f4d9c-55db-4cb2-a6b6-ffc9e31c7d2b",
								"exec": [
									"//Initialize dynamic environment variables",
									"pm.environment.set(\"x-csrf-token\", \"\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khsalesorder/",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khsalesorder",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create sales order",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a0b9bbf9-6725-4134-89e9-f2347dde8747",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"SalesOrderObjectID\", jsonResponse.d.results.ObjectID);",
									"pm.environment.set(\"SalesOrderID\", jsonResponse.d.results.ID);",
									"",
									"// Validations",
									"pm.test(\"Sales order \" + jsonResponse.d.results.ID + \" created\", function () { pm.response.to.have.status(201) });",
									"pm.test(\"Sales Order consistent\", function () { pm.expect(jsonResponse.d.results.ConsistencyStatusCode).to.eql(\"3\") });",
									"pm.test(\"Sales Order status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.response.to.have.status(201) });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8c48396a-8f50-4024-8dfa-a3c7594fd8a6",
								"exec": [
									"// Set External Reference of pattern KH-<UTC datetime>",
									"let todayDateTime = (new Date()).toISOString().substr(0,19);",
									"todayDateTime = todayDateTime.replace(\"-\",\"\").replace(\"-\",\"\").replace(\"T\",\"\").replace(\":\",\"\").replace(\":\",\"\");",
									"var generatedBuyerID = pm.environment.get(\"ExternalReferencePrefix\") + todayDateTime;",
									"//var generatedBuyerID = pm.environment.get(\"ExternalReferencePrefix\") + (new Date()).toISOString().substr(0,19);",
									"pm.environment.set(\"SalesOrderExternalReference\", generatedBuyerID);",
									"",
									"",
									"// Set Requested Fulfillment Period (Requested Date): today + 8 days",
									"let moment = require('moment');",
									"let requestedStartDate = moment().add(7,'day').toISOString().substr(0,10) + \"T00:00:00Z\";",
									"pm.environment.set(\"RequestedFulfillmentStartDate\", requestedStartDate);",
									"let requestedEndDate = moment().add(8,'day').toISOString().substr(0,10) + \"T00:00:00Z\";",
									"pm.environment.set(\"RequestedFulfillmentEndDate\", requestedEndDate);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"ExternalReference\": \"{{SalesOrderExternalReference}}\",\n\t\"Name\": \"Reference data - Wholesales {{Variant}}\",\n\t\"DataOriginTypeCode\": \"1\",\n\t\"DeliveryPriorityCode\": \"1\",\n\t\"SalesUnitParty\":\n\t\t{\t\n\t\t\t\"PartyID\": \"{{SalesUnitID}}\"\n\t\t}, \t\n\t\"BuyerParty\":\n\t\t{\n\t\t\t\"PartyID\": \"{{CustomerID}}\"\n\t\t},\n\t\"PricingTerms\":\n\t\t{\n\t\t\t\"GrossAmountIndicator\": false\n\t\t},\n\t\"RequestedFulfillmentPeriod\": {\n\t\t\"StartDateTime\": \"{{RequestedFulfillmentStartDate}}\",\n\t\t\"EndDateTime\": \"{{RequestedFulfillmentEndDate}}\"\n\t\t},\n\t\"Item\":\n\t\t[\n\t\t\t{\n\t\t\t\t\"ID\": \"10\",\n\t\t\t\t\"ProcessingTypeCode\": \"TAN\",\n\t\t\t\t\"ItemProduct\":\n\t\t\t\t\t{\n\t\t\t\t\t\t\"ProductID\": \"{{MaterialID}}\"\n\t\t\t\t\t},\n\t\t\t\t\"ItemScheduleLine\":\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"Quantity\": \"{{WholesalesItemQuantity1}}\",\n\t\t\t\t\t\t\t\"unitCode\": \"EA\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t}\n\t\t]\n}    \t"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khsalesorder/SalesOrderCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khsalesorder",
								"SalesOrderCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get sales order",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c38f9015-76c9-4c82-98d1-4b7251b30302",
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"SalesOrderObjectID\", jsonResponse.d.results[0].ObjectID);",
									"pm.environment.set(\"SalesOrderID\", jsonResponse.d.results[0].ID);",
									"pm.environment.set(\"Item1-ObjectID\", jsonResponse.d.results[0].Item[0].ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Sales order data returned\", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Item 10 created\", function () { pm.expect(jsonResponse.d.results[0].Item[0].ID).to.eql(\"10\") });",
									"pm.test(\"Sales Order consistent\", function () { pm.expect(jsonResponse.d.results[0].ConsistencyStatusCode).to.eql(\"3\") });",
									"pm.test(\"Sales Order status: \" + jsonResponse.d.results[0].LifeCycleStatusCodeText, function () { pm.response.to.have.status(200) });",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khsalesorder/SalesOrderCollection?$format=json&$expand=BuyerParty/BuyerPartyName,SalesUnitParty/SalesUnitPartyName,PricingTerms,Item/ItemProduct,Item/ItemScheduleLine,RequestedFulfillmentPeriod,Item/ItemProductRecipientParty&$filter=ID eq '{{SalesOrderID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khsalesorder",
								"SalesOrderCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "BuyerParty/BuyerPartyName,SalesUnitParty/SalesUnitPartyName,PricingTerms,Item/ItemProduct,Item/ItemScheduleLine,RequestedFulfillmentPeriod,Item/ItemProductRecipientParty"
								},
								{
									"key": "$filter",
									"value": "ID eq '{{SalesOrderID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Check product availability",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Sales order item 10: Availability checked\", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Product availability-to-promise status: \" + jsonResponse.d.results.ProductAvailabilityConfirmationStatusCodeText, function () { pm.expect(jsonResponse.d.results.ProductAvailabilityConfirmationStatusCode).to.eql(\"4\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khsalesorder/ItemCheckProductAvailabilityAndConfirm?ObjectID='{{Item1-ObjectID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khsalesorder",
								"ItemCheckProductAvailabilityAndConfirm"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{Item1-ObjectID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Release sales order",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Sales order \" + jsonResponse.d.results.ID + \" released\", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Sales order release status: \" + jsonResponse.d.results.ReleaseStatusCodeText, function () { pm.expect(jsonResponse.d.results.ReleaseStatusCode).to.eql(\"3\") });",
									"pm.test(\"Sales order lifecycle status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"1\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khsalesorder/SalesOrderRelease3?ObjectID='{{SalesOrderObjectID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khsalesorder",
								"SalesOrderRelease3"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{SalesOrderObjectID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Release all items to execution",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Sales order \" + jsonResponse.d.results.ID + \" released to execution\", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Sales order delivery status: \" + jsonResponse.d.results.DeliveryStatusCodeText, function () { pm.expect(jsonResponse.d.results.DeliveryStatusCode).to.eql(\"2\") });",
									"pm.test(\"Sales order lifecycle status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"2\") });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f4250237-33ad-4ff1-98bb-4ffb6dd02d19",
								"exec": [
									"// Delay and let the system complete the async. integration between CRM and SCM",
									"setTimeout(function() {}, 5000); // wait 5 sec"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khsalesorder/ReleaseAllItemsToExecution?ObjectID='{{SalesOrderObjectID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khsalesorder",
								"ReleaseAllItemsToExecution"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{SalesOrderObjectID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Query delivery proposal",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6abbca20-e715-4e12-83bf-4f59a566f089",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"OutboundDeliveryRequestObjectID\", jsonResponse.d.results[0].ObjectID);",
									"pm.environment.set(\"OutboundDeliveryRequestID\", jsonResponse.d.results[0].BaseBusinessTransactionDocumentID);",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"pm.test(\"Delivery proposal \" + jsonResponse.d.results[0].BaseBusinessTransactionDocumentID + \" for sales order \" + pm.environment.get(\"SalesOrderID\") + \" found\", function () { pm.response.to.have.status(200); });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khoutbounddeliveryrequest/QueryByElements?NumberOfRows='20'&SalesOrderID='{{SalesOrderID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khoutbounddeliveryrequest",
								"QueryByElements"
							],
							"query": [
								{
									"key": "NumberOfRows",
									"value": "'20'"
								},
								{
									"key": "StartRow",
									"value": "'5'",
									"disabled": true
								},
								{
									"key": "SalesOrderID",
									"value": "'{{SalesOrderID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get delivery proposal (key access)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6abbca20-e715-4e12-83bf-4f59a566f089",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Get item key",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"pm.environment.set(\"OutboundDeliveryRequestItemObjectID\", jsonResponse.d.results.Item[0].ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Delivery proposal\" + jsonResponse.d.results.BaseBusinessTransactionDocumentID + \" returned\", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Item 10: Consistency status: Consistent\", function () { pm.expect(jsonResponse.d.results.Item[0].ConsistencyStatusCode).to.eql(\"3\") });",
									"pm.test(\"Item 10: Order fulfilment processing status: Not Started\", function () { pm.expect(jsonResponse.d.results.Item[0].OrderFulfilmentProcessingStatusCode).to.eql(\"1\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khoutbounddeliveryrequest/OutboundDeliveryRequestCollection('{{OutboundDeliveryRequestObjectID}}')?$format=json&$expand=ProductRecipientParty,ShipFromLocation,Item/ItemBuyerParty,Item/ItemScheduleLine/RequestedQuantity,Item/ItemScheduleLine/OpenQuantity,Item/ItemScheduleLine/ArrivalPeriod",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khoutbounddeliveryrequest",
								"OutboundDeliveryRequestCollection('{{OutboundDeliveryRequestObjectID}}')"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "ProductRecipientParty,ShipFromLocation,Item/ItemBuyerParty,Item/ItemScheduleLine/RequestedQuantity,Item/ItemScheduleLine/OpenQuantity,Item/ItemScheduleLine/ArrivalPeriod"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Post goods issue",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Goods issue posted for delivery proposal \" + pm.environment.get(\"OutboundDeliveryRequestID\"), function () { pm.response.to.have.status(200) });",
									"pm.test(\"Item 10: Order fulfilment processing status: \" + jsonResponse.d.results.OrderFulfilmentProcessingStatusCodeText, function () { pm.expect(jsonResponse.d.results.OrderFulfilmentProcessingStatusCode).to.eql(\"2\") });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f4250237-33ad-4ff1-98bb-4ffb6dd02d19",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khoutbounddeliveryrequest/ItemPostGoodsIssue?ObjectID='{{OutboundDeliveryRequestItemObjectID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khoutbounddeliveryrequest",
								"ItemPostGoodsIssue"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{OutboundDeliveryRequestItemObjectID}}'"
								},
								{
									"key": "TaskBasedIndicator",
									"value": "",
									"disabled": true
								},
								{
									"key": "AllowSplitIndicator",
									"value": "",
									"disabled": true
								},
								{
									"key": "AutoReleaseOutboundDelivery",
									"value": "true",
									"disabled": true
								},
								{
									"key": "SplitByDeliveryPriorityCodeIndicator",
									"value": "",
									"disabled": true
								},
								{
									"key": "SplitByOrderIndicator",
									"value": "",
									"disabled": true
								},
								{
									"key": "SplitByShippingOrPickupDateTimeIndicator",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Query outbound delivery",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6abbca20-e715-4e12-83bf-4f59a566f089",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"OutboundDeliveryObjectID\", jsonResponse.d.results[0].ObjectID);",
									"pm.environment.set(\"OutboundDeliveryID\", jsonResponse.d.results[0].ID);",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"pm.test(\"Outbound delivery \" + jsonResponse.d.results[0].ID + \" for sales order \" + pm.environment.get(\"SalesOrderID\") + \" found\", function () { pm.response.to.have.status(200); });",
									"pm.test(\"Consistency status: \" + jsonResponse.d.results[0].ConsistencyStatusCodeText, function () { pm.expect(jsonResponse.d.results[0].ConsistencyStatusCode).to.eql(\"3\") });",
									"pm.test(\"Release status: \" + jsonResponse.d.results[0].ReleaseStatusCodeText, function () { pm.expect(jsonResponse.d.results[0].ReleaseStatusCode).to.eql(\"1\") });",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khoutbounddelivery/QueryByElements?NumberOfRows='20'&OutboundDeliveryRequestID='{{OutboundDeliveryRequestID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khoutbounddelivery",
								"QueryByElements"
							],
							"query": [
								{
									"key": "NumberOfRows",
									"value": "'20'"
								},
								{
									"key": "StartRow",
									"value": "'5'",
									"disabled": true
								},
								{
									"key": "OutboundDeliveryRequestID",
									"value": "'{{OutboundDeliveryRequestID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get outbound delivery (key access)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6abbca20-e715-4e12-83bf-4f59a566f089",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Get item key",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"pm.environment.set(\"OutboundDeliveryObjectID\", jsonResponse.d.results.ObjectID);",
									"pm.environment.set(\"OutboundDeliveryID\", jsonResponse.d.results.ID);",
									"",
									"// Validations",
									"pm.test(\"Outbound delivery \" + jsonResponse.d.results.ID + \" retrieved\", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Consistency status: \" + jsonResponse.d.results.ConsistencyStatusCodeText, function () { pm.expect(jsonResponse.d.results.ConsistencyStatusCode).to.eql(\"3\") });",
									"pm.test(\"Release status: \" + jsonResponse.d.results.ReleaseStatusCodeText, function () { pm.response.to.have.status(200) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khoutbounddelivery/OutboundDeliveryCollection('{{OutboundDeliveryObjectID}}')?$format=json&$expand=BuyerParty,SellerParty,FreightForwarderParty,ArrivalPeriod,ShippingPeriod,GrossVolumeMeasure,GrossWeightMeasure,ProductRecipientParty/ProductRecipientDisplayName,ProductRecipientParty/ProductRecipientFormattedAddress,ShipFromLocation,PickupPeriod,Item/ItemDeliveryQuantity,Item/ItemLogisticsRequestResponsibleParty,Item/ItemSalesOrderReference",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khoutbounddelivery",
								"OutboundDeliveryCollection('{{OutboundDeliveryObjectID}}')"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "BuyerParty,SellerParty,FreightForwarderParty,ArrivalPeriod,ShippingPeriod,GrossVolumeMeasure,GrossWeightMeasure,ProductRecipientParty/ProductRecipientDisplayName,ProductRecipientParty/ProductRecipientFormattedAddress,ShipFromLocation,PickupPeriod,Item/ItemDeliveryQuantity,Item/ItemLogisticsRequestResponsibleParty,Item/ItemSalesOrderReference"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Release outbound delivery",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Outbound delivery \" + jsonResponse.d.results.ID + \" released\", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Release status: \" + jsonResponse.d.results.ReleaseStatusCodeText, function () { pm.expect(jsonResponse.d.results.ReleaseStatusCode).to.eql(\"3\") });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f4250237-33ad-4ff1-98bb-4ffb6dd02d19",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khoutbounddelivery/Release?ObjectID='{{OutboundDeliveryObjectID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khoutbounddelivery",
								"Release"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{OutboundDeliveryObjectID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get customer invoice request",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c38f9015-76c9-4c82-98d1-4b7251b30302",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"pm.environment.set(\"CustomerInvoiceRequestObjectID\", jsonResponse.d.results[0].ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Customer invoice request \" + jsonResponse.d.results[0].BaseBusinessTransactionDocumentID + \" found\", function () { pm.expect(pm.response.code).to.be.oneOf([200,201,202]) });",
									"pm.test(\"Customer invoice request consistent\", function () { pm.expect(jsonResponse.d.results[0].ConsistencyStatusCode).to.eql(\"3\") });",
									"pm.test(\"Invoice request item 1: Not Invoiced\", function () { pm.expect(jsonResponse.d.results[0].Item[0].InvoicingStatusCode).to.eql(\"1\") });",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "546de23c-d88a-4193-ac90-d23d098e2b99",
								"exec": [
									"// Delay release of customer invoice request and let the system complete the async. integration between sales order and customer invoicing",
									"setTimeout(function() {}, 6000); // wait 6 sec"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcustomerinvoicerequest/CustomerInvoiceRequestCollection?$format=json&$expand=Item&$filter=BaseBusinessTransactionDocumentID eq '{{OutboundDeliveryID}}' and BaseBusinessTransactionDocumentTypeCode eq '73'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcustomerinvoicerequest",
								"CustomerInvoiceRequestCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "Item"
								},
								{
									"key": "$filter",
									"value": "BaseBusinessTransactionDocumentID eq '{{OutboundDeliveryID}}' and BaseBusinessTransactionDocumentTypeCode eq '73'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Release customer invoice request",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
								"exec": [
									"// Validations",
									"var jsonResponse = pm.response.json();",
									"pm.test(\"Customer Invoice request \" + jsonResponse.d.results.BaseBusinessTransactionDocumentID + \" released\", function () { pm.expect(pm.response.code).to.be.oneOf([200,201,202]) });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "0d693a90-cc3f-4ca6-af65-cec87c532376",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcustomerinvoicerequest/CreateCustomerInvoices?ObjectID='{{CustomerInvoiceRequestObjectID}}'&AutomaticReleaseAllowedIndicator=true",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcustomerinvoicerequest",
								"CreateCustomerInvoices"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{CustomerInvoiceRequestObjectID}}'"
								},
								{
									"key": "AutomaticReleaseAllowedIndicator",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get customer invoice request and check result",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c38f9015-76c9-4c82-98d1-4b7251b30302",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"pm.environment.set(\"CustomerInvoiceRequestObjectID\", jsonResponse.d.results[0].ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Customer invoice request \" + jsonResponse.d.results[0].BaseBusinessTransactionDocumentID + \" found\", function () { pm.expect(pm.response.code).to.be.oneOf([200,201,202]) });",
									"pm.test(\"Customer invoice request consistent\", function () { pm.expect(jsonResponse.d.results[0].ConsistencyStatusCode).to.eql(\"3\") });",
									"pm.test(\"Item 1: Invoicing status: \" + jsonResponse.d.results[0].Item[0].InvoicingStatusCodeText, function () { pm.expect(jsonResponse.d.results[0].Item[0].InvoicingStatusCode).to.eql(\"3\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcustomerinvoicerequest/CustomerInvoiceRequestCollection?$format=json&$expand=CashDiscountTerms,BuyerPartyName,BuyerPartyFormattedAddress,EmployeeResponsibleName,SalesUnitParty,BillToPartyName,Item&$filter=BaseBusinessTransactionDocumentID eq '{{OutboundDeliveryID}}' and BaseBusinessTransactionDocumentTypeCode eq '73'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcustomerinvoicerequest",
								"CustomerInvoiceRequestCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "CashDiscountTerms,BuyerPartyName,BuyerPartyFormattedAddress,EmployeeResponsibleName,SalesUnitParty,BillToPartyName,Item"
								},
								{
									"key": "$filter",
									"value": "BaseBusinessTransactionDocumentID eq '{{OutboundDeliveryID}}' and BaseBusinessTransactionDocumentTypeCode eq '73'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Query customer invoice",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6abbca20-e715-4e12-83bf-4f59a566f089",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"CustomerInvoiceObjectID\", jsonResponse.d.results[0].ObjectID);",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"pm.test(\"Customer invoice \" + jsonResponse.d.results[0].ID + \" found\", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Customer invoice consistent\", function () { pm.expect(jsonResponse.d.results[0].ConsistencyStatusCode).to.eql(\"3\") });",
									"pm.test(\"Customer invoice status: Not released\", function () { pm.expect(jsonResponse.d.results[0].ReleaseStatusCode).to.eql(\"1\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcustomerinvoice/CustomerInvoiceQueryByElements2?NumberOfRows='20'&ItemBusinessTransactionDocumentReference_ID='{{OutboundDeliveryID}}'&ItemBusinessTransactionDocumentReference_TypeCode='73'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcustomerinvoice",
								"CustomerInvoiceQueryByElements2"
							],
							"query": [
								{
									"key": "NumberOfRows",
									"value": "'20'"
								},
								{
									"key": "StartRow",
									"value": "'5'",
									"disabled": true
								},
								{
									"key": "ItemBusinessTransactionDocumentReference_ID",
									"value": "'{{OutboundDeliveryID}}'"
								},
								{
									"key": "ItemBusinessTransactionDocumentReference_TypeCode",
									"value": "'73'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Release customer invoice",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
								"exec": [
									"// Validations",
									"var jsonResponse = pm.response.json();",
									"pm.test(\"Customer invoice \" + jsonResponse.d.results.ID + \" released\", function () { pm.expect(pm.response.code).to.be.oneOf([200,201,202]) });",
									"pm.test(\"Customer invoice release status: \" + jsonResponse.d.results.ReleaseStatusCodeText, function () { pm.expect(jsonResponse.d.results.ReleaseStatusCode).to.eql(\"3\") });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "67586dee-65df-4f49-ad4b-bf4ca694e3d7",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcustomerinvoice/Release?ObjectID='{{CustomerInvoiceObjectID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcustomerinvoice",
								"Release"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{CustomerInvoiceObjectID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get customer invoice (key access) and check result",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6abbca20-e715-4e12-83bf-4f59a566f089",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"pm.test(\"Customer invoice \" + jsonResponse.d.results.ID + \" released\", function () { pm.expect(pm.response.code).to.be.oneOf([200,201,202]) });",
									"pm.test(\"Customer invoice release status: \" + jsonResponse.d.results.ReleaseStatusCodeText, function () { pm.expect(jsonResponse.d.results.ReleaseStatusCode).to.eql(\"3\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcustomerinvoice/CustomerInvoiceCollection('{{CustomerInvoiceObjectID}}')?$format=json&$expand=BusinessTransactionDocumentReference,InvolvedParty/InvolvedPartyDisplayName,InvolvedParty/InvolvedPartyFormattedAddress,CashDiscountTerms,PriceAndTaxCalculation,Item/ItemPriceAndTaxCalculation,Item/ItemBusinessTransactionDocumentReference",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcustomerinvoice",
								"CustomerInvoiceCollection('{{CustomerInvoiceObjectID}}')"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "BusinessTransactionDocumentReference,InvolvedParty/InvolvedPartyDisplayName,InvolvedParty/InvolvedPartyFormattedAddress,CashDiscountTerms,PriceAndTaxCalculation,Item/ItemPriceAndTaxCalculation,Item/ItemBusinessTransactionDocumentReference"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get sales order and check",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c38f9015-76c9-4c82-98d1-4b7251b30302",
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"SalesOrderObjectID\", jsonResponse.d.results[0].ObjectID);",
									"pm.environment.set(\"SalesOrderID\", jsonResponse.d.results[0].ID);",
									"pm.environment.set(\"Item1-ObjectID\", jsonResponse.d.results[0].Item[0].ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Sales order \" + jsonResponse.d.results[0].ID + \" returned\", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Delivery status: \" + jsonResponse.d.results[0].DeliveryStatusCodeText, function () { pm.expect(jsonResponse.d.results[0].DeliveryStatusCode).to.eql(\"3\") });",
									"pm.test(\"Invoicing status: \" + jsonResponse.d.results[0].InvoiceStatusCodeText, function () { pm.expect(jsonResponse.d.results[0].InvoiceStatusCode).to.eql(\"3\") });",
									"pm.test(\"Lifecycle status: \" + jsonResponse.d.results[0].LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results[0].LifeCycleStatusCode).to.eql(\"3\") });",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8e99ae63-a267-44da-a0d7-57459558a926",
								"exec": [
									"// Delay and let the system complete the async. integration ",
									"setTimeout(function() {}, 5000); // wait 5 sec"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khsalesorder/SalesOrderCollection?$format=json&$expand=BuyerParty/BuyerPartyName,SalesUnitParty/SalesUnitPartyName,PricingTerms,Item/ItemProduct,Item/ItemScheduleLine,RequestedFulfillmentPeriod,Item/ItemProductRecipientParty&$filter=ID eq '{{SalesOrderID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khsalesorder",
								"SalesOrderCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "BuyerParty/BuyerPartyName,SalesUnitParty/SalesUnitPartyName,PricingTerms,Item/ItemProduct,Item/ItemScheduleLine,RequestedFulfillmentPeriod,Item/ItemProductRecipientParty"
								},
								{
									"key": "$filter",
									"value": "ID eq '{{SalesOrderID}}'"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Drop Shipment",
			"item": [
				{
					"name": "Get entity sets and CSRF-token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5e62e94d-f718-4db5-86fa-22e27ebb5825",
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"pm.test(\"Cross site request forgery token: received\", function () { pm.response.to.have.status(200); pm.response.to.have.header(\"x-csrf-token\") });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4b5f4d9c-55db-4cb2-a6b6-ffc9e31c7d2b",
								"exec": [
									"//Initialize dynamic environment variables",
									"pm.environment.set(\"x-csrf-token\", \"\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khsalesorder/",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khsalesorder",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create sales order",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a0b9bbf9-6725-4134-89e9-f2347dde8747",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"SalesOrderObjectID\", jsonResponse.d.results.ObjectID);",
									"pm.environment.set(\"SalesOrderID\", jsonResponse.d.results.ID);",
									"",
									"// Validations",
									"pm.test(\"Sales order \" + jsonResponse.d.results.ID + \" created\", function () { pm.response.to.have.status(201) });",
									"pm.test(\"Sales Order consistent\", function () { pm.expect(jsonResponse.d.results.ConsistencyStatusCode).to.eql(\"3\") });",
									"pm.test(\"Sales Order status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.response.to.have.status(201) });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8c48396a-8f50-4024-8dfa-a3c7594fd8a6",
								"exec": [
									"// Set External Reference of pattern KH-<UTC datetime>",
									"let todayDateTime = (new Date()).toISOString().substr(0,19);",
									"todayDateTime = todayDateTime.replace(\"-\",\"\").replace(\"-\",\"\").replace(\"T\",\"\").replace(\":\",\"\").replace(\":\",\"\");",
									"var generatedBuyerID = pm.environment.get(\"ExternalReferencePrefix\") + todayDateTime;",
									"//var generatedBuyerID = pm.environment.get(\"ExternalReferencePrefix\") + (new Date()).toISOString().substr(0,19);",
									"pm.environment.set(\"SalesOrderExternalReference\", generatedBuyerID);",
									"",
									"// Set Requested Fulfillment Period (Requested Date): today + 8 days",
									"let moment = require('moment');",
									"let requestedStartDate = moment().add(7,'day').toISOString().substr(0,10) + \"T00:00:00Z\";",
									"pm.environment.set(\"RequestedFulfillmentStartDate\", requestedStartDate);",
									"let requestedEndDate = moment().add(8,'day').toISOString().substr(0,10) + \"T00:00:00Z\";",
									"pm.environment.set(\"RequestedFulfillmentEndDate\", requestedEndDate);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"ExternalReference\": \"{{SalesOrderExternalReference}}\",\n\t\"Name\": \"Reference data - Drop shipment {{Variant}}\",\n\t\"DataOriginTypeCode\": \"1\",\n\t\"DeliveryPriorityCode\": \"1\",\n\t\"SalesUnitParty\":\n\t\t{\t\n\t\t\t\"PartyID\": \"{{SalesUnitID}}\"\n\t\t}, \t\n\t\"BuyerParty\":\n\t\t{\n\t\t\t\"PartyID\": \"{{CustomerID2}}\"\n\t\t},\n\t\"PricingTerms\":\n\t\t{\n\t\t\t\"GrossAmountIndicator\": false\n\t\t},\n\t\"RequestedFulfillmentPeriod\": {\n\t\t\"StartDateTime\": \"{{RequestedFulfillmentStartDate}}\",\n\t\t\"EndDateTime\": \"{{RequestedFulfillmentEndDate}}\"\n\t\t},\n\t\"Item\":\n\t\t[\n\t\t\t{\n\t\t\t\t\"ID\": \"10\",\n\t\t\t\t\"ProcessingTypeCode\": \"TAN\",\n\t\t\t\t\"FulfilmentPartyCategoryCode\": \"2\",\n\t\t\t\t\"ItemProduct\":\n\t\t\t\t\t{\n\t\t\t\t\t\t\"ProductID\": \"{{MaterialID2}}\"\n\t\t\t\t\t},\n\t\t\t\t\"ItemScheduleLine\":\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"Quantity\": \"{{DropShipmentItemQuantity1}}\",\n\t\t\t\t\t\t\t\"unitCode\": \"EA\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t}\n\t\t]\n}    \t"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khsalesorder/SalesOrderCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khsalesorder",
								"SalesOrderCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get sales order",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c38f9015-76c9-4c82-98d1-4b7251b30302",
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"SalesOrderObjectID\", jsonResponse.d.results[0].ObjectID);",
									"pm.environment.set(\"SalesOrderID\", jsonResponse.d.results[0].ID);",
									"pm.environment.set(\"SalesOrderUUID\", jsonResponse.d.results[0].UUID);",
									"pm.environment.set(\"SalesOrderItemID\", jsonResponse.d.results[0].Item[0].ID);",
									"pm.environment.set(\"SalesOrderItemUUID\", jsonResponse.d.results[0].Item[0].UUID);",
									"pm.environment.set(\"Item1-ObjectID\", jsonResponse.d.results[0].Item[0].ObjectID);",
									"pm.environment.set(\"Item1-VendorPartyObjectID\", jsonResponse.d.results[0].Item[0].ItemVendorParty.ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Sales order data returned\", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Item 10 created\", function () { pm.expect(jsonResponse.d.results[0].Item[0].ID).to.eql(\"10\") });",
									"pm.test(\"Sales Order consistent\", function () { pm.expect(jsonResponse.d.results[0].ConsistencyStatusCode).to.eql(\"3\") });",
									"pm.test(\"Sales Order status: \" + jsonResponse.d.results[0].LifeCycleStatusCodeText, function () { pm.response.to.have.status(200) });",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khsalesorder/SalesOrderCollection?$format=json&$expand=BuyerParty/BuyerPartyName,SalesUnitParty/SalesUnitPartyName,PricingTerms,Item/ItemProduct,Item/ItemScheduleLine,RequestedFulfillmentPeriod,Item/ItemProductRecipientParty,Item/ItemVendorParty/ItemVendorName,Item/ItemVendorParty/ItemVendorFormattedAddress&$filter=ID eq '{{SalesOrderID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khsalesorder",
								"SalesOrderCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "BuyerParty/BuyerPartyName,SalesUnitParty/SalesUnitPartyName,PricingTerms,Item/ItemProduct,Item/ItemScheduleLine,RequestedFulfillmentPeriod,Item/ItemProductRecipientParty,Item/ItemVendorParty/ItemVendorName,Item/ItemVendorParty/ItemVendorFormattedAddress"
								},
								{
									"key": "$filter",
									"value": "ID eq '{{SalesOrderID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update sales order item vendor party",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a0b9bbf9-6725-4134-89e9-f2347dde8747",
								"exec": [
									"// Validations",
									"pm.test(\"Patch successful\", function () { pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]) });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8c48396a-8f50-4024-8dfa-a3c7594fd8a6",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"ObjectID\": \"{{Item1-VendorPartyObjectID}}\",\n\t\"ParentObjectID\": \"{{Item1-ObjectID}}\",\n\t\"PartyID\": \"{{SupplierID2}}\"\n}    \t"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khsalesorder/ItemVendorPartyCollection('{{Item1-VendorPartyObjectID}}')",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khsalesorder",
								"ItemVendorPartyCollection('{{Item1-VendorPartyObjectID}}')"
							]
						}
					},
					"response": []
				},
				{
					"name": "Release sales order",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Sales order \" + jsonResponse.d.results.ID + \" released\", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Sales order release status: \" + jsonResponse.d.results.ReleaseStatusCodeText, function () { pm.expect(jsonResponse.d.results.ReleaseStatusCode).to.eql(\"3\") });",
									"pm.test(\"Sales order lifecycle status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"1\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khsalesorder/SalesOrderRelease3?ObjectID='{{SalesOrderObjectID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khsalesorder",
								"SalesOrderRelease3"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{SalesOrderObjectID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Release all items to execution",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Sales order \" + jsonResponse.d.results.ID + \" released to execution\", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Sales order delivery status: \" + jsonResponse.d.results.DeliveryStatusCodeText, function () { pm.expect(jsonResponse.d.results.DeliveryStatusCode).to.eql(\"2\") });",
									"pm.test(\"Sales order lifecycle status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"2\") });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f4250237-33ad-4ff1-98bb-4ffb6dd02d19",
								"exec": [
									"// Delay and let the system complete the async. integration between CRM and SCM",
									"setTimeout(function() {}, 5000); // wait 5 sec"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khsalesorder/ReleaseAllItemsToExecution?ObjectID='{{SalesOrderObjectID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khsalesorder",
								"ReleaseAllItemsToExecution"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{SalesOrderObjectID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Query purchase order item",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6abbca20-e715-4e12-83bf-4f59a566f089",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"pm.environment.set(\"PurchaseOrderObjectID\", jsonResponse.d.results[0].ObjectID);",
									"pm.environment.set(\"PurchaseOrderID\", jsonResponse.d.results[0].ID);",
									"",
									"// Validations",
									"pm.test(\"Purchase order \" + jsonResponse.d.results[0].ID + \" for sales order \" + pm.environment.get(\"SalesOrderID\") + \" found\", function () { pm.response.to.have.status(200); });",
									"pm.test(\"Purchase order consistent\", function () { pm.expect(jsonResponse.d.results[0].ConsistencyStatusCode).to.eql(\"3\") });",
									"pm.test(\"Purchase order status: \" + jsonResponse.d.results[0].LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results[0].LifeCycleStatusCode).to.eql(\"6\") });",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "645104e9-f79e-4d0c-9586-77fdf9975f6e",
								"exec": [
									"// Delay and let the system complete the async. integration between CRM and SRM",
									"setTimeout(function() {}, 10000); // wait 10 sec"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khpurchaseorder/QueryByElements?NumberOfRows='20'&ItemSalesOrderID='{{SalesOrderID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khpurchaseorder",
								"QueryByElements"
							],
							"query": [
								{
									"key": "NumberOfRows",
									"value": "'20'"
								},
								{
									"key": "StartRow",
									"value": "'5'",
									"disabled": true
								},
								{
									"key": "ItemSalesOrderID",
									"value": "'{{SalesOrderID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get purchase order (key access)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c38f9015-76c9-4c82-98d1-4b7251b30302",
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"PurchaseOrderObjectID\", jsonResponse.d.results.ObjectID);",
									"pm.environment.set(\"PurchaseOrderID\", jsonResponse.d.results.ID);",
									"pm.environment.set(\"PurchaseOrderUUID\", jsonResponse.d.results.UUID);",
									"pm.environment.set(\"PurchaseOrderItemID\", jsonResponse.d.results.Item[0].ID);",
									"pm.environment.set(\"PurchaseOrderItemUUID\", jsonResponse.d.results.Item[0].UUID);",
									"//pm.environment.set(\"Item1-ObjectID\", jsonResponse.d.results.Item[0].ObjectID);",
									"//pm.environment.set(\"Item2-ObjectID\", jsonResponse.d.results.Item[1].ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Purchase order \" + jsonResponse.d.results.ID + \" for sales order \" + pm.environment.get(\"SalesOrderID\") + \" retrieved\", function () { pm.response.to.have.status(200); });",
									"pm.test(\"Purchase order consistent\", function () { pm.expect(jsonResponse.d.results.ConsistencyStatusCode).to.eql(\"3\") });",
									"pm.test(\"Purchase order status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"6\") });",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khpurchaseorder/PurchaseOrderCollection('{{PurchaseOrderObjectID}}')?$format=json&$expand=Supplier/SupplierName,Supplier/SupplierFormattedAddress,Supplier/SupplierPostalAddress,PurchasingUnit/PurchasingUnitName,EmployeeResponsible/EmployeeResponsibleName,BillToParty/BillToPartyName,BuyerParty/BuyerPartyName,PaymentTerms,Notes,AttachmentFolder,ApproverParty/ApproverPartyName,Item/ItemShipToLocation/DeliveryAddress/DeliveryAddressName,Item/ItemShipToLocation/DeliveryAddress/DeliveryPostalAddress,Item/ItemEndBuyerParty,Item/ItemBusinessTransactionDocumentReference",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khpurchaseorder",
								"PurchaseOrderCollection('{{PurchaseOrderObjectID}}')"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "Supplier/SupplierName,Supplier/SupplierFormattedAddress,Supplier/SupplierPostalAddress,PurchasingUnit/PurchasingUnitName,EmployeeResponsible/EmployeeResponsibleName,BillToParty/BillToPartyName,BuyerParty/BuyerPartyName,PaymentTerms,Notes,AttachmentFolder,ApproverParty/ApproverPartyName,Item/ItemShipToLocation/DeliveryAddress/DeliveryAddressName,Item/ItemShipToLocation/DeliveryAddress/DeliveryPostalAddress,Item/ItemEndBuyerParty,Item/ItemBusinessTransactionDocumentReference"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Query inbound delivery request",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6abbca20-e715-4e12-83bf-4f59a566f089",
								"exec": [
									"",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"InboundDeliveryRequestObjectID\", jsonResponse.d.results[0].ObjectID);",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"pm.test(\"Inbound delivery request for purchase order \" + pm.environment.get(\"PurchaseOrderID\") + \" found\", function () { pm.response.to.have.status(200); });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "6f952825-ad51-4a35-afb3-673380dffea8",
								"exec": [
									"// Delay and let the system complete the async. integration",
									"setTimeout(function() {}, 5000); // wait 5 sec"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khinbounddeliveryrequest/InboundDeliveryRequestQueryByElements?NumberOfRows='20'&PurchaseOrderID='{{PurchaseOrderID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khinbounddeliveryrequest",
								"InboundDeliveryRequestQueryByElements"
							],
							"query": [
								{
									"key": "NumberOfRows",
									"value": "'20'"
								},
								{
									"key": "StartRow",
									"value": "'5'",
									"disabled": true
								},
								{
									"key": "PurchaseOrderID",
									"value": "'{{PurchaseOrderID}}'"
								},
								{
									"key": "ItemBusinessTransactionDocumentReference_TypeCode",
									"value": "'114'",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get inbound delivery request (key access)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6abbca20-e715-4e12-83bf-4f59a566f089",
								"exec": [
									"",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"pm.test(\"Inbound delivery request returned\", function () { pm.response.to.have.status(200); });",
									"",
									"// Set environment parameter ",
									"pm.environment.set(\"InboundDeliveryRequestObjectID\", jsonResponse.d.results.ObjectID);",
									"pm.environment.set(\"InboundDeliveryRequestID\", jsonResponse.d.results.BaseBusinessTransactionDocumentID);",
									"pm.environment.set(\"InboundDeliveryRequestUUID\", jsonResponse.d.results.UUID);",
									"pm.environment.set(\"InboundDeliveryRequestItemID\", \"10\");",
									"pm.environment.set(\"InboundDeliveryRequestItemUUID\", jsonResponse.d.results.Item[0].UUID);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khinbounddeliveryrequest/InboundDeliveryRequestCollection('{{InboundDeliveryRequestObjectID}}')?$format=json&$expand=Item/ConfirmationItem/ConfirmationItemQuantity",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khinbounddeliveryrequest",
								"InboundDeliveryRequestCollection('{{InboundDeliveryRequestObjectID}}')"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "Item/ConfirmationItem/ConfirmationItemQuantity"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create third-party delivery notification",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a0b9bbf9-6725-4134-89e9-f2347dde8747",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"InboundDeliveryNotificationObjectID\", jsonResponse.d.results.ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Third-party delivery notification \" + jsonResponse.d.results.ID + \" created\", function () { pm.response.to.have.status(201) });",
									"pm.test(\"Consistency status: \" + jsonResponse.d.results.ConsistencyStatusCodeText, function () { pm.expect(jsonResponse.d.results.ConsistencyStatusCode).to.eql(\"3\") });",
									"pm.test(\"Release status: \" + jsonResponse.d.results.ReleaseStatusCodeText, function () { pm.expect(jsonResponse.d.results.ReleaseStatusCode).to.eql(\"1\") });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8c48396a-8f50-4024-8dfa-a3c7594fd8a6",
								"exec": [
									"// Set third-party delivery notification ID of pattern R-TPOP-<PurchaseOrderID-ItemID>",
									"let todayDateTime = (new Date()).toISOString().substr(0,19);",
									"todayDateTime = todayDateTime.replace(\"-\",\"\").replace(\"-\",\"\").replace(\"T\",\"\").replace(\":\",\"\").replace(\":\",\"\");",
									"var generatedTPDNID = pm.environment.get(\"ExternalReferencePrefix\") + \"TPDN-\" + pm.environment.get(\"PurchaseOrderID\") + \"-\" + pm.environment.get(\"PurchaseOrderItemID\") + \"-\" + todayDateTime;",
									"//var generatedTPDNID = pm.environment.get(\"ExternalReferencePrefix\") + \"TPDN-\" + pm.environment.get(\"PurchaseOrderID\") + \"-\" + pm.environment.get(\"PurchaseOrderItemID\") + \"-\" + (new Date()).toISOString().substr(0,19);",
									"pm.environment.set(\"InboundDeliveryNotificationID\", generatedTPDNID);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"ID\": \"{{InboundDeliveryNotificationID}}\",\n\t\"ProcessingTypeCode\": \"TPDI\",\n\t\n\t\"SenderParty\": \n\t\t{\n\t\t\t\"PartyID\": \"{{SupplierID2}}\"\n\t\t},\n\t\"ShipToParty\": \n\t\t{\n\t\t\t\"PartyID\": \"{{CustomerID2}}\"\n\t\t},\n\t\"FreightForwarderParty\":\n\t\t{\n\t\t\t\"PartyID\": \"{{FreightForwarderID}}\"\n\t\t},\n\t\"Item\": \n\t\t[\n\t\t\t{\n\t\t\t\t\"TypeCode\": \"14\",\n\t\t\t\t\"ProductID\": \"{{MaterialID2}}\",\n\t\t\t\t\"ItemDeliveryQuantity\": \n\t\t\t\t\t{\n\t\t\t\t\t\t\"Quantity\": \"{{DropShipmentItemQuantity1}}\",\n\t\t\t\t\t\t\"UnitCode\": \"EA\"\n\t\t\t\t\t},\n\t\t\t\t\"ItemPurchaseOrderReference\": \n\t\t\t\t\t{\n\t\t\t\t\t\t\"ID\": \"{{PurchaseOrderID}}\",\n\t\t\t\t\t\t\"ItemID\": \"{{PurchaseOrderItemID}}\",\n\t\t\t\t\t\t\"ItemTypeCode\": \"18\",\n\t\t\t\t\t\t\"ItemUUID\": \"{{PurchaseOrderItemUUID}}\",\n\t\t\t\t\t\t\"TypeCode\": \"001\",\n\t\t\t\t\t\t\"UUID\": \"{{PurchaseOrderUUID}}\",\n\t\t\t\t\t\t\"RelationshipRoleCode\": \"1\"\n\t\t\t\t\t}\n\t\t\t}\n\t\t]\n}    \t"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khinbounddelivery/InboundDeliveryCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khinbounddelivery",
								"InboundDeliveryCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Release third-party delivery notification",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Thirt-party delivery notification \" + jsonResponse.d.results.ID + \" released\", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Release status: \" + jsonResponse.d.results.ReleaseStatusCodeText, function () { pm.expect(jsonResponse.d.results.ReleaseStatusCode).to.eql(\"3\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khinbounddelivery/Release?ObjectID='{{InboundDeliveryNotificationObjectID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khinbounddelivery",
								"Release"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{InboundDeliveryNotificationObjectID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get third-party delivery notification",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c38f9015-76c9-4c82-98d1-4b7251b30302",
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"InboundDeliveryNotificationObjectID\", jsonResponse.d.results[0].ObjectID);",
									"pm.environment.set(\"InboundDeliveryNotificationID\", jsonResponse.d.results[0].ID);",
									"pm.environment.set(\"InboundDeliveryNotificationItemObjectID\", jsonResponse.d.results[0].Item[0].ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Thirt-party delivery notification \" + jsonResponse.d.results[0].ID + \" retrieved\", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Consistency status: \" + jsonResponse.d.results[0].ConsistencyStatusCodeText, function () { pm.expect(jsonResponse.d.results[0].ConsistencyStatusCode).to.eql(\"3\") });",
									"pm.test(\"Release status: \" + jsonResponse.d.results[0].ReleaseStatusCodeText, function () { pm.expect(jsonResponse.d.results[0].ReleaseStatusCode).to.eql(\"3\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khinbounddelivery/InboundDeliveryCollection?$format=json&$expand=ArrivalPeriod,ShippingPeriod,BuyerParty/BuyerPartyName,FreightForwarderParty/FreightForwarderPartyName,SenderParty/SenderPartyName,SenderParty/SenderPartyFormattedAddress,ShipToParty/ShipToPartyName,ShipToParty/ShipToPartyFormattedAddress,Item/ItemBuyerParty,Item/ItemSellerParty,Item/ItemDeliveryQuantity,Item/ItemQuantity,Item/ItemSalesOrderReference,Item/ItemPurchaseOrderReference,Item/ItemExternalReference,Item/ItemInboundDeliveryRequestReference&$filter=ID eq '{{InboundDeliveryNotificationID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khinbounddelivery",
								"InboundDeliveryCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "ArrivalPeriod,ShippingPeriod,BuyerParty/BuyerPartyName,FreightForwarderParty/FreightForwarderPartyName,SenderParty/SenderPartyName,SenderParty/SenderPartyFormattedAddress,ShipToParty/ShipToPartyName,ShipToParty/ShipToPartyFormattedAddress,Item/ItemBuyerParty,Item/ItemSellerParty,Item/ItemDeliveryQuantity,Item/ItemQuantity,Item/ItemSalesOrderReference,Item/ItemPurchaseOrderReference,Item/ItemExternalReference,Item/ItemInboundDeliveryRequestReference"
								},
								{
									"key": "$filter",
									"value": "ID eq '{{InboundDeliveryNotificationID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create supplier invoice",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a0b9bbf9-6725-4134-89e9-f2347dde8747",
								"exec": [
									"",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"SupplierInvoiceObjectID\", jsonResponse.d.results.ObjectID);",
									"pm.environment.set(\"SupplierInvoiceID\", jsonResponse.d.results.ID);",
									"",
									"// Validations",
									"pm.test(\"Supplier Invoice \" + jsonResponse.d.results.ID + \" created\", function () { pm.response.to.have.status(201) });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8c48396a-8f50-4024-8dfa-a3c7594fd8a6",
								"exec": [
									"// Delay and let the system complete the async. process integrations",
									"setTimeout(function() {}, 6000); // wait 6 sec",
									"",
									"// Set Supplier invoice external document ID of pattern R-SIV-<PurchaseOrderID-ItemID>",
									"let todayDateTime = (new Date()).toISOString().substr(0,19);",
									"todayDateTime = todayDateTime.replace(\"-\",\"\").replace(\"-\",\"\").replace(\"T\",\"\").replace(\":\",\"\").replace(\":\",\"\");",
									"let externalDocID = pm.environment.get(\"ExternalReferencePrefix\") + \"SIV-\" + pm.environment.get(\"PurchaseOrderID\") + \"-\" + todayDateTime;",
									"//let externalDocID = pm.environment.get(\"ExternalReferencePrefix\") + \"SIV-\" + pm.environment.get(\"PurchaseOrderID\") + \"-\" + (new Date()).toISOString().substr(0,19);",
									"pm.environment.set(\"SupplierInvoiceExternalDocumentID\", externalDocID);",
									"",
									"// Set Supplier invoice description",
									"let description = \"Invoice for TPOP-Purchase Order \" + pm.environment.get(\"PurchaseOrderID\");",
									"pm.environment.set(\"SupplierInvoiceDescription\", description);",
									"",
									"// Set Requested Fulfillment Period (Requested Date) as supplier invoice date: today + 8 days",
									"let moment = require('moment');",
									"let invoiceDate = moment().add(8,'day').toISOString().substr(0,10) + \"T00:00:00\";",
									"pm.environment.set(\"InvoiceDate\", invoiceDate);",
									"//pm.environment.set(\"InvoiceReceiptDate\", today);",
									"//pm.environment.set(\"InvoiceTransactionDate\", today);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"TypeCode\": \"004\",\n\t\"DataOriginTypeCode\": \"1\",\n\t\"ItemsGrossAmountIndicator\": true,\n\t\"InvoiceDescription\": \"{{SupplierInvoiceDescription}}\",\n\t\"ReceiptDate\": \"{{InvoiceDate}}\",\n\t\"InvoiceDate\": \"{{InvoiceDate}}\",\n\t\"ExternalReference\": \n\t\t{\n\t\t\t\"BusinessTransactionDocumentRelationshipRoleCode\": \"7\",\n\t\t\t\"ID\": \"{{SupplierInvoiceExternalDocumentID}}\",\n\t\t\t\"TypeCode\": \"28\"\n\t\t},\n\t\"SellerParty\":\n\t\t{\t\n\t\t\t\"PartyID\": \"{{SupplierID2}}\"\n\t\t}, \t\n\t\"Item\": \n\t\t[\n\t\t\t{\n\t\t\t\t\"TypeCode\": \"002\",\n\t\t\t\t\"ProductID\": \"{{MaterialID2}}\",\n\t\t\t\t\"ProductTypeCode\": \"1\",\n\t\t\t\t\"Quantity\": \"{{DropShipmentItemQuantity1}}\",\n\t\t\t\t\"QuantityUnitCode\": \"EA\",\n\t\t\t\t\"GrossUnitPriceAmount\": \"{{DropShipmentItemPrice1}}\",\n\t\t\t\t\"GrossUnitPriceBaseQuantity\": \"1\",\n\t\t\t\t\"ItemPurchaseOrderReference\": \n\t\t\t\t\t{\n\t\t\t\t\t\t\"ID\": \"{{PurchaseOrderID}}\",\n\t\t\t\t\t\t\"ItemID\": \"{{PurchaseOrderItemID}}\"\n\t\t\t\t\t}\n            }\n        ]\n}    \t"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khsupplierinvoice/SupplierInvoiceCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khsupplierinvoice",
								"SupplierInvoiceCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Calculate supplier invoice total gross amount",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
								"exec": [
									"// Validations",
									"pm.test(\"Supplier invoice total gross amount updated\", function () { pm.response.to.have.status(200) });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khsupplierinvoice/CalculateGrossAmount?ObjectID='{{SupplierInvoiceObjectID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khsupplierinvoice",
								"CalculateGrossAmount"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{SupplierInvoiceObjectID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Calculate supplier invoice total tax amount",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
								"exec": [
									"// Validations",
									"pm.test(\"Supplier invoice total tax amount updated\", function () { pm.response.to.have.status(200) });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khsupplierinvoice/CalculateTaxAmount?ObjectID='{{SupplierInvoiceObjectID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khsupplierinvoice",
								"CalculateTaxAmount"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{SupplierInvoiceObjectID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Post supplier invoice",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Supplier invoice lifecycle status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.response.to.have.status(200) });",
									"pm.test(\"Supplier invoice approval status: \" + jsonResponse.d.results.ApprovalStatusCodeText, function () { pm.response.to.have.status(200) });",
									"pm.test(\"Supplier invoice posting status: \" + jsonResponse.d.results.PostingStatusCodeText, function () { pm.expect(jsonResponse.d.results.PostingStatusCode).to.be.oneOf([\"1\",\"3\"]) }); // Status: 1 - approval required, 3 - no approval ",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8e51af4a-c076-4ad7-a1e7-16a85606cb52",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khsupplierinvoice/Post?ObjectID='{{SupplierInvoiceObjectID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khsupplierinvoice",
								"Post"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{SupplierInvoiceObjectID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get supplier invoice",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c38f9015-76c9-4c82-98d1-4b7251b30302",
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Supplier invoice \" + jsonResponse.d.results[0].ID + \" found\", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Supplier invoice lifecycle status: \" + jsonResponse.d.results[0].LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results[0].LifeCycleStatusCode).to.be.oneOf([\"3\",\"8\"]) });",
									"pm.test(\"Supplier invoice approval status: \" + jsonResponse.d.results[0].ApprovalStatusCodeText, function () { pm.expect(jsonResponse.d.results[0].ApprovalStatusCode).to.be.oneOf([\"1\",\"2\",\"4\"]) });",
									"pm.test(\"Supplier invoice posting status: \" + jsonResponse.d.results[0].PostingStatusCodeText, function () { pm.expect(jsonResponse.d.results[0].PostingStatusCode).to.be.oneOf([\"1\",\"3\"]) });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "3421d52b-bd85-4381-9022-20ca6114ece2",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khsupplierinvoice/SupplierInvoiceCollection?$format=json&$filter=ID eq '{{SupplierInvoiceID}}'&$expand=ExternalReference,Item/ItemPurchaseOrderReference,Item/ItemConfirmedInboundDeliveryReference,Item/ItemTaxCalculation",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khsupplierinvoice",
								"SupplierInvoiceCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$filter",
									"value": "ID eq '{{SupplierInvoiceID}}'"
								},
								{
									"key": "$expand",
									"value": "ExternalReference,Item/ItemPurchaseOrderReference,Item/ItemConfirmedInboundDeliveryReference,Item/ItemTaxCalculation"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get purchase order and check status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c38f9015-76c9-4c82-98d1-4b7251b30302",
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Purchase order \" + jsonResponse.d.results[0].ID + \" found\", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Consistency status: \" + jsonResponse.d.results[0].ConsistencyStatusCodeText, function () { pm.expect(jsonResponse.d.results[0].ConsistencyStatusCode).to.eql(\"3\") });",
									"pm.test(\"Acknowledgment status: \" + jsonResponse.d.results[0].AcknowledgmentStatusCodeText, function () { pm.expect(jsonResponse.d.results[0].AcknowledgmentStatusCode).to.eql(\"9\") });",
									"pm.test(\"Delivery status: \" + jsonResponse.d.results[0].DeliveryStatusCodeText, function () { pm.expect(jsonResponse.d.results[0].DeliveryStatusCode).to.eql(\"3\") });",
									"pm.test(\"Invoicing status: \" + jsonResponse.d.results[0].InvoicingStatusCodeText, function () { pm.expect(jsonResponse.d.results[0].InvoicingStatusCode).to.eql(\"3\") });",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "e2b6146b-08a2-433f-9a29-32aba0d2586f",
								"exec": [
									"// Delay and let the system complete the async. process integrations",
									"setTimeout(function() {}, 5000); // wait 5 sec"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khpurchaseorder/PurchaseOrderCollection?$format=json&$filter=ID eq '{{PurchaseOrderID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khpurchaseorder",
								"PurchaseOrderCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "",
									"disabled": true
								},
								{
									"key": "$filter",
									"value": "ID eq '{{PurchaseOrderID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Query outbound delivery",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6abbca20-e715-4e12-83bf-4f59a566f089",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"OutboundDeliveryObjectID\", jsonResponse.d.results[0].ObjectID);",
									"pm.environment.set(\"OutboundDeliveryID\", jsonResponse.d.results[0].ID);",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"pm.test(\"Outbound delivery \" + jsonResponse.d.results[0].ID + \" for sales order \" + pm.environment.get(\"SalesOrderID\") + \" found\", function () { pm.response.to.have.status(200); });",
									"pm.test(\"Consistency status: \" + jsonResponse.d.results[0].ConsistencyStatusCodeText, function () { pm.expect(jsonResponse.d.results[0].ConsistencyStatusCode).to.eql(\"3\") });",
									"pm.test(\"Release status: \" + jsonResponse.d.results[0].ReleaseStatusCodeText, function () { pm.expect(jsonResponse.d.results[0].ReleaseStatusCode).to.eql(\"3\") });",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khoutbounddelivery/QueryByElements?NumberOfRows='20'&SalesOrderID='{{SalesOrderID}}'&SalesOrderItemID='{{SalesOrderItemID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khoutbounddelivery",
								"QueryByElements"
							],
							"query": [
								{
									"key": "NumberOfRows",
									"value": "'20'"
								},
								{
									"key": "StartRow",
									"value": "'5'",
									"disabled": true
								},
								{
									"key": "SalesOrderID",
									"value": "'{{SalesOrderID}}'"
								},
								{
									"key": "SalesOrderItemID",
									"value": "'{{SalesOrderItemID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get customer invoice request",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c38f9015-76c9-4c82-98d1-4b7251b30302",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"pm.environment.set(\"CustomerInvoiceRequestObjectID\", jsonResponse.d.results[0].ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Customer invoice request \" + jsonResponse.d.results[0].BaseBusinessTransactionDocumentID + \" found\", function () { pm.expect(pm.response.code).to.be.oneOf([200,201,202]) });",
									"pm.test(\"Customer invoice request consistent\", function () { pm.expect(jsonResponse.d.results[0].ConsistencyStatusCode).to.eql(\"3\") });",
									"pm.test(\"Invoice request item 1: Not Invoiced\", function () { pm.expect(jsonResponse.d.results[0].Item[0].InvoicingStatusCode).to.eql(\"1\") });",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "546de23c-d88a-4193-ac90-d23d098e2b99",
								"exec": [
									"// Delay release of customer invoice request and let the system complete the async. integration between sales order and customer invoicing",
									"setTimeout(function() {}, 3000); // wait 3 sec"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcustomerinvoicerequest/CustomerInvoiceRequestCollection?$format=json&$expand=Item&$filter=BaseBusinessTransactionDocumentID eq '{{OutboundDeliveryID}}' and BaseBusinessTransactionDocumentTypeCode eq '73'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcustomerinvoicerequest",
								"CustomerInvoiceRequestCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "Item"
								},
								{
									"key": "$filter",
									"value": "BaseBusinessTransactionDocumentID eq '{{OutboundDeliveryID}}' and BaseBusinessTransactionDocumentTypeCode eq '73'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Release customer invoice request",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
								"exec": [
									"// Validations",
									"var jsonResponse = pm.response.json();",
									"pm.test(\"Customer Invoice request \" + jsonResponse.d.results.BaseBusinessTransactionDocumentID + \" released\", function () { pm.expect(pm.response.code).to.be.oneOf([200,201,202]) });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "0d693a90-cc3f-4ca6-af65-cec87c532376",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcustomerinvoicerequest/CreateCustomerInvoices?ObjectID='{{CustomerInvoiceRequestObjectID}}'&AutomaticReleaseAllowedIndicator=true",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcustomerinvoicerequest",
								"CreateCustomerInvoices"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{CustomerInvoiceRequestObjectID}}'"
								},
								{
									"key": "AutomaticReleaseAllowedIndicator",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Query customer invoice",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6abbca20-e715-4e12-83bf-4f59a566f089",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"CustomerInvoiceObjectID\", jsonResponse.d.results[0].ObjectID);",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"pm.test(\"Customer invoice \" + jsonResponse.d.results[0].ID + \" found\", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Customer invoice consistent\", function () { pm.expect(jsonResponse.d.results[0].ConsistencyStatusCode).to.eql(\"3\") });",
									"pm.test(\"Customer invoice status: Not released\", function () { pm.expect(jsonResponse.d.results[0].ReleaseStatusCode).to.eql(\"1\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcustomerinvoice/CustomerInvoiceQueryByElements2?NumberOfRows='20'&ItemBusinessTransactionDocumentReference_ID='{{OutboundDeliveryID}}'&ItemBusinessTransactionDocumentReference_TypeCode='73'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcustomerinvoice",
								"CustomerInvoiceQueryByElements2"
							],
							"query": [
								{
									"key": "NumberOfRows",
									"value": "'20'"
								},
								{
									"key": "StartRow",
									"value": "'5'",
									"disabled": true
								},
								{
									"key": "ItemBusinessTransactionDocumentReference_ID",
									"value": "'{{OutboundDeliveryID}}'"
								},
								{
									"key": "ItemBusinessTransactionDocumentReference_TypeCode",
									"value": "'73'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Release customer invoice",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
								"exec": [
									"// Validations",
									"var jsonResponse = pm.response.json();",
									"pm.test(\"Customer invoice \" + jsonResponse.d.results.ID + \" released\", function () { pm.expect(pm.response.code).to.be.oneOf([200,201,202]) });",
									"pm.test(\"Customer invoice release status: \" + jsonResponse.d.results.ReleaseStatusCodeText, function () { pm.expect(jsonResponse.d.results.ReleaseStatusCode).to.eql(\"3\") });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "67586dee-65df-4f49-ad4b-bf4ca694e3d7",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcustomerinvoice/Release?ObjectID='{{CustomerInvoiceObjectID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcustomerinvoice",
								"Release"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{CustomerInvoiceObjectID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get customer invoice (key access) and check result",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6abbca20-e715-4e12-83bf-4f59a566f089",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"pm.test(\"Customer invoice \" + jsonResponse.d.results.ID + \" released\", function () { pm.expect(pm.response.code).to.be.oneOf([200,201,202]) });",
									"pm.test(\"Customer invoice release status: \" + jsonResponse.d.results.ReleaseStatusCodeText, function () { pm.expect(jsonResponse.d.results.ReleaseStatusCode).to.eql(\"3\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcustomerinvoice/CustomerInvoiceCollection('{{CustomerInvoiceObjectID}}')?$format=json&$expand=BusinessTransactionDocumentReference,InvolvedParty/InvolvedPartyDisplayName,InvolvedParty/InvolvedPartyFormattedAddress,CashDiscountTerms,PriceAndTaxCalculation,Item/ItemPriceAndTaxCalculation,Item/ItemBusinessTransactionDocumentReference",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcustomerinvoice",
								"CustomerInvoiceCollection('{{CustomerInvoiceObjectID}}')"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "BusinessTransactionDocumentReference,InvolvedParty/InvolvedPartyDisplayName,InvolvedParty/InvolvedPartyFormattedAddress,CashDiscountTerms,PriceAndTaxCalculation,Item/ItemPriceAndTaxCalculation,Item/ItemBusinessTransactionDocumentReference"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get sales order and check",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c38f9015-76c9-4c82-98d1-4b7251b30302",
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"SalesOrderObjectID\", jsonResponse.d.results[0].ObjectID);",
									"pm.environment.set(\"SalesOrderID\", jsonResponse.d.results[0].ID);",
									"pm.environment.set(\"Item1-ObjectID\", jsonResponse.d.results[0].Item[0].ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Sales order \" + jsonResponse.d.results[0].ID + \" returned\", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Delivery status: \" + jsonResponse.d.results[0].DeliveryStatusCodeText, function () { pm.expect(jsonResponse.d.results[0].DeliveryStatusCode).to.eql(\"3\") });",
									"pm.test(\"Invoicing status: \" + jsonResponse.d.results[0].InvoiceStatusCodeText, function () { pm.expect(jsonResponse.d.results[0].InvoiceStatusCode).to.eql(\"3\") });",
									"pm.test(\"Lifecycle status: \" + jsonResponse.d.results[0].LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results[0].LifeCycleStatusCode).to.eql(\"3\") });",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8e99ae63-a267-44da-a0d7-57459558a926",
								"exec": [
									"// Delay and let the system complete the async. integration ",
									"setTimeout(function() {}, 5000); // wait 5 sec"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khsalesorder/SalesOrderCollection?$format=json&$expand=BuyerParty/BuyerPartyName,SalesUnitParty/SalesUnitPartyName,PricingTerms,Item/ItemProduct,Item/ItemScheduleLine,RequestedFulfillmentPeriod,Item/ItemProductRecipientParty&$filter=ID eq '{{SalesOrderID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khsalesorder",
								"SalesOrderCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "BuyerParty/BuyerPartyName,SalesUnitParty/SalesUnitPartyName,PricingTerms,Item/ItemProduct,Item/ItemScheduleLine,RequestedFulfillmentPeriod,Item/ItemProductRecipientParty"
								},
								{
									"key": "$filter",
									"value": "ID eq '{{SalesOrderID}}'"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Make to Stock",
			"item": [
				{
					"name": "Get entity sets and CSRF-token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5e62e94d-f718-4db5-86fa-22e27ebb5825",
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"pm.test(\"Cross site request forgery token: received\", function () { pm.response.to.have.status(200); pm.response.to.have.header(\"x-csrf-token\") });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4b5f4d9c-55db-4cb2-a6b6-ffc9e31c7d2b",
								"exec": [
									"//Initialize dynamic environment variables",
									"pm.environment.set(\"x-csrf-token\", \"\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khproductionplanningorder/",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khproductionplanningorder",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create purchase order for production materials",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a0b9bbf9-6725-4134-89e9-f2347dde8747",
								"exec": [
									"",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"PurchaseOrderObjectID\", jsonResponse.d.results.ObjectID);",
									"pm.environment.set(\"PurchaseOrderID\", jsonResponse.d.results.ID);",
									"",
									"// Validations",
									"pm.test(\"Purchase order \" + jsonResponse.d.results.ID + \" created\", function () { pm.response.to.have.status(201) });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8c48396a-8f50-4024-8dfa-a3c7594fd8a6",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"IncotermsCode\": \"EXW\",\n\t\"IncotermsLocationName\": \"Company Site\",\n\t\"CurrencyCode\": \"USD\",\n\t\"Supplier\":\n\t\t{\t\n\t\t\t\"PartyID\": \"{{SupplierID3}}\"\n\t\t}, \t\n\t\"PurchasingUnit\":\n\t\t{\n\t\t\t\"PartyID\": \"{{PurchasingUnitID}}\"\n\t\t},\n\t\"PaymentTerms\":\n\t\t{\n\t\t\t\"PaymentTermsCode\": \"0007\"\n\t\t},\n\t\"Item\":\n\t\t[\n\t\t\t{\n\t\t\t\t\"ProductID\": \"{{MaterialID4}}\",\n\t\t\t\t\"DirectMaterialIndicator\": false,\n\t\t\t\t\"ThirdPartyDealIndicator\": false,\n\t\t\t\t\"Quantity\": \"{{ProductionProcurementQuantity}}\",\n\t\t\t\t\"QuantityUnitCode\": \"EA\",\n\t\t\t\t\"ListUnitPriceAmount\": \"{{PriceMaterial4}}\",\n\t\t\t\t\"EmployeeTimeConfirmationRequiredIndicator\": false,\n\t\t\t\t\"GoodsAndServiceReceiptRequirementCode\": \"01\",\n\t\t\t\t\"EvaluatedReceiptSettlementIndicator\": false,\n\t\t\t\t\"InvoiceRequirementCode\": \"01\",\n\t\t\t\t\"AcknowledgmentRequirementCode\": \"02\",\n\t\t\t\t\"ItemShipToLocation\": \n\t\t\t\t\t{\n\t\t\t\t\t\t\"LocationID\": \"{{LocationID}}\"\n\t\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"ProductID\": \"{{MaterialID5}}\",\n\t\t\t\t\"DirectMaterialIndicator\": false,\n\t\t\t\t\"ThirdPartyDealIndicator\": false,\n\t\t\t\t\"Quantity\": \"{{ProductionProcurementQuantity}}\",\n\t\t\t\t\"QuantityUnitCode\": \"EA\",\n\t\t\t\t\"ListUnitPriceAmount\": \"{{PriceMaterial5}}\",\n\t\t\t\t\"EmployeeTimeConfirmationRequiredIndicator\": false,\n\t\t\t\t\"GoodsAndServiceReceiptRequirementCode\": \"01\",\n\t\t\t\t\"EvaluatedReceiptSettlementIndicator\": false,\n\t\t\t\t\"InvoiceRequirementCode\": \"01\",\n\t\t\t\t\"AcknowledgmentRequirementCode\": \"02\",\n\t\t\t\t\"ItemShipToLocation\": \n\t\t\t\t\t{\n\t\t\t\t\t\t\"LocationID\": \"{{LocationID}}\"\n\t\t\t\t\t}\n\t\t\t}\n\t\t]\n}    \t"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khpurchaseorder/PurchaseOrderCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khpurchaseorder",
								"PurchaseOrderCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get purchase order and expand",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c38f9015-76c9-4c82-98d1-4b7251b30302",
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"PurchaseOrderObjectID\", jsonResponse.d.results[0].ObjectID);",
									"pm.environment.set(\"PurchaseOrderID\", jsonResponse.d.results[0].ID);",
									"pm.environment.set(\"PurchaseOrderUUID\", jsonResponse.d.results[0].UUID);",
									"pm.environment.set(\"PurchaseOrderItemID\", jsonResponse.d.results[0].Item[0].ID);",
									"pm.environment.set(\"PurchaseOrderItemUUID\", jsonResponse.d.results[0].Item[0].UUID);",
									"pm.environment.set(\"PurchaseOrderItemID2\", jsonResponse.d.results[0].Item[1].ID);",
									"pm.environment.set(\"PurchaseOrderItemUUID2\", jsonResponse.d.results[0].Item[1].UUID);",
									"//pm.environment.set(\"Item1-ObjectID\", jsonResponse.d.results[0].Item[0].ObjectID);",
									"//pm.environment.set(\"Item2-ObjectID\", jsonResponse.d.results[0].Item[1].ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Purchase order \" + jsonResponse.d.results[0].ID + \" found\", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Purchase order in preparation\", function () { pm.expect(jsonResponse.d.results[0].LifeCycleStatusCode).to.eql(\"1\") });",
									"pm.test(\"Purchase order consistent\", function () { pm.expect(jsonResponse.d.results[0].ConsistencyStatusCode).to.eql(\"3\") });",
									"pm.test(\"Item 1 created\", function () { pm.expect(jsonResponse.d.results[0].Item[0].ID).to.eql(\"1\") });",
									"pm.test(\"Status Item 1 in preparation\", function () { pm.expect(jsonResponse.d.results[0].Item[0].LifeCycleStatusCode).to.eql(\"1\") });",
									"pm.test(\"Item 2 created\", function () { pm.expect(jsonResponse.d.results[0].Item[1].ID).to.eql(\"2\") });",
									"pm.test(\"Status Item 2 in preparation\", function () { pm.expect(jsonResponse.d.results[0].Item[1].LifeCycleStatusCode).to.eql(\"1\") });",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khpurchaseorder/PurchaseOrderCollection?$format=json&$expand=Supplier/SupplierName,Supplier/SupplierFormattedAddress,Supplier/SupplierPostalAddress,PurchasingUnit/PurchasingUnitName,EmployeeResponsible/EmployeeResponsibleName,BillToParty/BillToPartyName,BuyerParty/BuyerPartyName,PaymentTerms,Notes,AttachmentFolder,ApproverParty/ApproverPartyName,Item/ItemShipToLocation/DeliveryAddress/DeliveryAddressName,Item/ItemShipToLocation/DeliveryAddress/DeliveryPostalAddress&$filter=ID eq '{{PurchaseOrderID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khpurchaseorder",
								"PurchaseOrderCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "Supplier/SupplierName,Supplier/SupplierFormattedAddress,Supplier/SupplierPostalAddress,PurchasingUnit/PurchasingUnitName,EmployeeResponsible/EmployeeResponsibleName,BillToParty/BillToPartyName,BuyerParty/BuyerPartyName,PaymentTerms,Notes,AttachmentFolder,ApproverParty/ApproverPartyName,Item/ItemShipToLocation/DeliveryAddress/DeliveryAddressName,Item/ItemShipToLocation/DeliveryAddress/DeliveryPostalAddress"
								},
								{
									"key": "$filter",
									"value": "ID eq '{{PurchaseOrderID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Submit purchase order",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
								"exec": [
									"// Validations",
									"pm.test(\"Purchase order submitted\", function () { pm.response.to.have.status(200) });",
									"",
									"var jsonResponse = pm.response.json();",
									"pm.test(\"Purchase order status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"5\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khpurchaseorder/SubmitForOrder?ObjectID='{{PurchaseOrderObjectID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khpurchaseorder",
								"SubmitForOrder"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{PurchaseOrderObjectID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Confirm purchase order by supplier",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
								"exec": [
									"// Validations",
									"pm.test(\"Purchase order confirmed by supplier\", function () { pm.response.to.have.status(200) });",
									"",
									"var jsonResponse = pm.response.json();",
									"pm.test(\"Purchase order status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"7\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khpurchaseorder/ConfirmBySupplier?ObjectID='{{PurchaseOrderObjectID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khpurchaseorder",
								"ConfirmBySupplier"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{PurchaseOrderObjectID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Query inbound delivery request",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6abbca20-e715-4e12-83bf-4f59a566f089",
								"exec": [
									"",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"InboundDeliveryRequestObjectID\", jsonResponse.d.results[0].ObjectID);",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"pm.test(\"Inbound delivery request for purchase order \" + pm.environment.get(\"PurchaseOrderID\") + \" found\", function () { pm.response.to.have.status(200); });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ee4e42bf-34a3-402f-b823-ec5097471430",
								"exec": [
									"// Delay and let the system complete the async. process integrations",
									"setTimeout(function() {}, 3000); // wait 3 sec"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khinbounddeliveryrequest/InboundDeliveryRequestQueryByElements?NumberOfRows='20'&PurchaseOrderID='{{PurchaseOrderID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khinbounddeliveryrequest",
								"InboundDeliveryRequestQueryByElements"
							],
							"query": [
								{
									"key": "NumberOfRows",
									"value": "'20'"
								},
								{
									"key": "StartRow",
									"value": "'5'",
									"disabled": true
								},
								{
									"key": "PurchaseOrderID",
									"value": "'{{PurchaseOrderID}}'"
								},
								{
									"key": "ItemBusinessTransactionDocumentReference_TypeCode",
									"value": "'114'",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get inbound delivery request and expand (key access)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6abbca20-e715-4e12-83bf-4f59a566f089",
								"exec": [
									"",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"pm.test(\"Inbound delivery request returned\", function () { pm.response.to.have.status(200); });",
									"",
									"// Set environment parameter ",
									"pm.environment.set(\"InboundDeliveryRequestObjectID\", jsonResponse.d.results.ObjectID);",
									"pm.environment.set(\"InboundDeliveryRequestID\", jsonResponse.d.results.BaseBusinessTransactionDocumentID);",
									"pm.environment.set(\"InboundDeliveryRequestUUID\", jsonResponse.d.results.UUID);",
									"pm.environment.set(\"InboundDeliveryRequestItemID\", \"10\");",
									"pm.environment.set(\"InboundDeliveryRequestItemUUID\", jsonResponse.d.results.Item[0].UUID);",
									"pm.environment.set(\"InboundDeliveryRequestItemID2\", \"20\");",
									"pm.environment.set(\"InboundDeliveryRequestItemUUID2\", jsonResponse.d.results.Item[1].UUID);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khinbounddeliveryrequest/InboundDeliveryRequestCollection('{{InboundDeliveryRequestObjectID}}')?$format=json&$expand=Item/ConfirmationItem/ConfirmationItemQuantity",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khinbounddeliveryrequest",
								"InboundDeliveryRequestCollection('{{InboundDeliveryRequestObjectID}}')"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "Item/ConfirmationItem/ConfirmationItemQuantity"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create inbound delivery notification",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a0b9bbf9-6725-4134-89e9-f2347dde8747",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"InboundDeliveryNotificationObjectID\", jsonResponse.d.results.ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Inbound delivery notification status: \" + jsonResponse.d.results.ReleaseStatusCodeText, function () { pm.response.to.have.status(201) });",
									"pm.test(\"Inbound delivery notification consistent\", function () { pm.expect(jsonResponse.d.results.ConsistencyStatusCode).to.eql(\"3\") });",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8c48396a-8f50-4024-8dfa-a3c7594fd8a6",
								"exec": [
									"// Set inbound delivery notification ID of pattern R-IDN-<PurchaseOrderID-ItemID>-DateTime",
									"let todayDateTime = (new Date()).toISOString().substr(0,19);",
									"todayDateTime = todayDateTime.replace(\"-\",\"\").replace(\"-\",\"\").replace(\"T\",\"\").replace(\":\",\"\").replace(\":\",\"\");",
									"let generatedIDNID = pm.environment.get(\"ExternalReferencePrefix\") + \"IDN-\" + pm.environment.get(\"PurchaseOrderID\") + \"-\" + pm.environment.get(\"PurchaseOrderItemID\") + \"-\" + todayDateTime;",
									"//let generatedIDNID = pm.environment.get(\"ExternalReferencePrefix\") + \"IDN-\" + pm.environment.get(\"PurchaseOrderID\") + \"-\" + pm.environment.get(\"PurchaseOrderItemID\") + \"-\" + (new Date()).toISOString().substr(0,19);",
									"pm.environment.set(\"InboundDeliveryNotificationID\", generatedIDNID);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"ID\": \"{{InboundDeliveryNotificationID}}\",\n\t\"ProcessingTypeCode\": \"SD\",\n\t\"Item\": \n\t\t[\n\t\t\t{\n\t\t\t\t\"TypeCode\": \"14\",\n\t\t\t\t\"ProductID\": \"{{MaterialID4}}\",\n\t\t\t\t\"ItemQuantity\": \n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"Quantity\": \"{{ProductionProcurementQuantity}}\",\n\t\t\t\t\t\t\t\"UnitCode\": \"EA\",\n\t\t\t\t\t\t\t\"QuantityRoleCode\": \"18\",\n\t\t\t\t\t\t\t\"QuantityTypeCode\": \"EA\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\"ItemInboundDeliveryRequestReference\": \n\t\t\t\t\t{\n                \t\t\"ID\": \"{{InboundDeliveryRequestID}}\",\n                        \"ItemID\": \"{{InboundDeliveryRequestItemID}}\",\n                        \"ItemTypeCode\": \"14\",\n                        \"ItemUUID\": \"{{InboundDeliveryRequestItemUUID}}\",\n                        \"TypeCode\": \"59\",\n                        \"UUID\": \"{{InboundDeliveryRequestUUID}}\",\n                        \"RelationshipRoleCode\": \"1\"\n\t\t\t\t\t},\n\t\t\t\t\"ItemPurchaseOrderReference\": \n\t\t\t\t\t{\n\t\t\t\t\t\t\"ID\": \"{{PurchaseOrderID}}\",\n\t\t\t\t\t\t\"ItemID\": \"1\",\n\t\t\t\t\t\t\"ItemTypeCode\": \"18\",\n\t\t\t\t\t\t\"ItemUUID\": \"{{PurchaseOrderItemUUID}}\",\n\t\t\t\t\t\t\"TypeCode\": \"001\",\n\t\t\t\t\t\t\"UUID\": \"{{PurchaseOrderUUID}}\",\n\t\t\t\t\t\t\"RelationshipRoleCode\": \"1\"\n\t\t\t\t\t},\n\t\t\t\t\"ItemSellerParty\": \n\t\t\t\t\t{\n\t\t\t\t\t\t\"PartyID\": \"{{SupplierID3}}\"\n\t\t\t\t\t},\n\t\t\t\t\"ItemBuyerParty\": \n\t\t\t\t\t{\n\t\t\t\t\t\t\"PartyID\": \"{{CompanyID}}\"\n\t\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"TypeCode\": \"14\",\n\t\t\t\t\"ProductID\": \"{{MaterialID5}}\",\n\t\t\t\t\"ItemQuantity\": \n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"Quantity\": \"{{ProductionProcurementQuantity}}\",\n\t\t\t\t\t\t\t\"UnitCode\": \"EA\",\n\t\t\t\t\t\t\t\"QuantityRoleCode\": \"18\",\n\t\t\t\t\t\t\t\"QuantityTypeCode\": \"EA\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\"ItemInboundDeliveryRequestReference\": \n\t\t\t\t\t{\n                \t\t\"ID\": \"{{InboundDeliveryRequestID}}\",\n                        \"ItemID\": \"{{InboundDeliveryRequestItemID2}}\",\n                        \"ItemTypeCode\": \"14\",\n                        \"ItemUUID\": \"{{InboundDeliveryRequestItemUUID2}}\",\n                        \"TypeCode\": \"59\",\n                        \"UUID\": \"{{InboundDeliveryRequestUUID}}\",\n                        \"RelationshipRoleCode\": \"1\"\n\t\t\t\t\t},\n\t\t\t\t\"ItemPurchaseOrderReference\": \n\t\t\t\t\t{\n\t\t\t\t\t\t\"ID\": \"{{PurchaseOrderID}}\",\n\t\t\t\t\t\t\"ItemID\": \"2\",\n\t\t\t\t\t\t\"ItemTypeCode\": \"18\",\n\t\t\t\t\t\t\"ItemUUID\": \"{{PurchaseOrderItemUUID2}}\",\n\t\t\t\t\t\t\"TypeCode\": \"001\",\n\t\t\t\t\t\t\"UUID\": \"{{PurchaseOrderUUID}}\",\n\t\t\t\t\t\t\"RelationshipRoleCode\": \"1\"\n\t\t\t\t\t},\n\t\t\t\t\"ItemSellerParty\": \n\t\t\t\t\t{\n\t\t\t\t\t\t\"PartyID\": \"{{SupplierID3}}\"\n\t\t\t\t\t},\n\t\t\t\t\"ItemBuyerParty\": \n\t\t\t\t\t{\n\t\t\t\t\t\t\"PartyID\": \"{{CompanyID}}\"\n\t\t\t\t\t}\n\t\t\t}\n\t\t]\n}    \t"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khinbounddelivery/InboundDeliveryCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khinbounddelivery",
								"InboundDeliveryCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post goods receipt",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
								"exec": [
									"// Validations",
									"var jsonResponse = pm.response.json();",
									"pm.test(\"Goods receipt posted\", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Inbound delivery notification released\", function () { pm.expect(jsonResponse.d.results.ReleaseStatusCode).to.eql(\"3\") });",
									"pm.test(\"Inbound delivery notification consistent\", function () { pm.expect(jsonResponse.d.results.ConsistencyStatusCode).to.eql(\"3\") });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8a3f7470-2b39-44aa-8f5f-4ef0f66df2cb",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khinbounddelivery/PostGoodsReceipt?ObjectID='{{InboundDeliveryNotificationObjectID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khinbounddelivery",
								"PostGoodsReceipt"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{InboundDeliveryNotificationObjectID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get purchase order and check status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c38f9015-76c9-4c82-98d1-4b7251b30302",
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Purchase order \" + jsonResponse.d.results[0].ID + \" found\", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Consistency status: \" + jsonResponse.d.results[0].ConsistencyStatusCodeText, function () { pm.expect(jsonResponse.d.results[0].ConsistencyStatusCode).to.eql(\"3\") });",
									"pm.test(\"Acknowledgment status: \" + jsonResponse.d.results[0].AcknowledgmentStatusCodeText, function () { pm.expect(jsonResponse.d.results[0].AcknowledgmentStatusCode).to.eql(\"7\") });",
									"pm.test(\"Delivery status: \" + jsonResponse.d.results[0].DeliveryStatusCodeText, function () { pm.expect(jsonResponse.d.results[0].DeliveryStatusCode).to.eql(\"3\") });",
									"pm.test(\"Invoicing status: \" + jsonResponse.d.results[0].InvoicingStatusCodeText, function () { pm.expect(jsonResponse.d.results[0].InvoicingStatusCode).to.eql(\"1\") });",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "e2b6146b-08a2-433f-9a29-32aba0d2586f",
								"exec": [
									"// Delay release of customer invoice request and let the system complete the async. integration",
									"setTimeout(function() {}, 5000); // wait 5 sec"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khpurchaseorder/PurchaseOrderCollection?$format=json&$filter=ID eq '{{PurchaseOrderID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khpurchaseorder",
								"PurchaseOrderCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "",
									"disabled": true
								},
								{
									"key": "$filter",
									"value": "ID eq '{{PurchaseOrderID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create production proposal (SOAP 1.1)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "691edeb4-7bfd-4e5f-8c75-c140cf9f04a2",
								"exec": [
									"let jsonResponse = xml2Json(responseBody);",
									"",
									"pm.environment.set(\"ProductionPlanningOrderID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:CreateProductionPlanningOrderResponse'].ProductionProposalsCreated.ProductionProposalID);",
									"",
									"// Validations",
									"pm.test(\"Production proposal \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:CreateProductionPlanningOrderResponse'].ProductionProposalsCreated.ProductionProposalID + \" created\", function () { pm.response.to.have.status(200) });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "3e65b165-9326-4ac2-9a90-37c0ed7a5612",
								"exec": [
									"// Set production proposal material availability date with format 2019-02-05T12:00:00.0000000Z",
									"let moment = require('moment');",
									"let availablitityDate = moment().add(1,'day').toISOString().substr(0,10) + \"T00:00:00.0000000Z\";",
									"pm.environment.set(\"MaterialAvailabilityDateTime\", availablitityDate);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{CommunicationUserPW}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{CommunicationUser}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:CreateProductionProposal>\r\n         <CreateProductionPlanningOrder>\r\n            <SequenceNumber>1</SequenceNumber>\r\n            <SupplyPlanningAreaID>{{SupplyPlanningAreaID}}</SupplyPlanningAreaID>\r\n            <MaterialID>{{MaterialID3}}</MaterialID>\r\n            <!-- <ProductRequirementSpecificationID>?</ProductRequirementSpecificationID> -->\r\n            <MaterialAvailabilityDateTime timeZoneCode=\"CET\">{{MaterialAvailabilityDateTime}}</MaterialAvailabilityDateTime> <!-- Format: 2019-02-05T12:00:00.0000000Z -->\r\n            <Quantity unitCode=\"EA\">{{ProductionPlanningOrderQuantity}}</Quantity>\r\n            <QuantityTypeCode>EA</QuantityTypeCode>\r\n         </CreateProductionPlanningOrder>\r\n      </glob:CreateProductionProposal>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/manageproductionproposalin",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"bc",
								"srt",
								"scs",
								"sap",
								"manageproductionproposalin"
							]
						}
					},
					"response": [
						{
							"name": "Create production proposal (Soap 1.1)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:CreateProductionProposal>\r\n         <CreateProductionPlanningOrder>\r\n            <SequenceNumber>1</SequenceNumber>\r\n            <SupplyPlanningAreaID>P1100</SupplyPlanningAreaID>\r\n            <MaterialID>P100101</MaterialID>\r\n            <!-- <ProductRequirementSpecificationID>?</ProductRequirementSpecificationID> -->\r\n            <MaterialAvailabilityDateTime timeZoneCode=\"CET\">2019-02-05T12:00:00.0000000Z</MaterialAvailabilityDateTime>\r\n            <Quantity unitCode=\"EA\">1</Quantity>\r\n            <QuantityTypeCode>EA</QuantityTypeCode>\r\n         </CreateProductionPlanningOrder>\r\n      </glob:CreateProductionProposal>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/manageproductionproposalin",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"manageproductionproposalin"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "html",
							"header": [
								{
									"key": "content-type",
									"value": "text/html; charset=utf-8"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "505"
								},
								{
									"key": "sap-system",
									"value": "KHL"
								},
								{
									"key": "www-authenticate",
									"value": "Basic realm=\"SAP NetWeaver Application Server [KHL/171][alias]\""
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=31536000; includeSubDomains"
								}
							],
							"cookie": [],
							"body": "<html>\n    <head>\n        <title>Logon Error Message</title>\n        <META http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\">\n        <style type=\"text/css\">body { font-family:tahoma,helvetica,sans-serif;color:#333333;background-color:#FFFFFF; }td { font-family:tahoma,helvetica,sans-serif;font-size:70%;color:#333333; }h1 { font-family:tahoma,helvetica,sans-serif;font-size:160%;font-weight:bold;margin-top:15px;margin-bottom:3px;color:#003366; }h2 { font-family:verdana,helvetica,sans-serif;font-size:120%;font-style:italic;font-weight:bold;margin-top:6px;margin-bottom:6px;color:#999900; }p { font-family:tahoma,helvetica,sans-serif;color:#333333;margin-top:4px;margin-bottom:4px; }ul { font-family:tahoma,helvetica,sans-serif;color:#333333;list-style-type:square;margin-top:8px;margin-bottom:8px; }li { font-family:tahoma,helvetica,sans-serif;color:#33333;margin-top:4px; }.emphasize { color:#333333;background-color:#C8E3FF;padding:5px;}.note { color:#CC6600; }a { font-family:tahoma,helvetica,sans-serif;text-decoration:underline;color:#336699; }a:visited { color:#001166; }a:hover { text-decoration:none; }</style>\n    </head>\n    <body>\n        <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\">\n            <tr>\n                <td>\n                    <h1>Logon failed</h1>\n                </td>\n            </tr>\n        </table>\n    </body>\n</html>"
						}
					]
				},
				{
					"name": "Get production proposal",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c38f9015-76c9-4c82-98d1-4b7251b30302",
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"ProductionPlanningOrderID\", jsonResponse.d.results[0].ID);",
									"pm.environment.set(\"ProductionPlanningOrderObjectID\", jsonResponse.d.results[0].ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Production proposal \" +  jsonResponse.d.results[0].ID + \" found and returned\", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Status: \" + jsonResponse.d.results[0].LifeCycleStatusCodeText, function () { pm.response.to.have.status(200) });",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khproductionplanningorder/ProductionPlanningOrderCollection?$format=json&$expand=MainMaterialOutput,ProductionRequisition&$filter=ID eq '{{ProductionPlanningOrderID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khproductionplanningorder",
								"ProductionPlanningOrderCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "MainMaterialOutput,ProductionRequisition"
								},
								{
									"key": "$filter",
									"value": "ID eq '{{ProductionPlanningOrderID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Release production proposal",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Production proposal \" + jsonResponse.d.results.ID + \" released\", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"2\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khproductionplanningorder/Release?ObjectID='{{ProductionPlanningOrderObjectID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khproductionplanningorder",
								"Release"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{ProductionPlanningOrderObjectID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Query production order (SOAP 1.1)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "691edeb4-7bfd-4e5f-8c75-c140cf9f04a2",
								"exec": [
									"let jsonResponse = xml2Json(responseBody);",
									"pm.environment.set(\"ProductionOrderID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:ProductionOrderByElementsQueryMessage'].ProductionOrder.ProductionOrderID);",
									"",
									"// Validations",
									"pm.test(\"Production order \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:ProductionOrderByElementsQueryMessage'].ProductionOrder.ProductionOrderID + \" found\", function () { pm.response.to.have.status(200) });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "3e65b165-9326-4ac2-9a90-37c0ed7a5612",
								"exec": [
									"// Delay and let the system complete the async. integration",
									"setTimeout(function() {}, 5000); // wait 5 sec"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{CommunicationUserPW}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{CommunicationUser}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:ProductionOrderByOverviewQuery_sync>\r\n         <ProcessingConditions>\r\n            <QueryHitsMaximumNumberValue>10</QueryHitsMaximumNumberValue>\r\n            <QueryHitsUnlimitedIndicator>false</QueryHitsUnlimitedIndicator>\r\n            <LastReturnedObjectID></LastReturnedObjectID>\r\n         </ProcessingConditions>\r\n         <ProductionOrderSelectionByElements>\r\n            <SelectionByProductionRequestID>\r\n               <InclusionExclusionCode>I</InclusionExclusionCode>\r\n               <IntervalBoundaryTypeCode>1</IntervalBoundaryTypeCode>\r\n               <LowerBoundaryID>{{ProductionPlanningOrderID}}</LowerBoundaryID>\r\n            </SelectionByProductionRequestID>\r\n         </ProductionOrderSelectionByElements>\r\n      </glob:ProductionOrderByOverviewQuery_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/queryproductionorderin",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"bc",
								"srt",
								"scs",
								"sap",
								"queryproductionorderin"
							]
						}
					},
					"response": [
						{
							"name": "Create production proposal (Soap 1.1)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:CreateProductionProposal>\r\n         <CreateProductionPlanningOrder>\r\n            <SequenceNumber>1</SequenceNumber>\r\n            <SupplyPlanningAreaID>P1100</SupplyPlanningAreaID>\r\n            <MaterialID>P100101</MaterialID>\r\n            <!-- <ProductRequirementSpecificationID>?</ProductRequirementSpecificationID> -->\r\n            <MaterialAvailabilityDateTime timeZoneCode=\"CET\">2019-02-05T12:00:00.0000000Z</MaterialAvailabilityDateTime>\r\n            <Quantity unitCode=\"EA\">1</Quantity>\r\n            <QuantityTypeCode>EA</QuantityTypeCode>\r\n         </CreateProductionPlanningOrder>\r\n      </glob:CreateProductionProposal>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/manageproductionproposalin",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"manageproductionproposalin"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "html",
							"header": [
								{
									"key": "content-type",
									"value": "text/html; charset=utf-8"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "505"
								},
								{
									"key": "sap-system",
									"value": "KHL"
								},
								{
									"key": "www-authenticate",
									"value": "Basic realm=\"SAP NetWeaver Application Server [KHL/171][alias]\""
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=31536000; includeSubDomains"
								}
							],
							"cookie": [],
							"body": "<html>\n    <head>\n        <title>Logon Error Message</title>\n        <META http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\">\n        <style type=\"text/css\">body { font-family:tahoma,helvetica,sans-serif;color:#333333;background-color:#FFFFFF; }td { font-family:tahoma,helvetica,sans-serif;font-size:70%;color:#333333; }h1 { font-family:tahoma,helvetica,sans-serif;font-size:160%;font-weight:bold;margin-top:15px;margin-bottom:3px;color:#003366; }h2 { font-family:verdana,helvetica,sans-serif;font-size:120%;font-style:italic;font-weight:bold;margin-top:6px;margin-bottom:6px;color:#999900; }p { font-family:tahoma,helvetica,sans-serif;color:#333333;margin-top:4px;margin-bottom:4px; }ul { font-family:tahoma,helvetica,sans-serif;color:#333333;list-style-type:square;margin-top:8px;margin-bottom:8px; }li { font-family:tahoma,helvetica,sans-serif;color:#33333;margin-top:4px; }.emphasize { color:#333333;background-color:#C8E3FF;padding:5px;}.note { color:#CC6600; }a { font-family:tahoma,helvetica,sans-serif;text-decoration:underline;color:#336699; }a:visited { color:#001166; }a:hover { text-decoration:none; }</style>\n    </head>\n    <body>\n        <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\">\n            <tr>\n                <td>\n                    <h1>Logon failed</h1>\n                </td>\n            </tr>\n        </table>\n    </body>\n</html>"
						}
					]
				},
				{
					"name": "Get production order",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c38f9015-76c9-4c82-98d1-4b7251b30302",
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"ProductionOrderID\", jsonResponse.d.results[0].ID);",
									"pm.environment.set(\"ProductionOrderObjectID\", jsonResponse.d.results[0].ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Production order \" +  jsonResponse.d.results[0].ID + \" for product \" + jsonResponse.d.results[0].MainProductOutput.ProductID + \" found and returned\", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Status: \" + jsonResponse.d.results[0].LifeCycleStatusCodeText, function () { pm.response.to.have.status(200) });",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khproductionorder/ProductionOrderCollection?$format=json&$expand=MainProductOutput,Notes,ProductionLot&$filter=ID eq '{{ProductionOrderID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khproductionorder",
								"ProductionOrderCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$expand",
									"value": "MainProductOutput,Notes,ProductionLot"
								},
								{
									"key": "$filter",
									"value": "ID eq '{{ProductionOrderID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Release production order",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Production order \" + jsonResponse.d.results.ID + \" released\", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"2\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khproductionorder/Release?ObjectID='{{ProductionOrderObjectID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khproductionorder",
								"Release"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{ProductionOrderObjectID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Query production lot (SOAP 1.1)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "691edeb4-7bfd-4e5f-8c75-c140cf9f04a2",
								"exec": [
									"let jsonResponse = xml2Json(responseBody);",
									"pm.environment.set(\"ProductionLotID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:ProductionLotByElementsResponse_sync'].ProductionLot.ProductionLotID);",
									"pm.environment.set(\"ProductionLotUUID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:ProductionLotByElementsResponse_sync'].ProductionLot.ProductionLotUUID);",
									"pm.environment.set(\"ProductionTaskID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:ProductionLotByElementsResponse_sync'].ProductionLot.ConfirmationGroup.ProductionTask.ProductionTaskID);",
									"pm.environment.set(\"ProductionTaskUUID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:ProductionLotByElementsResponse_sync'].ProductionLot.ConfirmationGroup.ProductionTask.ProducionTaskUUID);",
									"pm.environment.set(\"ConfirmationGroupUUID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:ProductionLotByElementsResponse_sync'].ProductionLot.ConfirmationGroup.ConfirmationGroupUUID);",
									"pm.environment.set(\"ReportingPointUUID\", jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:ProductionLotByElementsResponse_sync'].ProductionLot.ConfirmationGroup.ReportingPoint.ReportingPointUUID);",
									"",
									"// Validations",
									"pm.test(\"Production lot \" + jsonResponse['soap-env:Envelope']['soap-env:Body']['n0:ProductionLotByElementsResponse_sync'].ProductionLot.ProductionLotID + \" found\", function () { pm.response.to.have.status(200) });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "3e65b165-9326-4ac2-9a90-37c0ed7a5612",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{CommunicationUserPW}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{CommunicationUser}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:ProductionLotByElementsQuery_sync>\r\n         <ProductionLotSelectionByElements>\r\n            <SelectionByProductionOrderID>\r\n               <InclusionExclusionCode>I</InclusionExclusionCode>\r\n               <IntervalBoundaryTypeCode>1</IntervalBoundaryTypeCode>\r\n               <LowerBoundaryProductionOrderID>{{ProductionOrderID}}</LowerBoundaryProductionOrderID>\r\n            </SelectionByProductionOrderID>\r\n         </ProductionLotSelectionByElements>\r\n         <ProcessingConditions>\r\n            <QueryHitsMaximumNumberValue>10</QueryHitsMaximumNumberValue>\r\n            <QueryHitsUnlimitedIndicator>false</QueryHitsUnlimitedIndicator>\r\n            <LastReturnedObjectID></LastReturnedObjectID>\r\n         </ProcessingConditions>\r\n      </glob:ProductionLotByElementsQuery_sync>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/queryproductionlotisiin",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"bc",
								"srt",
								"scs",
								"sap",
								"queryproductionlotisiin"
							]
						}
					},
					"response": [
						{
							"name": "Create production proposal (Soap 1.1)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:CreateProductionProposal>\r\n         <CreateProductionPlanningOrder>\r\n            <SequenceNumber>1</SequenceNumber>\r\n            <SupplyPlanningAreaID>P1100</SupplyPlanningAreaID>\r\n            <MaterialID>P100101</MaterialID>\r\n            <!-- <ProductRequirementSpecificationID>?</ProductRequirementSpecificationID> -->\r\n            <MaterialAvailabilityDateTime timeZoneCode=\"CET\">2019-02-05T12:00:00.0000000Z</MaterialAvailabilityDateTime>\r\n            <Quantity unitCode=\"EA\">1</Quantity>\r\n            <QuantityTypeCode>EA</QuantityTypeCode>\r\n         </CreateProductionPlanningOrder>\r\n      </glob:CreateProductionProposal>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/manageproductionproposalin",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"manageproductionproposalin"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "html",
							"header": [
								{
									"key": "content-type",
									"value": "text/html; charset=utf-8"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "505"
								},
								{
									"key": "sap-system",
									"value": "KHL"
								},
								{
									"key": "www-authenticate",
									"value": "Basic realm=\"SAP NetWeaver Application Server [KHL/171][alias]\""
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=31536000; includeSubDomains"
								}
							],
							"cookie": [],
							"body": "<html>\n    <head>\n        <title>Logon Error Message</title>\n        <META http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\">\n        <style type=\"text/css\">body { font-family:tahoma,helvetica,sans-serif;color:#333333;background-color:#FFFFFF; }td { font-family:tahoma,helvetica,sans-serif;font-size:70%;color:#333333; }h1 { font-family:tahoma,helvetica,sans-serif;font-size:160%;font-weight:bold;margin-top:15px;margin-bottom:3px;color:#003366; }h2 { font-family:verdana,helvetica,sans-serif;font-size:120%;font-style:italic;font-weight:bold;margin-top:6px;margin-bottom:6px;color:#999900; }p { font-family:tahoma,helvetica,sans-serif;color:#333333;margin-top:4px;margin-bottom:4px; }ul { font-family:tahoma,helvetica,sans-serif;color:#333333;list-style-type:square;margin-top:8px;margin-bottom:8px; }li { font-family:tahoma,helvetica,sans-serif;color:#33333;margin-top:4px; }.emphasize { color:#333333;background-color:#C8E3FF;padding:5px;}.note { color:#CC6600; }a { font-family:tahoma,helvetica,sans-serif;text-decoration:underline;color:#336699; }a:visited { color:#001166; }a:hover { text-decoration:none; }</style>\n    </head>\n    <body>\n        <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\">\n            <tr>\n                <td>\n                    <h1>Logon failed</h1>\n                </td>\n            </tr>\n        </table>\n    </body>\n</html>"
						}
					]
				},
				{
					"name": "Assign production task responsible (SOAP 1.1)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "691edeb4-7bfd-4e5f-8c75-c140cf9f04a2",
								"exec": [
									"let jsonResponse = xml2Json(responseBody);",
									"",
									"// Validations",
									"pm.test(\"Production task confirmed\", function () { pm.response.to.have.status(200) });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "3e65b165-9326-4ac2-9a90-37c0ed7a5612",
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{CommunicationUserPW}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{CommunicationUser}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:ProductionLotsBundleMaintainRequest_sync_V1>\r\n         <BasicMessageHeader>\r\n            <!-- <UUID>?</UUID> -->\r\n         </BasicMessageHeader>\r\n         <ProductionLot>\r\n            <ProductionLotID>{{ProductionLotID}}</ProductionLotID>\r\n            <ProductionLotUUID>{{ProductionLotUUID}}</ProductionLotUUID>\r\n            <ConfirmationGroup>\r\n               <ConfirmationGroupUUID>{{ConfirmationGroupUUID}}</ConfirmationGroupUUID>\r\n               <ProductionTask>\r\n                  <ProductionTaskID>{{ProductionTaskID}}</ProductionTaskID>\r\n                  <ProducionTaskUUID>{{ProductionTaskUUID}}</ProducionTaskUUID>\r\n                  <ProcessorEmployeeID>{{EmployeeID2}}</ProcessorEmployeeID>\r\n                  <AssignResponsibleIndicator>true</AssignResponsibleIndicator>\r\n               </ProductionTask>\r\n            </ConfirmationGroup>\r\n         </ProductionLot>\r\n      </glob:ProductionLotsBundleMaintainRequest_sync_V1>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/manageproductionlotsin",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"bc",
								"srt",
								"scs",
								"sap",
								"manageproductionlotsin"
							]
						}
					},
					"response": [
						{
							"name": "Create production proposal (Soap 1.1)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:CreateProductionProposal>\r\n         <CreateProductionPlanningOrder>\r\n            <SequenceNumber>1</SequenceNumber>\r\n            <SupplyPlanningAreaID>P1100</SupplyPlanningAreaID>\r\n            <MaterialID>P100101</MaterialID>\r\n            <!-- <ProductRequirementSpecificationID>?</ProductRequirementSpecificationID> -->\r\n            <MaterialAvailabilityDateTime timeZoneCode=\"CET\">2019-02-05T12:00:00.0000000Z</MaterialAvailabilityDateTime>\r\n            <Quantity unitCode=\"EA\">1</Quantity>\r\n            <QuantityTypeCode>EA</QuantityTypeCode>\r\n         </CreateProductionPlanningOrder>\r\n      </glob:CreateProductionProposal>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/manageproductionproposalin",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"manageproductionproposalin"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "html",
							"header": [
								{
									"key": "content-type",
									"value": "text/html; charset=utf-8"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "505"
								},
								{
									"key": "sap-system",
									"value": "KHL"
								},
								{
									"key": "www-authenticate",
									"value": "Basic realm=\"SAP NetWeaver Application Server [KHL/171][alias]\""
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=31536000; includeSubDomains"
								}
							],
							"cookie": [],
							"body": "<html>\n    <head>\n        <title>Logon Error Message</title>\n        <META http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\">\n        <style type=\"text/css\">body { font-family:tahoma,helvetica,sans-serif;color:#333333;background-color:#FFFFFF; }td { font-family:tahoma,helvetica,sans-serif;font-size:70%;color:#333333; }h1 { font-family:tahoma,helvetica,sans-serif;font-size:160%;font-weight:bold;margin-top:15px;margin-bottom:3px;color:#003366; }h2 { font-family:verdana,helvetica,sans-serif;font-size:120%;font-style:italic;font-weight:bold;margin-top:6px;margin-bottom:6px;color:#999900; }p { font-family:tahoma,helvetica,sans-serif;color:#333333;margin-top:4px;margin-bottom:4px; }ul { font-family:tahoma,helvetica,sans-serif;color:#333333;list-style-type:square;margin-top:8px;margin-bottom:8px; }li { font-family:tahoma,helvetica,sans-serif;color:#33333;margin-top:4px; }.emphasize { color:#333333;background-color:#C8E3FF;padding:5px;}.note { color:#CC6600; }a { font-family:tahoma,helvetica,sans-serif;text-decoration:underline;color:#336699; }a:visited { color:#001166; }a:hover { text-decoration:none; }</style>\n    </head>\n    <body>\n        <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\">\n            <tr>\n                <td>\n                    <h1>Logon failed</h1>\n                </td>\n            </tr>\n        </table>\n    </body>\n</html>"
						}
					]
				},
				{
					"name": "Confirm production reporting point (SOAP 1.1)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "691edeb4-7bfd-4e5f-8c75-c140cf9f04a2",
								"exec": [
									"let jsonResponse = xml2Json(responseBody);",
									"",
									"// Validations",
									"pm.test(\"Production task confirmed\", function () { pm.response.to.have.status(200) });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "3e65b165-9326-4ac2-9a90-37c0ed7a5612",
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{CommunicationUserPW}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{CommunicationUser}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:ProductionLotsBundleMaintainRequest_sync_V1>\r\n         <BasicMessageHeader>\r\n            <!-- <UUID>?</UUID> -->\r\n         </BasicMessageHeader>\r\n         <ProductionLot>\r\n            <ProductionLotID>{{ProductionLotID}}</ProductionLotID>\r\n            <ProductionLotUUID>{{ProductionLotUUID}}</ProductionLotUUID>\r\n            <ConfirmationGroup>\r\n               <ConfirmationGroupUUID>{{ConfirmationGroupUUID}}</ConfirmationGroupUUID>\r\n               <ProductionTask>\r\n                  <ProductionTaskID>{{ProductionTaskID}}</ProductionTaskID>\r\n                  <ProducionTaskUUID>{{ProductionTaskUUID}}</ProducionTaskUUID>\r\n               </ProductionTask>\r\n               <ReportingPoint>\r\n                  <ReportingPointID>END</ReportingPointID>\r\n                  <ReportingPointUUID>{{ReportingPointUUID}}</ReportingPointUUID>\r\n                  <!--<TotalConfirmedQuantity unitCode=\"EA\">2</TotalConfirmedQuantity>-->\r\n                  <ConfirmedQuantity unitCode=\"EA\">{{ProductionConfirmedQuantity}}</ConfirmedQuantity>\r\n                  <!--<TotalConfirmedScrap unitCode=\"EA\">1</TotalConfirmedScrap>-->\r\n                  <ConfirmedScrap unitCode=\"EA\">{{ProductionConfirmedScrapQuantity}}</ConfirmedScrap>\r\n                  <OpenQuantity unitCode=\"EA\">0</OpenQuantity>\r\n                  <DeviationReason listAgencyID=\"EA\">{{DeviationReason}}</DeviationReason>\r\n                  <!--<PlannedQuantity unitCode=\"EA\">3</PlannedQuantity>-->\r\n               </ReportingPoint>\r\n            </ConfirmationGroup>\r\n         </ProductionLot>\r\n      </glob:ProductionLotsBundleMaintainRequest_sync_V1>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/manageproductionlotsin",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"bc",
								"srt",
								"scs",
								"sap",
								"manageproductionlotsin"
							]
						}
					},
					"response": [
						{
							"name": "Create production proposal (Soap 1.1)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:CreateProductionProposal>\r\n         <CreateProductionPlanningOrder>\r\n            <SequenceNumber>1</SequenceNumber>\r\n            <SupplyPlanningAreaID>P1100</SupplyPlanningAreaID>\r\n            <MaterialID>P100101</MaterialID>\r\n            <!-- <ProductRequirementSpecificationID>?</ProductRequirementSpecificationID> -->\r\n            <MaterialAvailabilityDateTime timeZoneCode=\"CET\">2019-02-05T12:00:00.0000000Z</MaterialAvailabilityDateTime>\r\n            <Quantity unitCode=\"EA\">1</Quantity>\r\n            <QuantityTypeCode>EA</QuantityTypeCode>\r\n         </CreateProductionPlanningOrder>\r\n      </glob:CreateProductionProposal>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/manageproductionproposalin",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"manageproductionproposalin"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "html",
							"header": [
								{
									"key": "content-type",
									"value": "text/html; charset=utf-8"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "505"
								},
								{
									"key": "sap-system",
									"value": "KHL"
								},
								{
									"key": "www-authenticate",
									"value": "Basic realm=\"SAP NetWeaver Application Server [KHL/171][alias]\""
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=31536000; includeSubDomains"
								}
							],
							"cookie": [],
							"body": "<html>\n    <head>\n        <title>Logon Error Message</title>\n        <META http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\">\n        <style type=\"text/css\">body { font-family:tahoma,helvetica,sans-serif;color:#333333;background-color:#FFFFFF; }td { font-family:tahoma,helvetica,sans-serif;font-size:70%;color:#333333; }h1 { font-family:tahoma,helvetica,sans-serif;font-size:160%;font-weight:bold;margin-top:15px;margin-bottom:3px;color:#003366; }h2 { font-family:verdana,helvetica,sans-serif;font-size:120%;font-style:italic;font-weight:bold;margin-top:6px;margin-bottom:6px;color:#999900; }p { font-family:tahoma,helvetica,sans-serif;color:#333333;margin-top:4px;margin-bottom:4px; }ul { font-family:tahoma,helvetica,sans-serif;color:#333333;list-style-type:square;margin-top:8px;margin-bottom:8px; }li { font-family:tahoma,helvetica,sans-serif;color:#33333;margin-top:4px; }.emphasize { color:#333333;background-color:#C8E3FF;padding:5px;}.note { color:#CC6600; }a { font-family:tahoma,helvetica,sans-serif;text-decoration:underline;color:#336699; }a:visited { color:#001166; }a:hover { text-decoration:none; }</style>\n    </head>\n    <body>\n        <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\">\n            <tr>\n                <td>\n                    <h1>Logon failed</h1>\n                </td>\n            </tr>\n        </table>\n    </body>\n</html>"
						}
					]
				},
				{
					"name": "Finish production task (SOAP 1.1)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "691edeb4-7bfd-4e5f-8c75-c140cf9f04a2",
								"exec": [
									"let jsonResponse = xml2Json(responseBody);",
									"",
									"// Validations",
									"pm.test(\"Production task finished\", function () { pm.response.to.have.status(200) });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "3e65b165-9326-4ac2-9a90-37c0ed7a5612",
								"exec": [
									"// Set production execution date with format 2019-02-06T14:00:00.1234567Z",
									"let moment = require('moment');",
									"let dateTime = moment().add(0,'day').toISOString().substr(0,28);",
									"pm.environment.set(\"ProductionExecutionDateTime\", dateTime);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{CommunicationUserPW}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{CommunicationUser}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:ProductionLotsBundleMaintainRequest_sync_V1>\r\n         <BasicMessageHeader>\r\n            <!-- <UUID>?</UUID> -->\r\n         </BasicMessageHeader>\r\n         <ProductionLot>\r\n            <ProductionLotID>{{ProductionLotID}}</ProductionLotID>\r\n            <ProductionLotUUID>{{ProductionLotUUID}}</ProductionLotUUID>\r\n            <ConfirmationGroup>\r\n               <ConfirmationGroupUUID>{{ConfirmationGroupUUID}}</ConfirmationGroupUUID>\r\n               <ProductionTask>\r\n                  <ProductionTaskID>{{ProductionTaskID}}</ProductionTaskID>\r\n                  <ProducionTaskUUID>{{ProductionTaskUUID}}</ProducionTaskUUID>\r\n                  <ProcessorEmployeeID>{{EmployeeID2}}</ProcessorEmployeeID>\r\n                  <ExecutionDateTime>{{ProductionExecutionDateTime}}</ExecutionDateTime>\r\n                  <ConfirmationCompletedRequiredIndicator>true</ConfirmationCompletedRequiredIndicator>\r\n               </ProductionTask>\r\n            </ConfirmationGroup>\r\n         </ProductionLot>\r\n      </glob:ProductionLotsBundleMaintainRequest_sync_V1>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/manageproductionlotsin",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"bc",
								"srt",
								"scs",
								"sap",
								"manageproductionlotsin"
							]
						}
					},
					"response": [
						{
							"name": "Create production proposal (Soap 1.1)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:glob=\"http://sap.com/xi/SAPGlobal20/Global\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <glob:CreateProductionProposal>\r\n         <CreateProductionPlanningOrder>\r\n            <SequenceNumber>1</SequenceNumber>\r\n            <SupplyPlanningAreaID>P1100</SupplyPlanningAreaID>\r\n            <MaterialID>P100101</MaterialID>\r\n            <!-- <ProductRequirementSpecificationID>?</ProductRequirementSpecificationID> -->\r\n            <MaterialAvailabilityDateTime timeZoneCode=\"CET\">2019-02-05T12:00:00.0000000Z</MaterialAvailabilityDateTime>\r\n            <Quantity unitCode=\"EA\">1</Quantity>\r\n            <QuantityTypeCode>EA</QuantityTypeCode>\r\n         </CreateProductionPlanningOrder>\r\n      </glob:CreateProductionProposal>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
								},
								"url": {
									"raw": "https://{{TenantHostname}}/sap/bc/srt/scs/sap/manageproductionproposalin",
									"protocol": "https",
									"host": [
										"{{TenantHostname}}"
									],
									"path": [
										"sap",
										"bc",
										"srt",
										"scs",
										"sap",
										"manageproductionproposalin"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "html",
							"header": [
								{
									"key": "content-type",
									"value": "text/html; charset=utf-8"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "505"
								},
								{
									"key": "sap-system",
									"value": "KHL"
								},
								{
									"key": "www-authenticate",
									"value": "Basic realm=\"SAP NetWeaver Application Server [KHL/171][alias]\""
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=31536000; includeSubDomains"
								}
							],
							"cookie": [],
							"body": "<html>\n    <head>\n        <title>Logon Error Message</title>\n        <META http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\">\n        <style type=\"text/css\">body { font-family:tahoma,helvetica,sans-serif;color:#333333;background-color:#FFFFFF; }td { font-family:tahoma,helvetica,sans-serif;font-size:70%;color:#333333; }h1 { font-family:tahoma,helvetica,sans-serif;font-size:160%;font-weight:bold;margin-top:15px;margin-bottom:3px;color:#003366; }h2 { font-family:verdana,helvetica,sans-serif;font-size:120%;font-style:italic;font-weight:bold;margin-top:6px;margin-bottom:6px;color:#999900; }p { font-family:tahoma,helvetica,sans-serif;color:#333333;margin-top:4px;margin-bottom:4px; }ul { font-family:tahoma,helvetica,sans-serif;color:#333333;list-style-type:square;margin-top:8px;margin-bottom:8px; }li { font-family:tahoma,helvetica,sans-serif;color:#33333;margin-top:4px; }.emphasize { color:#333333;background-color:#C8E3FF;padding:5px;}.note { color:#CC6600; }a { font-family:tahoma,helvetica,sans-serif;text-decoration:underline;color:#336699; }a:visited { color:#001166; }a:hover { text-decoration:none; }</style>\n    </head>\n    <body>\n        <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\">\n            <tr>\n                <td>\n                    <h1>Logon failed</h1>\n                </td>\n            </tr>\n        </table>\n    </body>\n</html>"
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "eac541ef-d6c0-4a0f-8cb4-275b9acc9f45",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "9c2bce22-da6d-4dea-843c-f0b83cb27a3c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Pay Due Items using Bank Statements",
			"item": [
				{
					"name": "Get previous bank statement",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4530b231-dcf4-4213-a5b0-ddc302f05671",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validate response",
									"pm.test(\"Bank statement found; Bank statement ID: \" + jsonResponse.d.results[0].ID, function () { pm.response.to.have.status(200) });",
									"",
									"// Persist data from last bank statement",
									"for (let index = 0; index < 1; index++)",
									"{ ",
									"    pm.environment.set(\"LastBankStatementID\", jsonResponse.d.results[0].ID);",
									"    pm.environment.set(\"LastBankStatementClosingBalanceAmount\", jsonResponse.d.results[0].ClosingBalanceAmount);",
									"    pm.environment.set(\"LastBankStatementClosingBalanceCurrency\", jsonResponse.d.results[0].CurrencyCode);",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "b3104f97-6b51-45d9-b75c-e93d5dbf90a5",
								"exec": [
									"// Initialize variables of the last bank statement",
									"// These values apply if no bank statement has been posted before",
									"pm.environment.unset(\"LastBankStatementID\");",
									"pm.environment.set(\"LastBankStatementClosingBalanceAmount\", 0);",
									"pm.environment.set(\"LastBankStatementClosingBalanceCurrency\", \"USD\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khhousebankstatement/HouseBankStatementCollection?$filter=HouseBankAccountID eq '{{HouseBankAccountID}}' and LifeCycleStatusCode eq '2'&$format=json&$orderby=ValidityYear desc, ID desc&$top=1",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khhousebankstatement",
								"HouseBankStatementCollection"
							],
							"query": [
								{
									"key": "$filter",
									"value": "HouseBankAccountID eq '{{HouseBankAccountID}}' and LifeCycleStatusCode eq '2'",
									"description": "ValidityYear eq '{{FiscalYear}}' and HouseBankAccountID eq '{{HouseBankAccountID}}'"
								},
								{
									"key": "$format",
									"value": "json",
									"description": "HouseBankAccountID eq '{{HouseBankAccountID}}' and LifeCycleStatusCode eq '5'"
								},
								{
									"key": "$orderby",
									"value": "ValidityYear desc, ID desc"
								},
								{
									"key": "$top",
									"value": "1"
								}
							]
						},
						"description": "Request predecessor bank statement to get closing balance and date."
					},
					"response": []
				},
				{
					"name": "Get due items by posting date (report)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7646fa17-26d6-4799-bc82-4d7034d1e3b7",
								"exec": [
									"// Set key date to filter account receivables open items",
									"var keyDate = (new Date()).toISOString().substr(0,19);",
									"pm.environment.set(\"OpenItemsKeyDate\", keyDate);",
									"",
									"// Functions to create BAI2 bank statement file",
									"",
									"postman.setGlobalVariable(\"BAI2StmtWriter\", function BAI2StmtWriter() {",
									"    let writer = {};",
									"",
									"    writer.StartNewStatement = function StartNewStatement() {",
									"        //initializing variables",
									"        pm.globals.set(\"BAI2Transactions\", \"\");",
									"        pm.globals.set(\"BAI2CounterAccountLines\", 0);",
									"        pm.globals.set(\"BAI2CounterCreditLines\", 0);",
									"        pm.globals.set(\"BAI2CounterDebitLines\", 0);",
									"        pm.globals.set(\"BAI2TotalsDebit\", 0);",
									"        pm.globals.set(\"BAI2TotalsCredit\", 0);",
									"    };",
									"    ",
									"    writer.AddIncomingBankTransfer = function AddIncomingBankTransfer(amount, extRef, bpName) {",
									"    ",
									"        //template for record type 16 - transaction, incoming cash transfer (195) plus",
									"        //record type 88 and replace values",
									"        var trnsctn  = '16,195,[amount],0,0022640118XF,[invoice]/\\r\\n' +",
									"                       '88,YOUR REF=[invoice] ORIG CO NAME=[customer]/\\r\\n';",
									"    ",
									"        //fill in values for transaction",
									"        trnsctn = trnsctn.replace('[amount]', amount * 100);",
									"        trnsctn = trnsctn.replace(/(\\[invoice\\])/g, extRef); //replace all, using regex",
									"        trnsctn = trnsctn.replace('[customer]', bpName);",
									"        ",
									"        //add transaction to file",
									"        trnsctn = pm.globals.get(\"BAI2Transactions\") + trnsctn;",
									"        pm.globals.set(\"BAI2Transactions\", trnsctn);",
									"        ",
									"        //care for check sums",
									"        pm.globals.set(\"BAI2TotalsCredit\", pm.globals.get(\"BAI2TotalsCredit\") + amount * 100);",
									"        pm.globals.set(\"BAI2CounterAccountLines\", pm.globals.get(\"BAI2CounterAccountLines\") + 2);",
									"        pm.globals.set(\"BAI2CounterCreditLines\", pm.globals.get(\"BAI2CounterCreditLines\") + 1);",
									"    };",
									"",
									"    writer.AddOutgoingBankTransfer = function AddOutgoingBankTransfer(amount, extRef, bpName) {",
									"    ",
									"        //template for record type 16 - transaction, incoming cash transfer (195) plus",
									"        //record type 88 and replace values",
									"        var trnsctn  = '16,495,[amount],V,[date],,,,[invoice]/\\r\\n' +",
									"                       '88,YOUR REF=[invoice] BENEFICIARY=[bpName]/\\r\\n';",
									"    ",
									"        //fill in values for transaction",
									"        trnsctn = trnsctn.replace('[amount]', amount * 100);",
									"        trnsctn = trnsctn.replace(/(\\[invoice\\])/g, extRef); //replace all, using regex",
									"        trnsctn = trnsctn.replace('[bpName]', bpName);",
									"        ",
									"        //add transaction to file",
									"        trnsctn = pm.globals.get(\"BAI2Transactions\") + trnsctn;",
									"        pm.globals.set(\"BAI2Transactions\", trnsctn);",
									"        ",
									"        //care for check sums",
									"        pm.globals.set(\"BAI2TotalsDebit\", pm.globals.get(\"BAI2TotalsDebit\") + amount * 100);",
									"        pm.globals.set(\"BAI2CounterAccountLines\", pm.globals.get(\"BAI2CounterAccountLines\") + 2);",
									"        pm.globals.set(\"BAI2CounterDebitLines\", pm.globals.get(\"BAI2CounterDebitLines\") + 1);",
									"    };",
									"",
									"    writer.Finalize = function Finalize(bankAccountId, bankRoutingId, stmtDate, openingBalance) {",
									"        ",
									"        //add templates for missing templates and trailers",
									"        var stmt = \"01,10000002,SABBYD,[date],[time],[fileID],,,2/\\r\\n\" + ",
									"                   \"02,SAPBYD,[bankRoutingId],1,[date],[time],,/\\r\\n\" + ",
									"                   \"03,[bankAccId],USD,010,[openingBalance],,,015,[closingBalance],,,100,[totalCredit],[lineCountCredit],,400,[totalDebit],[lineCountDebit],/\\r\\n\" + ",
									"                   pm.globals.get(\"BAI2Transactions\") + ",
									"                   \"49,0,[lineCountAccountLvl]/\\r\\n\" + ",
									"                   \"98,0,1,[lineCountGroupLvl]/\\r\\n\" + ",
									"                   \"99,0,1,[lineCountFileLvl]/\";",
									"        ",
									"        //take some variables local for better readibility",
									"        let totalCredit = pm.globals.get(\"BAI2TotalsCredit\");",
									"        let totalDebit = pm.globals.get(\"BAI2TotalsDebit\");",
									"        let lineCountAccountLvl = pm.globals.get(\"BAI2CounterAccountLines\");",
									"    ",
									"        //fill in values",
									"        stmt = stmt.replace(/(\\[date\\])/g, stmtDate);",
									"        stmt = stmt.replace(/(\\[time\\])/g, \"0730\"); //fix at first",
									"        stmt = stmt.replace(\"[fileID]\", \"1\"); //fix at first",
									"        stmt = stmt.replace(\"[bankRoutingId]\", bankRoutingId);",
									"        stmt = stmt.replace(\"[bankAccId]\", bankAccountId);",
									"        stmt = stmt.replace(\"[openingBalance]\", (Math.round(openingBalance * 100)).toString());",
									"        stmt = stmt.replace(\"[closingBalance]\", (Math.round((openingBalance * 100) + totalCredit - totalDebit)).toString());",
									"        stmt = stmt.replace(\"[totalCredit]\", totalCredit);",
									"        stmt = stmt.replace(\"[lineCountCredit]\", pm.globals.get(\"BAI2CounterCreditLines\"));",
									"        stmt = stmt.replace(\"[totalDebit]\", totalDebit);",
									"        stmt = stmt.replace(\"[lineCountDebit]\", pm.globals.get(\"BAI2CounterDebitLines\"));",
									"        stmt = stmt.replace(\"[lineCountAccountLvl]\", lineCountAccountLvl + 2); // plus header and trailer",
									"        stmt = stmt.replace(\"[lineCountGroupLvl]\", lineCountAccountLvl + 4);",
									"        stmt = stmt.replace(\"[lineCountFileLvl]\", lineCountAccountLvl + 6);",
									"    ",
									"        //clean-up",
									"        pm.globals.unset(\"BAI2Transactions\");",
									"        pm.globals.unset(\"BAI2CounterFileLines\");",
									"        pm.globals.unset(\"BAI2CounterGroupLines\");",
									"        pm.globals.unset(\"BAI2CounterAccountLines\");",
									"        pm.globals.unset(\"BAI2CounterDebitLines\");",
									"        pm.globals.unset(\"BAI2CounterCreditLines\");",
									"        pm.globals.unset(\"BAI2TotalsDebit\");",
									"        pm.globals.unset(\"BAI2TotalsCredit\");",
									"        ",
									"        //return file",
									"        return stmt;",
									"",
									"    };",
									"",
									"    return writer;",
									"",
									"} + '; BAI2StmtWriter();');",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "8757e3f8-0415-434b-8c07-59d14161c0c6",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"Number of due items found: \" + jsonResponse.d.__count, function () { pm.response.to.have.status(200) });",
									"pm.test(\"Number of due items to be cleared: \" + pm.environment.get(\"TotalNumberOfDueItemsToBeCleared\"), function () { pm.response.to.have.status(200) });",
									"pm.test(\"Number of due items to be cleared partially: \" + pm.environment.get(\"MaxNumberOfDueItemsToBeClearedPartially\"), function () { pm.response.to.have.status(200) });",
									"",
									"// Create BAI2 bank statement file from open items",
									"let writer = eval(globals.BAI2StmtWriter);",
									"writer.StartNewStatement();",
									"",
									"// Number of open items to be cleared:",
									"// Compare Params $filter and $orderby: This sample fetches all open items created by this collection and clears the first 3",
									"var numberOfClearedItems = pm.environment.get(\"TotalNumberOfDueItemsToBeCleared\");",
									"var numberOfPartiallyClearedItems = pm.environment.get(\"MaxNumberOfDueItemsToBeClearedPartially\");",
									"var numberOfDueItems = Number(jsonResponse.d.__count);",
									"if (numberOfClearedItems > numberOfDueItems)",
									"    {",
									"        numberOfClearedItems = numberOfDueItems;",
									"    }",
									"if (numberOfPartiallyClearedItems > numberOfClearedItems)",
									"    {",
									"        numberOfPartiallyClearedItems = numberOfClearedItems;",
									"    }",
									"console.log(\"Total number of due items: \" + jsonResponse.d.__count);",
									"console.log(\"Number of due items to be cleared: \" + numberOfClearedItems);",
									"console.log(\"Max. number of due items to be cleared partially: \" + numberOfPartiallyClearedItems);",
									"",
									"// Get open items and create bank statement lines",
									"var clearingAmount = 0.00;",
									"var partialItemIndex = 0;",
									"var randomDecision = 0;",
									"console.log(\"- Start loop -\");",
									"for (let index = 0; index < numberOfClearedItems; index++)",
									"    {",
									"        // Randomly calculate amount to be cleared",
									"        clearingAmount = jsonResponse.d.results[index].KCOPEN_CURRLIT;",
									"        randomDecision = Math.round(Math.random());",
									"        if ( (randomDecision == 1) && (partialItemIndex < numberOfPartiallyClearedItems) )",
									"            {",
									"                partialItemIndex++;",
									"                //clearingAmount = Math.round(Math.random() * clearingAmount);",
									"                clearingAmount = Math.round(0.97 * (clearingAmount * 100)) / 100; // 3% discount",
									"            }",
									"        ",
									"        console.log(\"Open Item index: \" + index          + \" | Open amount: \" + jsonResponse.d.results[index].KCOPEN_CURRLIT);",
									"        console.log(\"Random decision: \" + randomDecision + \" | Cleared amount: \" + clearingAmount);",
									"        console.log(\"External reference: \" + jsonResponse.d.results[index].COED_PARTNER_C + \" | Customer name: \" + jsonResponse.d.results[index].TBUS_PART_UUID);",
									"    ",
									"        //writer.AddIncomingBankTransfer(12.50, \"RECH123\", \"HPA Sweden\");",
									"        writer.AddIncomingBankTransfer(clearingAmount, jsonResponse.d.results[index].COED_PARTNER_C, jsonResponse.d.results[index].TBUS_PART_UUID);",
									"    }",
									"console.log(\"- End loop -\");",
									"",
									"// Set bank statement date and convert date to BAI2 format YYMMDD",
									"var moment = require('moment');",
									"var date = moment.utc(pm.environment.get(\"LastBankStatementDate\"));",
									"console.log(\"Last bank statement date: \" + date);",
									"var today = moment.utc(pm.environment.get(\"$timestamp\"));",
									"console.log(\"Today's date: \" + today);",
									"console.log(\"Today's date (ISO): \" + today.toISOString());",
									"var year = (today.get('year')-2000).toString();",
									"var month = (today.get('month')+1).toString();",
									"if ( month.length == 1 ) { month = \"0\" + month; }",
									"var day = today.get('date').toString();",
									"if ( day.length == 1 ) { day = \"0\" + day; }",
									"var bankStatementDate = year + month + day;",
									"console.log(\"Bank statement date: \" + bankStatementDate);",
									"pm.environment.set(\"LastBankStatementDate\", bankStatementDate);",
									"",
									"// writer.Finalize = function Finalize(bankAccountId, stmtDate \"181211\", openingBalance 222.23)",
									"pm.environment.set(\"BAI2-BankStatementFile\", writer.Finalize(pm.environment.get(\"HouseBankAccountID\"), pm.environment.get(\"HouseBankRoutingID\"), bankStatementDate, parseFloat(pm.environment.get(\"LastBankStatementClosingBalanceAmount\"))));",
									"",
									"console.log(\"BAI2-file:\");",
									"console.log(pm.environment.get(\"BAI2-BankStatementFile\"));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/fin_receivablesar_analytics.svc/RPFINGLAU08_Q0002QueryResults?$inlinecount=allpages&$top={{TotalNumberOfDueItemsToBeCleared}}&$format=json&$select=CBUS_PART_UUID,TBUS_PART_UUID,FCCRL_CURRLIT,CCOMPANY_UUID,TCOMPANY_UUID,CIM_DUN_LEVEL,CSP_CDT_M_DATE,CSP_CDT_F_DATE,FCOPEN_CURRLIT,CFISCAL_YEAR_ID,CACC_PERIOD_ID,CPOSTING_DATE,COED_PARTNER_C,COED_REF_F_ID,COED_OBJ_TC_C,TOED_OBJ_TC_C,COED_CREA_DATE,CIM_OP_IT_STAT,TIM_OP_IT_STAT,KCCRL_CURRLIT,KCOPEN_CURRLIT,RCOPEN_CURRLIT&$filter=PARA_COMPANY eq '{{CompanyID}}' and PARA_SETOFBKS eq '{{SetOfBooks}}' and PARA_IM_SUB_TYPE_C eq '1' and PARA_KEYDATE eq datetime'{{OpenItemsKeyDate}}' and COED_PARTNER_C eq '{{ExternalReferencePrefix}}*'&$orderby=COED_PARTNER_C desc",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"fin_receivablesar_analytics.svc",
								"RPFINGLAU08_Q0002QueryResults"
							],
							"query": [
								{
									"key": "$inlinecount",
									"value": "allpages"
								},
								{
									"key": "$top",
									"value": "{{TotalNumberOfDueItemsToBeCleared}}"
								},
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "$select",
									"value": "CBUS_PART_UUID,TBUS_PART_UUID,FCCRL_CURRLIT,CCOMPANY_UUID,TCOMPANY_UUID,CIM_DUN_LEVEL,CSP_CDT_M_DATE,CSP_CDT_F_DATE,FCOPEN_CURRLIT,CFISCAL_YEAR_ID,CACC_PERIOD_ID,CPOSTING_DATE,COED_PARTNER_C,COED_REF_F_ID,COED_OBJ_TC_C,TOED_OBJ_TC_C,COED_CREA_DATE,CIM_OP_IT_STAT,TIM_OP_IT_STAT,KCCRL_CURRLIT,KCOPEN_CURRLIT,RCOPEN_CURRLIT"
								},
								{
									"key": "$filter",
									"value": "PARA_COMPANY eq '{{CompanyID}}' and PARA_SETOFBKS eq '{{SetOfBooks}}' and PARA_IM_SUB_TYPE_C eq '1' and PARA_KEYDATE eq datetime'{{OpenItemsKeyDate}}' and COED_PARTNER_C eq '{{ExternalReferencePrefix}}*'",
									"description": "PARA_COMPANY eq '{{CompanyID}}' and PARA_SETOFBKS eq '{{SetOfBooks}}' and PARA_CUSTOMER eq '{{CustomerID}}' and PARA_IM_SUB_TYPE_C eq '1' and PARA_KEYDATE eq datetime'{{OpenItemsKeyDate}}' and COED_PARTNER_C eq '{{ExternalReferencePrefix}}*'"
								},
								{
									"key": "$orderby",
									"value": "COED_PARTNER_C desc",
									"description": "\"$orderby = CSP_CDT_F_DATE desc\" does not work"
								}
							]
						},
						"description": "Report: Accounts Receivable - Open Items (FINGLAU08_Q0002)"
					},
					"response": []
				},
				{
					"name": "Query house bank account",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6abbca20-e715-4e12-83bf-4f59a566f089",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"pm.environment.set(\"HouseBankUUID\", jsonResponse.d.results[0].HouseBankUUID);",
									"pm.environment.set(\"HouseBankAccountObjectID\", jsonResponse.d.results[0].ObjectID);",
									"",
									"// Validations",
									"pm.test(\"House bank account found \" + jsonResponse.d.results[0].BankAccountID + \" found\", function () { pm.response.to.have.status(200) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khhousebankaccount/HouseBankAccountQueryByElements?NumberOfRows='20'&CompanyID='{{CompanyID}}'&LifeCycleStatusCode='3'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khhousebankaccount",
								"HouseBankAccountQueryByElements"
							],
							"query": [
								{
									"key": "NumberOfRows",
									"value": "'20'"
								},
								{
									"key": "StartRow",
									"value": "'5'",
									"disabled": true
								},
								{
									"key": "CompanyID",
									"value": "'{{CompanyID}}'"
								},
								{
									"key": "LifeCycleStatusCode",
									"value": "'3'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get house bank account",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6abbca20-e715-4e12-83bf-4f59a566f089",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"pm.test(\"House bank account details retrieved\", function () { pm.response.to.have.status(200) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khhousebankaccount/HouseBankAccountCollection('{{HouseBankAccountObjectID}}')?$expand=Description,HouseBank,HouseBank/BankDirectoryEntry,HouseBank/BankDirectoryEntry/BankDirectoryEntryBranch,HouseBank/BankDirectoryEntry/NationalBankIdentification",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khhousebankaccount",
								"HouseBankAccountCollection('{{HouseBankAccountObjectID}}')"
							],
							"query": [
								{
									"key": "$expand",
									"value": "Description,HouseBank,HouseBank/BankDirectoryEntry,HouseBank/BankDirectoryEntry/BankDirectoryEntryBranch,HouseBank/BankDirectoryEntry/NationalBankIdentification"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Query company payment file register",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6abbca20-e715-4e12-83bf-4f59a566f089",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"pm.environment.set(\"CompanyPaymentFileRegisterObjectID\", jsonResponse.d.results[0].ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Company payment file register for company \" + pm.environment.get(\"CompanyID\") + \" found\", function () { pm.response.to.have.status(200) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcompanypaymentfileregister/QueryByCompany?NumberOfRows='20'&CompanyID='{{CompanyID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcompanypaymentfileregister",
								"QueryByCompany"
							],
							"query": [
								{
									"key": "NumberOfRows",
									"value": "'20'"
								},
								{
									"key": "StartRow",
									"value": "'5'",
									"disabled": true
								},
								{
									"key": "CompanyID",
									"value": "'{{CompanyID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get company payment file register",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6abbca20-e715-4e12-83bf-4f59a566f089",
								"exec": [
									"",
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"pm.test(\"Company payment file register and last inbound files for company \" + pm.environment.get(\"CompanyID\") + \" retrieved\", function () { pm.response.to.have.status(200) });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcompanypaymentfileregister/CompanyPaymentFileRegisterCollection('{{CompanyPaymentFileRegisterObjectID}}')?$expand=IncomingFile",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcompanypaymentfileregister",
								"CompanyPaymentFileRegisterCollection('{{CompanyPaymentFileRegisterObjectID}}')"
							],
							"query": [
								{
									"key": "$expand",
									"value": "IncomingFile"
								},
								{
									"key": "$select",
									"value": "IncomingFile/HouseBankUUID",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create bank statement as incoming file",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a0b9bbf9-6725-4134-89e9-f2347dde8747",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"IncomingFileObjectID\", jsonResponse.d.results.ObjectID);",
									"",
									"// Validations",
									"pm.test(\"Bank statement created as inbound file\", function () { pm.response.to.have.status(201) });",
									"pm.test(\"Incoming file status: New\", function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"1\") });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8c48396a-8f50-4024-8dfa-a3c7594fd8a6",
								"exec": [
									"var cryptoJS = require(\"crypto-js\");\r",
									"\r",
									"// Base64 encode the bank statement file string\r",
									"var rawContent = cryptoJS.enc.Utf8.parse(pm.environment.get(\"BAI2-BankStatementFile\"));\r",
									"var base64Content = cryptoJS.enc.Base64.stringify(rawContent);\r",
									"pm.environment.set(\"BAI2-BankStatementFile-base64\", base64Content);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"ParentObjectID\": \"{{CompanyPaymentFileRegisterObjectID}}\",\n\t\"HouseBankUUID\": \"{{HouseBankUUID}}\",\n\t\"ContentTypeCode\": \"1\",\n\t\"AttachmentFolder\": \n\t\t[\n\t\t\t{\n\t\t\t\t\"CategoryCode\": \"2\",\n\t\t\t\t\"TypeCode\": \"10001\",\n\t\t\t\t\"Title\": \"Reference Scenario Bank Statement {{$timestamp}}\",\n\t\t\t\t\"Name\": \"BAI2_Bank_Statement_{{$timestamp}}.txt\",\n\t\t\t\t\"MimeType\": \"text/plain\",\n\t\t\t\t\"Binary\": \"{{BAI2-BankStatementFile-base64}}\"\n\t\t\t}\n\t\t]\n}"
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcompanypaymentfileregister/IncomingFileCollection",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcompanypaymentfileregister",
								"IncomingFileCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Start payment update",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b54faab5-424f-444a-9ce5-6aa8297099ad",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"",
									"// Validations",
									"pm.test(\"File upload of bank statement inbound file stated\", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Incoming file status: Finished\", function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"6\") });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "{{x-csrf-token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcompanypaymentfileregister/StartPaymentUpdate?ObjectID='{{IncomingFileObjectID}}'",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcompanypaymentfileregister",
								"StartPaymentUpdate"
							],
							"query": [
								{
									"key": "ObjectID",
									"value": "'{{IncomingFileObjectID}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get incoming file",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6abbca20-e715-4e12-83bf-4f59a566f089",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"pm.test(\"Incomming file retrieved\", function () { pm.response.to.have.status(200) });",
									"pm.test(\"Incoming file status: \" + jsonResponse.d.results.LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.be.oneOf([\"1\",\"2\",\"4\",\"6\",\"7\"]) });",
									"//pm.test(\"Incoming file status: New\", function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"1\") });",
									"//pm.test(\"Incoming file status: Uploaded\", function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"2\") });",
									"//pm.test(\"Incoming file status: Released\", function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"4\") });",
									"//pm.test(\"Incoming file status: Finished\", function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"6\") });",
									"//pm.test(\"Incoming file status: In process\", function () { pm.expect(jsonResponse.d.results.LifeCycleStatusCode).to.eql(\"7\") });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ff74d5bf-5f46-47f2-a699-d12bf2ddc3da",
								"exec": [
									"// Delay and let the system complete the file upload",
									"//setTimeout(function() {}, 5000); // wait 3 sec"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khcompanypaymentfileregister/IncomingFileCollection('{{IncomingFileObjectID}}')?$expand=AttachmentFolder",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khcompanypaymentfileregister",
								"IncomingFileCollection('{{IncomingFileObjectID}}')"
							],
							"query": [
								{
									"key": "$expand",
									"value": "AttachmentFolder"
								},
								{
									"key": "$select",
									"value": "IncomingFile/HouseBankUUID",
									"disabled": true
								},
								{
									"key": "$filter",
									"value": "ID eq '25'",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get bank statement",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4530b231-dcf4-4213-a5b0-ddc302f05671",
								"exec": [
									"var jsonResponse = pm.response.json();",
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validate response",
									"pm.test(\"Bank statement \" + jsonResponse.d.results[0].ID + \" retrieved\", function () { pm.response.to.have.status(200) });",
									"let bankStatementID = +pm.environment.get(\"LastBankStatementID\") + 1; // '+' converts string to integer",
									"pm.test(\"Bank statement ID ... ok\", function () { pm.expect(jsonResponse.d.results[0].ID).to.eql(bankStatementID.toString()) });",
									"pm.test(\"Opening balance amount ... ok\", function () { pm.expect(jsonResponse.d.results[0].OpeningBalanceAmount).to.eql(pm.environment.get(\"LastBankStatementClosingBalanceAmount\")) });",
									"",
									"pm.test(\"Bank statement status: \" + jsonResponse.d.results[0].LifeCycleStatusCodeText, function () { pm.expect(jsonResponse.d.results[0].LifeCycleStatusCode).to.be.oneOf([\"1\",\"2\"]) });",
									"//pm.test(\"Bank statement status: In preparation\", function () { pm.expect(jsonResponse.d.results[0].LifeCycleStatusCode).to.eql(\"1\") });",
									"//pm.test(\"Bank statement status: Posted\", function () { pm.expect(jsonResponse.d.results[0].LifeCycleStatusCode).to.eql(\"2\") });",
									"",
									"pm.test(\"Post processing: \" + jsonResponse.d.results[0].OverallPostprocessingCodeText, function () { pm.expect(jsonResponse.d.results[0].OverallPostprocessingCode).to.be.oneOf([\"1\",\"2\",\"4\"]) });",
									"//pm.test(\"Postprocessing: Not relevant\", function () { pm.expect(jsonResponse.d.results[0].OverallPostprocessingCode).to.eql(\"4\") });",
									"//pm.test(\"Postprocessing: In Process\", function () { pm.expect(jsonResponse.d.results[0].OverallPostprocessingCode).to.eql(\"2\") });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "b3104f97-6b51-45d9-b75c-e93d5dbf90a5",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"type": "text",
								"value": "fetch"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khhousebankstatement/HouseBankStatementCollection?$filter=HouseBankAccountID eq '{{HouseBankAccountID}}'&$format=json&$orderby=ValidityYear desc, ID desc&$top=1",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khhousebankstatement",
								"HouseBankStatementCollection"
							],
							"query": [
								{
									"key": "$filter",
									"value": "HouseBankAccountID eq '{{HouseBankAccountID}}'",
									"description": "ValidityYear eq '{{FiscalYear}}' and HouseBankAccountID eq '{{HouseBankAccountID}}'"
								},
								{
									"key": "$format",
									"value": "json",
									"description": "HouseBankAccountID eq '{{HouseBankAccountID}}' and LifeCycleStatusCode eq '5'"
								},
								{
									"key": "$orderby",
									"value": "ValidityYear desc, ID desc"
								},
								{
									"key": "$top",
									"value": "1"
								}
							]
						},
						"description": "Request predecessor bank statement to get closing balance and date."
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "e695c091-5dba-4b55-a27b-4d0cb307a83a",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "c965ad62-205d-4b36-9222-755dce74e518",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Metadata and code lists",
			"item": [
				{
					"name": "Get metadata",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5e62e94d-f718-4db5-86fa-22e27ebb5825",
								"exec": [
									"pm.environment.set(\"x-csrf-token\", postman.getResponseHeader(\"x-csrf-token\"));",
									"",
									"// Validations",
									"pm.test(\"200 - Response OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Cross site request forgery token:  received\", function () {",
									"    pm.response.to.have.header(\"x-csrf-token\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4b5f4d9c-55db-4cb2-a6b6-ffc9e31c7d2b",
								"exec": [
									"//Initialize dynamic environment variables",
									"pm.environment.set(\"x-csrf-token\", \"\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-csrf-token",
								"value": "fetch"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khbankstatementfileinput/$metadata",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khbankstatementfileinput",
								"$metadata"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get report metadata",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/fin_receivablesar_analytics.svc/$metadata?entityset=RPFINGLAU08_Q0002QueryResults",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"fin_receivablesar_analytics.svc",
								"$metadata"
							],
							"query": [
								{
									"key": "entityset",
									"value": "RPFINGLAU08_Q0002QueryResults"
								}
							]
						},
						"description": "Report: Accounts Receivable - Open Items (FINGLAU08_Q0002)"
					},
					"response": []
				},
				{
					"name": "Get code list - item processing types (Param: sap-language)",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khsalesorder/SalesOrderItemProcessingTypeCodeCollection?$format=json&sap-language=de",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khsalesorder",
								"SalesOrderItemProcessingTypeCodeCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "sap-language",
									"value": "de"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get code list - item processing types (Header: Accept-Language)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept-Language",
								"value": "de",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{TenantHostname}}/sap/byd/odata/cust/v1/khsalesorder/SalesOrderItemProcessingTypeCodeCollection?$format=json",
							"protocol": "https",
							"host": [
								"{{TenantHostname}}"
							],
							"path": [
								"sap",
								"byd",
								"odata",
								"cust",
								"v1",
								"khsalesorder",
								"SalesOrderItemProcessingTypeCodeCollection"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								},
								{
									"key": "sap-language",
									"value": "en",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "156143f9-c7c8-4bc6-afeb-decb54e73853",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "eabbbae1-eefa-455c-bba6-1856d6e26ed1",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "{{Password}}",
				"type": "string"
			},
			{
				"key": "username",
				"value": "{{User}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "0d738498-9124-467c-914b-70a84f6449ec",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "f7655c14-c414-4113-8ca2-6ad16bacffea",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}